name: DESCAM-BUILD

on: [push, pull_request]

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-16.04, ubuntu-18.04]
    env:
      CMAKE_BIN: "cmake"
      PYTHON3: "python3"
    steps:
      - uses: actions/checkout@v1
      - name: Build System Generation
        run: cd $GITHUB_WORKSPACE && mkdir build && cd build && $CMAKE_BIN ../
      #- name: Build SYSTEMC
      #  run: $CMAKE_BIN --build $GITHUB_WORKSPACE/build/ --target SYSTEMC -- -j4
      #- name: Build GTEST
      #  run: $CMAKE_BIN --build $GITHUB_WORKSPACE/build/ --target GTEST -- -j4
      #- name: Build Z3
      #  run: $CMAKE_BIN --build $GITHUB_WORKSPACE/build/ --target Z3 -- -j4
      #- name: Build LLVM/CLANG
      #  run: $CMAKE_BIN --build $GITHUB_WORKSPACE/build/ --target LLVM -- -j4
      - name: Build DESCAM
        run: $CMAKE_BIN --build $GITHUB_WORKSPACE/build/ --target DESCAM -- -j 4
      - name: Build Tests
        run: |
          $CMAKE_BIN --build $GITHUB_WORKSPACE/build/ --target PrintITL_Test_Run -- -j4
          $CMAKE_BIN --build $GITHUB_WORKSPACE/build/ --target PrintSkeleton_Test_Run -- -j4
      - name: Run Tests
        run: |
          $GITHUB_WORKSPACE/bin/PrintITL_Test_Run
          $GITHUB_WORKSPACE/bin/PrintSkeleton_Test_Run
      - name: Clean up
        run: rm -rf $GITHUB_WORKSPACE/build


