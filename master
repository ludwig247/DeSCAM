#!/bin/bash

#Updating System and installing basic packages
apt-get update
apt-get install -y fuse
apt-get install -y unionfs-fuse

#Relocating Files
cd /root/

##Initializing temporal environment
#./tempenv.sh setup
#./tempenv.sh start

#Installing dependencies
apt-get install -y cmake gcc g++ unzip sed software-properties-common libtinfo-dev 
add-apt-repository ppa:deadsnakes/ppa
apt-get update
apt-get install -y python3.7
apt-get install -y python3-distutils

#Building DeSCAM
cd /root/DeSCAM
mkdir build && cd build
cmake ../
cmake --build . --target SCAM -- -j 4

#Preparing System files
mv /root/AppImage /
cp -rf -P /etc /AppImage/
cp -rf -P /lib /AppImage/
cp -rf -P /root /AppImage/
cp -rf -P /sbin /AppImage/
cp -rf -P /tmp /AppImage/
cp -rf -P /usr /AppImage/
cp -rf -P /var /AppImage/
mv /AppImage /root/

#Filtering unneeded files
cd /root/
mv /root/AppImage/test /root/
mv /root/AppImage/appimagetool-x86_64.AppImage /root/
rm -rf /root/AppImage/root/DeSCAM/install/tmp
rm -rf /root/AppImage/root/DeSCAM/build/3rdparty
rm -rf /root/AppImage/root/DeSCAM/tests
rm -rf /root/AppImage/tempenv.sh

#Trick: Place the binary on a convenient folder and patch it
mv /root/AppImage/root/DeSCAM/bin/DESCAM /root/AppImage/usr/bin/
sed -i -e 's|/usr|././|g' /root/AppImage/usr/bin/DESCAM

#Create AppImage
export ARCH=x86_64
/root/appimagetool-x86_64.AppImage ./AppImage/
mv DeSCAM-x86_64.AppImage DeSCAM_v
du -sh DeSCAM_v

#Validate ApptImage
mkdir outputs
ls -l
./DeSCAM_v --file /root/test/uart_transmitter.h --output /root/outputs -PrintSkeleton
