#!/bin/bash

#Relocating
cd /root/

#Initializing temporal environment
mv /root/AppImage/tempenv.sh /root/
chmod +x /root/tempenv.sh
/root/tempenv.sh setup
/root/tempenv.sh start #This function will execute the installer script inside the Container 

#Preparing System files
##Just check steps
du -sh /root/tempenv/files
ls /root/tempenv/files -l
##Copy all the files captured by the Temporal File System
cp -rf /root/tempenv/files/* /root/AppImage/
##Just a check step
ls /root/AppImage
##Move Binary to bin folder (default path for compatibility with AppImage)
mv /root/AppImage/root/DeSCAM/bin/DESCAM /root/AppImage/usr/bin/
##Patch the absolute paths of the binary
sed -i -e 's|/usr|././|g' /root/AppImage/usr/bin/DESCAM
##Filter unneeded files
rm -rf /root/AppImage/root/DeSCAM/install/tmp
rm -rf /root/AppImage/root/DeSCAM/build/3rdparty
##Move the AppImage Generator and files for test
mv /root/AppImage/appimagetool-x86_64.AppImage /root/
mv /root/AppImage/test /root/

#Patch broken links
#Note: Somehow no all libraries used are captured by the script
##libstdc
cp /usr/lib/x86_64-linux-gnu/libstdc++.so.6 /root/AppImage/usr/lib/x86_64-linux-gnu/
##libtinfo
cp /lib/x86_64-linux-gnu/libtinfo.so.5 /root/AppImage/lib/x86_64-linux-gnu/
rm /root/AppImage/usr/lib/x86_64-linux-gnu/libtinfo.so
cd /root/AppImage/usr/lib/x86_64-linux-gnu/
ln ../../../lib/x86_64-linux-gnu/libtinfo.so.5 libtinfo.so

#Create AppImage
cd /root/
export ARCH=x86_64
/root/appimagetool-x86_64.AppImage ./AppImage/
mv DeSCAM-x86_64.AppImage DeSCAM_v
du -sh DeSCAM_v

#Validate AppImage
mkdir outputs
ls -l
./DeSCAM_v --file /root/test/uart_transmitter.h --output /root/outputs -PrintSkeleton
