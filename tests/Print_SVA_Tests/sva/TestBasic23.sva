`define next_shift_amount 0 //IN CASE OF REQUIRED SIGNALS VALUES IN THE FUTURE, SHIFT YOUR ENTIRE TIMING BY THIS FACTOR

`include "ipc.sva"
`include "globalTypes.sva"
`include "TestBasic23_types.sva"
`include "TestBasic23_functions.sva"

import top_level_types::*;

module TestBasic23_verification(reset);

input reset;

//DESIGNER SHOULD PAY ATTENTION FOR USING THE MODEL CORRECT NAME TO REFER TO THE CLK SIGNAL USED IN IT
default clocking default_clk @(posedge TestBasic23.clk); endclocking
`include "TestBasic23_macros.sva"

////////////////////////////////////
//////////// Operations ////////////
////////////////////////////////////

sequence reset_sequence;
reset ##1 !reset;  	//DESIGNER REFER TO MODEL RESET SIGNAL HERE
endsequence

property reset_p;
	reset_sequence |->
	t##0 state_1() and
	t##0 b_out_sig() == 3 and
	t##0 phase() == SECTION_A and
	t##0 val_signed() == -7 and
	t##0 val_unsigned() == 13 and
	t##0 b_out_notify() == 1 and
	t##0 b_out2_notify() == 0;
endproperty
reset_a: assert property (reset_p);



property state_1_1_p(o);
 bit[31:0] phase_f;
 bit[31:0] val_signed_f;
 bit[31:0] val_unsigned_f;
	t ##0 hold(phase_f, phase()) and
	t ##0 hold(val_signed_f, val_signed()) and
	t ##0 hold(val_unsigned_f, val_unsigned()) and
	t##0 state_1() and
	t##0 b_out_sync()
implies
	t_end(o)##0 state_2() and
	t_end(o)##0 b_out_sig() == (val_unsigned_f<<2) and
	t_end(o)##0 phase() == phase_f and
	t_end(o)##0 val_signed() == val_signed_f and
	t_end(o)##0 val_unsigned() == val_unsigned_f and
	during_o (t, 1, t_end(o), -1, b_out_notify() == 0) and
	t_end(o)##0 b_out_notify() == 1 and
	during_o (t, 1, t_end(o), 0, b_out2_notify() == 0);
endproperty;
state_1_1_a: assert property (disable iff (reset) state_1_1_p(1)); //ASSIGN t_end offset here



property state_2_2_p(o);
 bit[31:0] phase_f;
 bit[31:0] val_signed_f;
 bit[31:0] val_unsigned_f;
	t ##0 hold(phase_f, phase()) and
	t ##0 hold(val_signed_f, val_signed()) and
	t ##0 hold(val_unsigned_f, val_unsigned()) and
	t##0 state_2() and
	t##0 b_out_sync()
implies
	t_end(o)##0 state_3() and
	t_end(o)##0 b_out_sig() == (val_unsigned_f & 2) and
	t_end(o)##0 phase() == phase_f and
	t_end(o)##0 val_signed() == val_signed_f and
	t_end(o)##0 val_unsigned() == val_unsigned_f and
	during_o (t, 1, t_end(o), -1, b_out_notify() == 0) and
	t_end(o)##0 b_out_notify() == 1 and
	during_o (t, 1, t_end(o), 0, b_out2_notify() == 0);
endproperty;
state_2_2_a: assert property (disable iff (reset) state_2_2_p(1)); //ASSIGN t_end offset here



property state_3_3_p(o);
 bit[31:0] phase_f;
 bit[31:0] val_signed_f;
 bit[31:0] val_unsigned_f;
	t ##0 hold(phase_f, phase()) and
	t ##0 hold(val_signed_f, val_signed()) and
	t ##0 hold(val_unsigned_f, val_unsigned()) and
	t##0 state_3() and
	t##0 b_out_sync()
implies
	t_end(o)##0 state_4() and
	t_end(o)##0 b_out_sig() == (val_unsigned_f | 2) and
	t_end(o)##0 phase() == phase_f and
	t_end(o)##0 val_signed() == val_signed_f and
	t_end(o)##0 val_unsigned() == val_unsigned_f and
	during_o (t, 1, t_end(o), -1, b_out_notify() == 0) and
	t_end(o)##0 b_out_notify() == 1 and
	during_o (t, 1, t_end(o), 0, b_out2_notify() == 0);
endproperty;
state_3_3_a: assert property (disable iff (reset) state_3_3_p(1)); //ASSIGN t_end offset here



property state_4_10_p(o);
 bit[31:0] val_signed_f;
 bit[31:0] val_unsigned_f;
	t ##0 hold(val_signed_f, val_signed()) and
	t ##0 hold(val_unsigned_f, val_unsigned()) and
	t##0 state_4() and
	t##0 b_out_sync() and
	t##0 !(((val_unsigned() % 2) == 0)) and
	t##0 ((val_unsigned() & 2) == 0) and
	t##0 !(((val_unsigned()>>2) == 0)) and
	t##0 !(((val_unsigned()<<2) == 0)) and
	t##0 !((phase() == SECTION_B))
implies
	t_end(o)##0 state_5() and
	t_end(o)##0 b_out2_sig() == (val_signed_f>>2) and
	t_end(o)##0 phase() == SECTION_B and
	t_end(o)##0 val_signed() == val_signed_f and
	t_end(o)##0 val_unsigned() == val_unsigned_f and
	during_o (t, 1, t_end(o), 0, b_out_notify() == 0) and
	during_o (t, 1, t_end(o), -1, b_out2_notify() == 0) and
	t_end(o)##0 b_out2_notify() == 1;
endproperty;
state_4_10_a: assert property (disable iff (reset) state_4_10_p(1)); //ASSIGN t_end offset here



property state_4_11_p(o);
 bit[31:0] val_signed_f;
 bit[31:0] val_unsigned_f;
	t ##0 hold(val_signed_f, val_signed()) and
	t ##0 hold(val_unsigned_f, val_unsigned()) and
	t##0 state_4() and
	t##0 b_out_sync() and
	t##0 !(((val_unsigned() % 2) == 0)) and
	t##0 !(((val_unsigned() & 2) == 0)) and
	t##0 ((val_unsigned()>>2) == 0) and
	t##0 !(((val_unsigned()<<2) == 0)) and
	t##0 !((phase() == SECTION_B))
implies
	t_end(o)##0 state_5() and
	t_end(o)##0 b_out2_sig() == (val_signed_f>>2) and
	t_end(o)##0 phase() == SECTION_B and
	t_end(o)##0 val_signed() == val_signed_f and
	t_end(o)##0 val_unsigned() == val_unsigned_f and
	during_o (t, 1, t_end(o), 0, b_out_notify() == 0) and
	during_o (t, 1, t_end(o), -1, b_out2_notify() == 0) and
	t_end(o)##0 b_out2_notify() == 1;
endproperty;
state_4_11_a: assert property (disable iff (reset) state_4_11_p(1)); //ASSIGN t_end offset here



property state_4_12_p(o);
 bit[31:0] val_signed_f;
 bit[31:0] val_unsigned_f;
	t ##0 hold(val_signed_f, val_signed()) and
	t ##0 hold(val_unsigned_f, val_unsigned()) and
	t##0 state_4() and
	t##0 b_out_sync() and
	t##0 !(((val_unsigned() % 2) == 0)) and
	t##0 !(((val_unsigned() & 2) == 0)) and
	t##0 !(((val_unsigned()>>2) == 0)) and
	t##0 !(((val_unsigned()<<2) == 0)) and
	t##0 !((phase() == SECTION_B))
implies
	t_end(o)##0 state_5() and
	t_end(o)##0 b_out2_sig() == (val_signed_f>>2) and
	t_end(o)##0 phase() == SECTION_B and
	t_end(o)##0 val_signed() == val_signed_f and
	t_end(o)##0 val_unsigned() == val_unsigned_f and
	during_o (t, 1, t_end(o), 0, b_out_notify() == 0) and
	during_o (t, 1, t_end(o), -1, b_out2_notify() == 0) and
	t_end(o)##0 b_out2_notify() == 1;
endproperty;
state_4_12_a: assert property (disable iff (reset) state_4_12_p(1)); //ASSIGN t_end offset here



property state_4_4_p(o);
 bit[31:0] val_signed_f;
 bit[31:0] val_unsigned_f;
	t ##0 hold(val_signed_f, val_signed()) and
	t ##0 hold(val_unsigned_f, val_unsigned()) and
	t##0 state_4() and
	t##0 b_out_sync() and
	t##0 ((val_unsigned() % 2) == 0) and
	t##0 ((val_unsigned() & 2) == 0) and
	t##0 ((val_unsigned()>>2) == 0) and
	t##0 ((val_unsigned()<<2) == 0) and
	t##0 !((phase() == SECTION_B))
implies
	t_end(o)##0 state_5() and
	t_end(o)##0 b_out2_sig() == (val_signed_f>>2) and
	t_end(o)##0 phase() == SECTION_B and
	t_end(o)##0 val_signed() == val_signed_f and
	t_end(o)##0 val_unsigned() == val_unsigned_f and
	during_o (t, 1, t_end(o), 0, b_out_notify() == 0) and
	during_o (t, 1, t_end(o), -1, b_out2_notify() == 0) and
	t_end(o)##0 b_out2_notify() == 1;
endproperty;
state_4_4_a: assert property (disable iff (reset) state_4_4_p(1)); //ASSIGN t_end offset here



property state_4_5_p(o);
 bit[31:0] val_signed_f;
 bit[31:0] val_unsigned_f;
	t ##0 hold(val_signed_f, val_signed()) and
	t ##0 hold(val_unsigned_f, val_unsigned()) and
	t##0 state_4() and
	t##0 b_out_sync() and
	t##0 ((val_unsigned() % 2) == 0) and
	t##0 ((val_unsigned() & 2) == 0) and
	t##0 !(((val_unsigned()>>2) == 0)) and
	t##0 ((val_unsigned()<<2) == 0) and
	t##0 !((phase() == SECTION_B))
implies
	t_end(o)##0 state_5() and
	t_end(o)##0 b_out2_sig() == (val_signed_f>>2) and
	t_end(o)##0 phase() == SECTION_B and
	t_end(o)##0 val_signed() == val_signed_f and
	t_end(o)##0 val_unsigned() == val_unsigned_f and
	during_o (t, 1, t_end(o), 0, b_out_notify() == 0) and
	during_o (t, 1, t_end(o), -1, b_out2_notify() == 0) and
	t_end(o)##0 b_out2_notify() == 1;
endproperty;
state_4_5_a: assert property (disable iff (reset) state_4_5_p(1)); //ASSIGN t_end offset here



property state_4_6_p(o);
 bit[31:0] val_signed_f;
 bit[31:0] val_unsigned_f;
	t ##0 hold(val_signed_f, val_signed()) and
	t ##0 hold(val_unsigned_f, val_unsigned()) and
	t##0 state_4() and
	t##0 b_out_sync() and
	t##0 ((val_unsigned() % 2) == 0) and
	t##0 ((val_unsigned() & 2) == 0) and
	t##0 !(((val_unsigned()>>2) == 0)) and
	t##0 !(((val_unsigned()<<2) == 0)) and
	t##0 !((phase() == SECTION_B))
implies
	t_end(o)##0 state_5() and
	t_end(o)##0 b_out2_sig() == (val_signed_f>>2) and
	t_end(o)##0 phase() == SECTION_B and
	t_end(o)##0 val_signed() == val_signed_f and
	t_end(o)##0 val_unsigned() == val_unsigned_f and
	during_o (t, 1, t_end(o), 0, b_out_notify() == 0) and
	during_o (t, 1, t_end(o), -1, b_out2_notify() == 0) and
	t_end(o)##0 b_out2_notify() == 1;
endproperty;
state_4_6_a: assert property (disable iff (reset) state_4_6_p(1)); //ASSIGN t_end offset here



property state_4_7_p(o);
 bit[31:0] val_signed_f;
 bit[31:0] val_unsigned_f;
	t ##0 hold(val_signed_f, val_signed()) and
	t ##0 hold(val_unsigned_f, val_unsigned()) and
	t##0 state_4() and
	t##0 b_out_sync() and
	t##0 ((val_unsigned() % 2) == 0) and
	t##0 !(((val_unsigned() & 2) == 0)) and
	t##0 ((val_unsigned()>>2) == 0) and
	t##0 !(((val_unsigned()<<2) == 0)) and
	t##0 !((phase() == SECTION_B))
implies
	t_end(o)##0 state_5() and
	t_end(o)##0 b_out2_sig() == (val_signed_f>>2) and
	t_end(o)##0 phase() == SECTION_B and
	t_end(o)##0 val_signed() == val_signed_f and
	t_end(o)##0 val_unsigned() == val_unsigned_f and
	during_o (t, 1, t_end(o), 0, b_out_notify() == 0) and
	during_o (t, 1, t_end(o), -1, b_out2_notify() == 0) and
	t_end(o)##0 b_out2_notify() == 1;
endproperty;
state_4_7_a: assert property (disable iff (reset) state_4_7_p(1)); //ASSIGN t_end offset here



property state_4_8_p(o);
 bit[31:0] val_signed_f;
 bit[31:0] val_unsigned_f;
	t ##0 hold(val_signed_f, val_signed()) and
	t ##0 hold(val_unsigned_f, val_unsigned()) and
	t##0 state_4() and
	t##0 b_out_sync() and
	t##0 ((val_unsigned() % 2) == 0) and
	t##0 !(((val_unsigned() & 2) == 0)) and
	t##0 !(((val_unsigned()>>2) == 0)) and
	t##0 !(((val_unsigned()<<2) == 0)) and
	t##0 !((phase() == SECTION_B))
implies
	t_end(o)##0 state_5() and
	t_end(o)##0 b_out2_sig() == (val_signed_f>>2) and
	t_end(o)##0 phase() == SECTION_B and
	t_end(o)##0 val_signed() == val_signed_f and
	t_end(o)##0 val_unsigned() == val_unsigned_f and
	during_o (t, 1, t_end(o), 0, b_out_notify() == 0) and
	during_o (t, 1, t_end(o), -1, b_out2_notify() == 0) and
	t_end(o)##0 b_out2_notify() == 1;
endproperty;
state_4_8_a: assert property (disable iff (reset) state_4_8_p(1)); //ASSIGN t_end offset here



property state_4_9_p(o);
 bit[31:0] val_signed_f;
 bit[31:0] val_unsigned_f;
	t ##0 hold(val_signed_f, val_signed()) and
	t ##0 hold(val_unsigned_f, val_unsigned()) and
	t##0 state_4() and
	t##0 b_out_sync() and
	t##0 !(((val_unsigned() % 2) == 0)) and
	t##0 ((val_unsigned() & 2) == 0) and
	t##0 ((val_unsigned()>>2) == 0) and
	t##0 !(((val_unsigned()<<2) == 0)) and
	t##0 !((phase() == SECTION_B))
implies
	t_end(o)##0 state_5() and
	t_end(o)##0 b_out2_sig() == (val_signed_f>>2) and
	t_end(o)##0 phase() == SECTION_B and
	t_end(o)##0 val_signed() == val_signed_f and
	t_end(o)##0 val_unsigned() == val_unsigned_f and
	during_o (t, 1, t_end(o), 0, b_out_notify() == 0) and
	during_o (t, 1, t_end(o), -1, b_out2_notify() == 0) and
	t_end(o)##0 b_out2_notify() == 1;
endproperty;
state_4_9_a: assert property (disable iff (reset) state_4_9_p(1)); //ASSIGN t_end offset here



property state_5_13_p(o);
 bit[31:0] phase_f;
 bit[31:0] val_signed_f;
 bit[31:0] val_unsigned_f;
	t ##0 hold(phase_f, phase()) and
	t ##0 hold(val_signed_f, val_signed()) and
	t ##0 hold(val_unsigned_f, val_unsigned()) and
	t##0 state_5() and
	t##0 b_out2_sync()
implies
	t_end(o)##0 state_6() and
	t_end(o)##0 b_out2_sig() == (val_signed_f<<2) and
	t_end(o)##0 phase() == phase_f and
	t_end(o)##0 val_signed() == val_signed_f and
	t_end(o)##0 val_unsigned() == val_unsigned_f and
	during_o (t, 1, t_end(o), 0, b_out_notify() == 0) and
	during_o (t, 1, t_end(o), -1, b_out2_notify() == 0) and
	t_end(o)##0 b_out2_notify() == 1;
endproperty;
state_5_13_a: assert property (disable iff (reset) state_5_13_p(1)); //ASSIGN t_end offset here



property state_6_14_p(o);
 bit[31:0] phase_f;
 bit[31:0] val_signed_f;
 bit[31:0] val_unsigned_f;
	t ##0 hold(phase_f, phase()) and
	t ##0 hold(val_signed_f, val_signed()) and
	t ##0 hold(val_unsigned_f, val_unsigned()) and
	t##0 state_6() and
	t##0 b_out2_sync()
implies
	t_end(o)##0 state_7() and
	t_end(o)##0 b_out2_sig() == (val_signed_f & 2) and
	t_end(o)##0 phase() == phase_f and
	t_end(o)##0 val_signed() == val_signed_f and
	t_end(o)##0 val_unsigned() == val_unsigned_f and
	during_o (t, 1, t_end(o), 0, b_out_notify() == 0) and
	during_o (t, 1, t_end(o), -1, b_out2_notify() == 0) and
	t_end(o)##0 b_out2_notify() == 1;
endproperty;
state_6_14_a: assert property (disable iff (reset) state_6_14_p(1)); //ASSIGN t_end offset here



property state_7_15_p(o);
 bit[31:0] phase_f;
 bit[31:0] val_signed_f;
 bit[31:0] val_unsigned_f;
	t ##0 hold(phase_f, phase()) and
	t ##0 hold(val_signed_f, val_signed()) and
	t ##0 hold(val_unsigned_f, val_unsigned()) and
	t##0 state_7() and
	t##0 b_out2_sync()
implies
	t_end(o)##0 state_8() and
	t_end(o)##0 b_out2_sig() == (val_signed_f | 2) and
	t_end(o)##0 phase() == phase_f and
	t_end(o)##0 val_signed() == val_signed_f and
	t_end(o)##0 val_unsigned() == val_unsigned_f and
	during_o (t, 1, t_end(o), 0, b_out_notify() == 0) and
	during_o (t, 1, t_end(o), -1, b_out2_notify() == 0) and
	t_end(o)##0 b_out2_notify() == 1;
endproperty;
state_7_15_a: assert property (disable iff (reset) state_7_15_p(1)); //ASSIGN t_end offset here



property state_8_16_p(o);
 bit[31:0] val_signed_f;
 bit[31:0] val_unsigned_f;
	t ##0 hold(val_signed_f, val_signed()) and
	t ##0 hold(val_unsigned_f, val_unsigned()) and
	t##0 state_8() and
	t##0 b_out2_sync() and
	t##0 ((val_signed() % 2) == 0) and
	t##0 ((val_signed() & 2) == 0) and
	t##0 ((val_signed()>>2) == 0) and
	t##0 ((val_signed()<<2) == 0)
implies
	t_end(o)##0 state_1() and
	t_end(o)##0 b_out_sig() == (val_unsigned_f>>2) and
	t_end(o)##0 phase() == SECTION_A and
	t_end(o)##0 val_signed() == val_signed_f and
	t_end(o)##0 val_unsigned() == val_unsigned_f and
	during_o (t, 1, t_end(o), -1, b_out_notify() == 0) and
	t_end(o)##0 b_out_notify() == 1 and
	during_o (t, 1, t_end(o), 0, b_out2_notify() == 0);
endproperty;
state_8_16_a: assert property (disable iff (reset) state_8_16_p(1)); //ASSIGN t_end offset here



property state_8_17_p(o);
 bit[31:0] val_signed_f;
 bit[31:0] val_unsigned_f;
	t ##0 hold(val_signed_f, val_signed()) and
	t ##0 hold(val_unsigned_f, val_unsigned()) and
	t##0 state_8() and
	t##0 b_out2_sync() and
	t##0 ((val_signed() % 2) == 0) and
	t##0 ((val_signed() & 2) == 0) and
	t##0 !(((val_signed()>>2) == 0)) and
	t##0 ((val_signed()<<2) == 0)
implies
	t_end(o)##0 state_1() and
	t_end(o)##0 b_out_sig() == (val_unsigned_f>>2) and
	t_end(o)##0 phase() == SECTION_A and
	t_end(o)##0 val_signed() == val_signed_f and
	t_end(o)##0 val_unsigned() == val_unsigned_f and
	during_o (t, 1, t_end(o), -1, b_out_notify() == 0) and
	t_end(o)##0 b_out_notify() == 1 and
	during_o (t, 1, t_end(o), 0, b_out2_notify() == 0);
endproperty;
state_8_17_a: assert property (disable iff (reset) state_8_17_p(1)); //ASSIGN t_end offset here



property state_8_18_p(o);
 bit[31:0] val_signed_f;
 bit[31:0] val_unsigned_f;
	t ##0 hold(val_signed_f, val_signed()) and
	t ##0 hold(val_unsigned_f, val_unsigned()) and
	t##0 state_8() and
	t##0 b_out2_sync() and
	t##0 ((val_signed() % 2) == 0) and
	t##0 ((val_signed() & 2) == 0) and
	t##0 !(((val_signed()>>2) == 0)) and
	t##0 !(((val_signed()<<2) == 0))
implies
	t_end(o)##0 state_1() and
	t_end(o)##0 b_out_sig() == (val_unsigned_f>>2) and
	t_end(o)##0 phase() == SECTION_A and
	t_end(o)##0 val_signed() == val_signed_f and
	t_end(o)##0 val_unsigned() == val_unsigned_f and
	during_o (t, 1, t_end(o), -1, b_out_notify() == 0) and
	t_end(o)##0 b_out_notify() == 1 and
	during_o (t, 1, t_end(o), 0, b_out2_notify() == 0);
endproperty;
state_8_18_a: assert property (disable iff (reset) state_8_18_p(1)); //ASSIGN t_end offset here



property state_8_19_p(o);
 bit[31:0] val_signed_f;
 bit[31:0] val_unsigned_f;
	t ##0 hold(val_signed_f, val_signed()) and
	t ##0 hold(val_unsigned_f, val_unsigned()) and
	t##0 state_8() and
	t##0 b_out2_sync() and
	t##0 ((val_signed() % 2) == 0) and
	t##0 !(((val_signed() & 2) == 0)) and
	t##0 ((val_signed()>>2) == 0) and
	t##0 !(((val_signed()<<2) == 0))
implies
	t_end(o)##0 state_1() and
	t_end(o)##0 b_out_sig() == (val_unsigned_f>>2) and
	t_end(o)##0 phase() == SECTION_A and
	t_end(o)##0 val_signed() == val_signed_f and
	t_end(o)##0 val_unsigned() == val_unsigned_f and
	during_o (t, 1, t_end(o), -1, b_out_notify() == 0) and
	t_end(o)##0 b_out_notify() == 1 and
	during_o (t, 1, t_end(o), 0, b_out2_notify() == 0);
endproperty;
state_8_19_a: assert property (disable iff (reset) state_8_19_p(1)); //ASSIGN t_end offset here



property state_8_20_p(o);
 bit[31:0] val_signed_f;
 bit[31:0] val_unsigned_f;
	t ##0 hold(val_signed_f, val_signed()) and
	t ##0 hold(val_unsigned_f, val_unsigned()) and
	t##0 state_8() and
	t##0 b_out2_sync() and
	t##0 ((val_signed() % 2) == 0) and
	t##0 !(((val_signed() & 2) == 0)) and
	t##0 !(((val_signed()>>2) == 0)) and
	t##0 !(((val_signed()<<2) == 0))
implies
	t_end(o)##0 state_1() and
	t_end(o)##0 b_out_sig() == (val_unsigned_f>>2) and
	t_end(o)##0 phase() == SECTION_A and
	t_end(o)##0 val_signed() == val_signed_f and
	t_end(o)##0 val_unsigned() == val_unsigned_f and
	during_o (t, 1, t_end(o), -1, b_out_notify() == 0) and
	t_end(o)##0 b_out_notify() == 1 and
	during_o (t, 1, t_end(o), 0, b_out2_notify() == 0);
endproperty;
state_8_20_a: assert property (disable iff (reset) state_8_20_p(1)); //ASSIGN t_end offset here



property state_8_21_p(o);
 bit[31:0] val_signed_f;
 bit[31:0] val_unsigned_f;
	t ##0 hold(val_signed_f, val_signed()) and
	t ##0 hold(val_unsigned_f, val_unsigned()) and
	t##0 state_8() and
	t##0 b_out2_sync() and
	t##0 !(((val_signed() % 2) == 0)) and
	t##0 ((val_signed() & 2) == 0) and
	t##0 ((val_signed()>>2) == 0) and
	t##0 !(((val_signed()<<2) == 0))
implies
	t_end(o)##0 state_1() and
	t_end(o)##0 b_out_sig() == (val_unsigned_f>>2) and
	t_end(o)##0 phase() == SECTION_A and
	t_end(o)##0 val_signed() == val_signed_f and
	t_end(o)##0 val_unsigned() == val_unsigned_f and
	during_o (t, 1, t_end(o), -1, b_out_notify() == 0) and
	t_end(o)##0 b_out_notify() == 1 and
	during_o (t, 1, t_end(o), 0, b_out2_notify() == 0);
endproperty;
state_8_21_a: assert property (disable iff (reset) state_8_21_p(1)); //ASSIGN t_end offset here



property state_8_22_p(o);
 bit[31:0] val_signed_f;
 bit[31:0] val_unsigned_f;
	t ##0 hold(val_signed_f, val_signed()) and
	t ##0 hold(val_unsigned_f, val_unsigned()) and
	t##0 state_8() and
	t##0 b_out2_sync() and
	t##0 !(((val_signed() % 2) == 0)) and
	t##0 ((val_signed() & 2) == 0) and
	t##0 !(((val_signed()>>2) == 0)) and
	t##0 !(((val_signed()<<2) == 0))
implies
	t_end(o)##0 state_1() and
	t_end(o)##0 b_out_sig() == (val_unsigned_f>>2) and
	t_end(o)##0 phase() == SECTION_A and
	t_end(o)##0 val_signed() == val_signed_f and
	t_end(o)##0 val_unsigned() == val_unsigned_f and
	during_o (t, 1, t_end(o), -1, b_out_notify() == 0) and
	t_end(o)##0 b_out_notify() == 1 and
	during_o (t, 1, t_end(o), 0, b_out2_notify() == 0);
endproperty;
state_8_22_a: assert property (disable iff (reset) state_8_22_p(1)); //ASSIGN t_end offset here



property state_8_23_p(o);
 bit[31:0] val_signed_f;
 bit[31:0] val_unsigned_f;
	t ##0 hold(val_signed_f, val_signed()) and
	t ##0 hold(val_unsigned_f, val_unsigned()) and
	t##0 state_8() and
	t##0 b_out2_sync() and
	t##0 !(((val_signed() % 2) == 0)) and
	t##0 !(((val_signed() & 2) == 0)) and
	t##0 ((val_signed()>>2) == 0) and
	t##0 !(((val_signed()<<2) == 0))
implies
	t_end(o)##0 state_1() and
	t_end(o)##0 b_out_sig() == (val_unsigned_f>>2) and
	t_end(o)##0 phase() == SECTION_A and
	t_end(o)##0 val_signed() == val_signed_f and
	t_end(o)##0 val_unsigned() == val_unsigned_f and
	during_o (t, 1, t_end(o), -1, b_out_notify() == 0) and
	t_end(o)##0 b_out_notify() == 1 and
	during_o (t, 1, t_end(o), 0, b_out2_notify() == 0);
endproperty;
state_8_23_a: assert property (disable iff (reset) state_8_23_p(1)); //ASSIGN t_end offset here



property state_8_24_p(o);
 bit[31:0] val_signed_f;
 bit[31:0] val_unsigned_f;
	t ##0 hold(val_signed_f, val_signed()) and
	t ##0 hold(val_unsigned_f, val_unsigned()) and
	t##0 state_8() and
	t##0 b_out2_sync() and
	t##0 !(((val_signed() % 2) == 0)) and
	t##0 !(((val_signed() & 2) == 0)) and
	t##0 !(((val_signed()>>2) == 0)) and
	t##0 !(((val_signed()<<2) == 0))
implies
	t_end(o)##0 state_1() and
	t_end(o)##0 b_out_sig() == (val_unsigned_f>>2) and
	t_end(o)##0 phase() == SECTION_A and
	t_end(o)##0 val_signed() == val_signed_f and
	t_end(o)##0 val_unsigned() == val_unsigned_f and
	during_o (t, 1, t_end(o), -1, b_out_notify() == 0) and
	t_end(o)##0 b_out_notify() == 1 and
	during_o (t, 1, t_end(o), 0, b_out2_notify() == 0);
endproperty;
state_8_24_a: assert property (disable iff (reset) state_8_24_p(1)); //ASSIGN t_end offset here



property wait_state_1_p(o);
 bit[31:0] b_out_sig_f;
 bit[31:0] phase_f;
 bit[31:0] val_signed_f;
 bit[31:0] val_unsigned_f;
	t ##0 hold(b_out_sig_f, b_out_sig()) and
	t ##0 hold(phase_f, phase()) and
	t ##0 hold(val_signed_f, val_signed()) and
	t ##0 hold(val_unsigned_f, val_unsigned()) and
	t##0 state_1() and
	t##0 !(b_out_sync())
implies
	t##1 state_1() and
	t##1 b_out_sig() == b_out_sig_f and
	t##1 phase() == phase_f and
	t##1 val_signed() == val_signed_f and
	t##1 val_unsigned() == val_unsigned_f and
	t##1 b_out_notify() == 1 and
	t##1 b_out2_notify() == 0;
endproperty;
wait_state_1_a: assert property (disable iff (reset) wait_state_1_p(1)); //ASSIGN t_end offset here



property wait_state_2_p(o);
 bit[31:0] b_out_sig_f;
 bit[31:0] phase_f;
 bit[31:0] val_signed_f;
 bit[31:0] val_unsigned_f;
	t ##0 hold(b_out_sig_f, b_out_sig()) and
	t ##0 hold(phase_f, phase()) and
	t ##0 hold(val_signed_f, val_signed()) and
	t ##0 hold(val_unsigned_f, val_unsigned()) and
	t##0 state_2() and
	t##0 !(b_out_sync())
implies
	t##1 state_2() and
	t##1 b_out_sig() == b_out_sig_f and
	t##1 phase() == phase_f and
	t##1 val_signed() == val_signed_f and
	t##1 val_unsigned() == val_unsigned_f and
	t##1 b_out_notify() == 1 and
	t##1 b_out2_notify() == 0;
endproperty;
wait_state_2_a: assert property (disable iff (reset) wait_state_2_p(1)); //ASSIGN t_end offset here



property wait_state_3_p(o);
 bit[31:0] b_out_sig_f;
 bit[31:0] phase_f;
 bit[31:0] val_signed_f;
 bit[31:0] val_unsigned_f;
	t ##0 hold(b_out_sig_f, b_out_sig()) and
	t ##0 hold(phase_f, phase()) and
	t ##0 hold(val_signed_f, val_signed()) and
	t ##0 hold(val_unsigned_f, val_unsigned()) and
	t##0 state_3() and
	t##0 !(b_out_sync())
implies
	t##1 state_3() and
	t##1 b_out_sig() == b_out_sig_f and
	t##1 phase() == phase_f and
	t##1 val_signed() == val_signed_f and
	t##1 val_unsigned() == val_unsigned_f and
	t##1 b_out_notify() == 1 and
	t##1 b_out2_notify() == 0;
endproperty;
wait_state_3_a: assert property (disable iff (reset) wait_state_3_p(1)); //ASSIGN t_end offset here



property wait_state_4_p(o);
 bit[31:0] b_out_sig_f;
 bit[31:0] phase_f;
 bit[31:0] val_signed_f;
 bit[31:0] val_unsigned_f;
	t ##0 hold(b_out_sig_f, b_out_sig()) and
	t ##0 hold(phase_f, phase()) and
	t ##0 hold(val_signed_f, val_signed()) and
	t ##0 hold(val_unsigned_f, val_unsigned()) and
	t##0 state_4() and
	t##0 !(b_out_sync())
implies
	t##1 state_4() and
	t##1 b_out_sig() == b_out_sig_f and
	t##1 phase() == phase_f and
	t##1 val_signed() == val_signed_f and
	t##1 val_unsigned() == val_unsigned_f and
	t##1 b_out_notify() == 1 and
	t##1 b_out2_notify() == 0;
endproperty;
wait_state_4_a: assert property (disable iff (reset) wait_state_4_p(1)); //ASSIGN t_end offset here



property wait_state_5_p(o);
 bit[31:0] b_out2_sig_f;
 bit[31:0] phase_f;
 bit[31:0] val_signed_f;
 bit[31:0] val_unsigned_f;
	t ##0 hold(b_out2_sig_f, b_out2_sig()) and
	t ##0 hold(phase_f, phase()) and
	t ##0 hold(val_signed_f, val_signed()) and
	t ##0 hold(val_unsigned_f, val_unsigned()) and
	t##0 state_5() and
	t##0 !(b_out2_sync())
implies
	t##1 state_5() and
	t##1 b_out2_sig() == b_out2_sig_f and
	t##1 phase() == phase_f and
	t##1 val_signed() == val_signed_f and
	t##1 val_unsigned() == val_unsigned_f and
	t##1 b_out_notify() == 0 and
	t##1 b_out2_notify() == 1;
endproperty;
wait_state_5_a: assert property (disable iff (reset) wait_state_5_p(1)); //ASSIGN t_end offset here



property wait_state_6_p(o);
 bit[31:0] b_out2_sig_f;
 bit[31:0] phase_f;
 bit[31:0] val_signed_f;
 bit[31:0] val_unsigned_f;
	t ##0 hold(b_out2_sig_f, b_out2_sig()) and
	t ##0 hold(phase_f, phase()) and
	t ##0 hold(val_signed_f, val_signed()) and
	t ##0 hold(val_unsigned_f, val_unsigned()) and
	t##0 state_6() and
	t##0 !(b_out2_sync())
implies
	t##1 state_6() and
	t##1 b_out2_sig() == b_out2_sig_f and
	t##1 phase() == phase_f and
	t##1 val_signed() == val_signed_f and
	t##1 val_unsigned() == val_unsigned_f and
	t##1 b_out_notify() == 0 and
	t##1 b_out2_notify() == 1;
endproperty;
wait_state_6_a: assert property (disable iff (reset) wait_state_6_p(1)); //ASSIGN t_end offset here



property wait_state_7_p(o);
 bit[31:0] b_out2_sig_f;
 bit[31:0] phase_f;
 bit[31:0] val_signed_f;
 bit[31:0] val_unsigned_f;
	t ##0 hold(b_out2_sig_f, b_out2_sig()) and
	t ##0 hold(phase_f, phase()) and
	t ##0 hold(val_signed_f, val_signed()) and
	t ##0 hold(val_unsigned_f, val_unsigned()) and
	t##0 state_7() and
	t##0 !(b_out2_sync())
implies
	t##1 state_7() and
	t##1 b_out2_sig() == b_out2_sig_f and
	t##1 phase() == phase_f and
	t##1 val_signed() == val_signed_f and
	t##1 val_unsigned() == val_unsigned_f and
	t##1 b_out_notify() == 0 and
	t##1 b_out2_notify() == 1;
endproperty;
wait_state_7_a: assert property (disable iff (reset) wait_state_7_p(1)); //ASSIGN t_end offset here



property wait_state_8_p(o);
 bit[31:0] b_out2_sig_f;
 bit[31:0] phase_f;
 bit[31:0] val_signed_f;
 bit[31:0] val_unsigned_f;
	t ##0 hold(b_out2_sig_f, b_out2_sig()) and
	t ##0 hold(phase_f, phase()) and
	t ##0 hold(val_signed_f, val_signed()) and
	t ##0 hold(val_unsigned_f, val_unsigned()) and
	t##0 state_8() and
	t##0 !(b_out2_sync())
implies
	t##1 state_8() and
	t##1 b_out2_sig() == b_out2_sig_f and
	t##1 phase() == phase_f and
	t##1 val_signed() == val_signed_f and
	t##1 val_unsigned() == val_unsigned_f and
	t##1 b_out_notify() == 0 and
	t##1 b_out2_notify() == 1;
endproperty;
wait_state_8_a: assert property (disable iff (reset) wait_state_8_p(1)); //ASSIGN t_end offset here



endmodule

//DESIGNER SHOULD PAY ATTENTION FOR USING THE MODEL CORRECT NAME FOR BINDING AND TO REFER TO THE RESET SIGNAL USED IN IT
bind TestBasic23 TestBasic23_verification inst (.*, .reset());
