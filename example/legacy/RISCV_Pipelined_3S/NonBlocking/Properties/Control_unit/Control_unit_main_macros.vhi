--
-- GENERATED BY: SCAM TOOL
-- UPDATED BY  : SALAHEDDIN HETALANI (salaheddinhetalani@gmail.com) ON 05 Feb, 2019
--

-- SYNC AND NOTIFY SIGNALS (1-cycle macros) -- 
macro CUtoME_port_notify :  boolean  := CU/CUtoME_port_notify end macro; 
macro CUtoME_port_sync   :  boolean  := CU/CUtoME_port_sync   end macro; 
macro MEtoCU_port_notify :  boolean  := CU/MEtoCU_port_notify end macro; 
macro MEtoCU_port_sync   :  boolean  := CU/MEtoCU_port_sync   end macro; 
macro CUtoRF_port_notify :  boolean  := CU/CUtoRF_port_notify end macro;

-- DP SIGNALS -- 
macro CUtoME_port_sig_req         : ME_AccessType := CU/CUtoME_port.req        end macro;
macro CUtoME_port_sig_mask        : ME_MaskType   := CU/CUtoME_port.mask       end macro;
macro CUtoME_port_sig_addrIn      : unsigned      := CU/CUtoME_port.addrIn     end macro;
macro CUtoME_port_sig_dataIn      : unsigned      := CU/CUtoME_port.dataIn     end macro;
macro MEtoCU_port_sig_loadedData  : unsigned      := CU/MEtoCU_port.loadedData end macro;
macro CUtoRF_port_sig_dst         : unsigned      := CU/CUtoRF_port.dst        end macro;
macro CUtoRF_port_sig_dstData     : unsigned      := CU/CUtoRF_port.dstData    end macro;
macro RFtoCU_port_sig_reg_file_01 : unsigned      := RF/reg_file( 1)           end macro;
macro RFtoCU_port_sig_reg_file_02 : unsigned      := RF/reg_file( 2)           end macro;
macro RFtoCU_port_sig_reg_file_03 : unsigned      := RF/reg_file( 3)           end macro;
macro RFtoCU_port_sig_reg_file_04 : unsigned      := RF/reg_file( 4)           end macro;
macro RFtoCU_port_sig_reg_file_05 : unsigned      := RF/reg_file( 5)           end macro;
macro RFtoCU_port_sig_reg_file_06 : unsigned      := RF/reg_file( 6)           end macro;
macro RFtoCU_port_sig_reg_file_07 : unsigned      := RF/reg_file( 7)           end macro;
macro RFtoCU_port_sig_reg_file_08 : unsigned      := RF/reg_file( 8)           end macro;
macro RFtoCU_port_sig_reg_file_09 : unsigned      := RF/reg_file( 9)           end macro;
macro RFtoCU_port_sig_reg_file_10 : unsigned      := RF/reg_file(10)           end macro;
macro RFtoCU_port_sig_reg_file_11 : unsigned      := RF/reg_file(11)           end macro;
macro RFtoCU_port_sig_reg_file_12 : unsigned      := RF/reg_file(12)           end macro;
macro RFtoCU_port_sig_reg_file_13 : unsigned      := RF/reg_file(13)           end macro;
macro RFtoCU_port_sig_reg_file_14 : unsigned      := RF/reg_file(14)           end macro;
macro RFtoCU_port_sig_reg_file_15 : unsigned      := RF/reg_file(15)           end macro;
macro RFtoCU_port_sig_reg_file_16 : unsigned      := RF/reg_file(16)           end macro;
macro RFtoCU_port_sig_reg_file_17 : unsigned      := RF/reg_file(17)           end macro;
macro RFtoCU_port_sig_reg_file_18 : unsigned      := RF/reg_file(18)           end macro;
macro RFtoCU_port_sig_reg_file_19 : unsigned      := RF/reg_file(19)           end macro;
macro RFtoCU_port_sig_reg_file_20 : unsigned      := RF/reg_file(20)           end macro;
macro RFtoCU_port_sig_reg_file_21 : unsigned      := RF/reg_file(21)           end macro;
macro RFtoCU_port_sig_reg_file_22 : unsigned      := RF/reg_file(22)           end macro;
macro RFtoCU_port_sig_reg_file_23 : unsigned      := RF/reg_file(23)           end macro;
macro RFtoCU_port_sig_reg_file_24 : unsigned      := RF/reg_file(24)           end macro;
macro RFtoCU_port_sig_reg_file_25 : unsigned      := RF/reg_file(25)           end macro;
macro RFtoCU_port_sig_reg_file_26 : unsigned      := RF/reg_file(26)           end macro;
macro RFtoCU_port_sig_reg_file_27 : unsigned      := RF/reg_file(27)           end macro;
macro RFtoCU_port_sig_reg_file_28 : unsigned      := RF/reg_file(28)           end macro;
macro RFtoCU_port_sig_reg_file_29 : unsigned      := RF/reg_file(29)           end macro;
macro RFtoCU_port_sig_reg_file_30 : unsigned      := RF/reg_file(30)           end macro;
macro RFtoCU_port_sig_reg_file_31 : unsigned      := RF/reg_file(31)           end macro;

--CONSTRAINTS-- 
constraint no_reset := rst = '0'; end constraint; 

-- VISIBLE REGISTERS --
macro CUtoME_data_req      : ME_AccessType       := CU/CUtoME_port.req      end macro;
macro CUtoME_data_mask     : ME_MaskType         := CU/CUtoME_port.mask     end macro;
macro CUtoME_data_addrIn   : unsigned            := CU/CUtoME_port.addrIn   end macro;
macro CUtoME_data_dataIn   : unsigned            := CU/CUtoME_port.dataIn   end macro;
macro CS_2_s2_aluFunc      : ALUfuncType         := CU/CS_2_s2.aluFunc      end macro; 
macro CS_2_s2_aluOp1Sel    : AL_OperandSelType   := CU/CS_2_s2.aluOp1Sel    end macro; 
macro CS_2_s2_aluOp2Sel    : AL_OperandSelType   := CU/CS_2_s2.aluOp2Sel    end macro; 
macro CS_3_s2_regfileWrite : bool 		 := CU/CS_3_s2.regfileWrite end macro; 
macro CS_3_s2_writeDataSel : RF_WriteDataSelType := CU/CS_3_s2.writeDataSel end macro; 
macro CS_3_s3_regfileWrite : bool 		 := CU/CS_3_s3.regfileWrite end macro; 
macro CS_3_s3_writeDataSel : RF_WriteDataSelType := CU/CS_3_s3.writeDataSel end macro; 
macro DS_s2_encType 	   : EncType 		 := CU/DS_s2.encType 	    end macro; 
macro DS_s2_imm 	   : unsigned 		 := CU/DS_s2.imm 	    end macro; 
macro DS_s2_pc 		   : unsigned 		 := CU/DS_s2.pc 	    end macro; 
macro DS_s2_reg1content    : unsigned 		 := CU/DS_s2.reg1content    end macro; 
macro DS_s2_reg2content    : unsigned 		 := CU/DS_s2.reg2content    end macro; 
macro DS_s2_regRdAddr      : unsigned 		 := CU/DS_s2.regRdAddr 	    end macro; 
macro DS_s3_aluResult      : unsigned 		 := CU/DS_s3.aluResult 	    end macro; 
macro DS_s3_encType 	   : EncType 		 := CU/DS_s3.encType 	    end macro; 
macro DS_s3_pc 		   : unsigned 		 := CU/DS_s3.pc 	    end macro; 
macro DS_s3_regRdAddr      : unsigned 		 := CU/DS_s3.regRdAddr      end macro; 
macro loadedData 	   : unsigned 		 := CU/loadedData 	    end macro; 
macro pc 		   : unsigned 		 := CU/pc 		    end macro; 

-- STATES -- 
macro instrFetch_write_2 : boolean := CU/section = writeMem  end macro;
macro instrFetch_read_0  : boolean := CU/section = readMem   end macro;
macro memAccess_write_6  : boolean := CU/section = writeDmem end macro;
macro memAccess_read_4   : boolean := CU/section = readDmem  end macro;
