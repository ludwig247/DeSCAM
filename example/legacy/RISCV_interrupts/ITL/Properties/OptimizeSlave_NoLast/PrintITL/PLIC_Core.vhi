-- SYNC AND NOTIFY SIGNALS (1-cycle macros) -- 
-- macro fromGateway_Int1_sync   :  boolean  := end macro;
-- macro fromGateway_Int2_sync   :  boolean  := end macro;
-- macro fromMemory_Claimed_sync   :  boolean  := end macro;
-- macro fromMemory_Enabled_sync   :  boolean  := end macro;
-- macro fromMemory_Priority_Int_1_sync   :  boolean  := end macro;
-- macro fromMemory_Priority_Int_2_sync   :  boolean  := end macro;
-- macro fromMemory_Threshold_sync   :  boolean  := end macro;


-- DP SIGNALS -- 
macro MEIP_port_sig : boolean := MEIP_port end macro;
macro fromGateway_Int1_sig : boolean := fromGateway_Int1 end macro;
macro fromGateway_Int2_sig : boolean := fromGateway_Int2 end macro;
macro fromMemory_Claimed_sig : unsigned := fromMemory_Claimed end macro;
macro fromMemory_Enabled_sig : unsigned := fromMemory_Enabled end macro;
macro fromMemory_Priority_Int_1_sig : unsigned := fromMemory_Priority_Int_1 end macro;
macro fromMemory_Priority_Int_2_sig : unsigned := fromMemory_Priority_Int_2 end macro;
macro fromMemory_Threshold_sig : unsigned := fromMemory_Threshold end macro;
macro toMemory_MaxID_sig : unsigned := toMemory_MaxID end macro;


--CONSTRAINTS-- 
constraint no_reset := rst = '0'; end constraint; 


-- VISIBLE REGISTERS --
macro claimed_data : unsigned := claimed end macro;
macro enabled_data : unsigned := enabled end macro;
--macro max_id : unsigned := end macro;
macro pending_Int_1_data : boolean := pending_Int_1 end macro;
macro pending_Int_2_data : boolean := pending_Int_2 end macro;
macro priority_Int_1_data : unsigned := priority_Int_1 end macro;
macro priority_Int_2_data : unsigned := priority_Int_2 end macro;
macro threshold_data : unsigned := threshold end macro;


-- STATES -- 
macro run_0 : boolean := true end macro;


--Operations -- 
property reset is
assume:
	 reset_sequence;
prove:
	 at t: run_0;
	 at t: claimed_data = resize(0,32);
	 at t: enabled_data = resize(0,32);
	 at t: max_id = resize(0,32);
	 at t: pending_Int_1_data = false;
	 at t: pending_Int_2_data = false;
	 at t: priority_Int_1_data = resize(0,32);
	 at t: priority_Int_2_data = resize(0,32);
	 at t: threshold_data = resize(0,32);
end property;


property run_0_read_0 is
dependencies: no_reset;
freeze:
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_1 is
dependencies: no_reset;
freeze:
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_2 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_3 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_4 is
dependencies: no_reset;
freeze:
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_5 is
dependencies: no_reset;
freeze:
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	max_id_at_t = max_id@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = max_id_at_t;
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = max_id_at_t;
end property;

property run_0_read_6 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_7 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	max_id_at_t = max_id@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = max_id_at_t;
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = max_id_at_t;
end property;

property run_0_read_8 is
dependencies: no_reset;
freeze:
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data));
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data));
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_9 is
dependencies: no_reset;
freeze:
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data));
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data);
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_10 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data));
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data));
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_11 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data));
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data);
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_12 is
dependencies: no_reset;
freeze:
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data);
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data));
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_13 is
dependencies: no_reset;
freeze:
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	max_id_at_t = max_id@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data);
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data);
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = max_id_at_t;
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = max_id_at_t;
end property;

property run_0_read_14 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data);
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data));
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_15 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	max_id_at_t = max_id@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data);
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data);
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = max_id_at_t;
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = max_id_at_t;
end property;

property run_0_read_16 is
dependencies: no_reset;
freeze:
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: not((getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_17 is
dependencies: no_reset;
freeze:
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: (getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_18 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: not((getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_19 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: (getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_20 is
dependencies: no_reset;
freeze:
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: not((getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_21 is
dependencies: no_reset;
freeze:
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	max_id_at_t = max_id@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: (getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = max_id_at_t;
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = max_id_at_t;
end property;

property run_0_read_22 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: not((getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_23 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	max_id_at_t = max_id@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: (getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = max_id_at_t;
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = max_id_at_t;
end property;

property run_0_read_24 is
dependencies: no_reset;
freeze:
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data));
	 at t: not((getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data));
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_25 is
dependencies: no_reset;
freeze:
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data));
	 at t: (getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data);
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_26 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data));
	 at t: not((getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data));
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_27 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data));
	 at t: (getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data);
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_28 is
dependencies: no_reset;
freeze:
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data);
	 at t: not((getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data));
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_29 is
dependencies: no_reset;
freeze:
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	max_id_at_t = max_id@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data);
	 at t: (getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data);
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = max_id_at_t;
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = max_id_at_t;
end property;

property run_0_read_30 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data);
	 at t: not((getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data));
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_31 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	max_id_at_t = max_id@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data);
	 at t: (getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data);
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = max_id_at_t;
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = max_id_at_t;
end property;

property run_0_read_32 is
dependencies: no_reset;
freeze:
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_33 is
dependencies: no_reset;
freeze:
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_34 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_35 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_36 is
dependencies: no_reset;
freeze:
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_37 is
dependencies: no_reset;
freeze:
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	max_id_at_t = max_id@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = max_id_at_t;
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = max_id_at_t;
end property;

property run_0_read_38 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_39 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	max_id_at_t = max_id@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = max_id_at_t;
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = max_id_at_t;
end property;

property run_0_read_40 is
dependencies: no_reset;
freeze:
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= threshold_data));
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= threshold_data));
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_41 is
dependencies: no_reset;
freeze:
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= threshold_data));
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= threshold_data);
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_42 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= threshold_data));
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= threshold_data));
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_43 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= threshold_data));
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= threshold_data);
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_44 is
dependencies: no_reset;
freeze:
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= threshold_data);
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= threshold_data));
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_45 is
dependencies: no_reset;
freeze:
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	max_id_at_t = max_id@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= threshold_data);
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= threshold_data);
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = max_id_at_t;
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = max_id_at_t;
end property;

property run_0_read_46 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= threshold_data);
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= threshold_data));
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_47 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	max_id_at_t = max_id@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= threshold_data);
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= threshold_data);
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = max_id_at_t;
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = max_id_at_t;
end property;

property run_0_read_48 is
dependencies: no_reset;
freeze:
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: not((getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_49 is
dependencies: no_reset;
freeze:
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: (getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_50 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: not((getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_51 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: (getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_52 is
dependencies: no_reset;
freeze:
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: not((getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_53 is
dependencies: no_reset;
freeze:
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	max_id_at_t = max_id@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: (getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = max_id_at_t;
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = max_id_at_t;
end property;

property run_0_read_54 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: not((getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_55 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	max_id_at_t = max_id@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: (getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = max_id_at_t;
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = max_id_at_t;
end property;

property run_0_read_56 is
dependencies: no_reset;
freeze:
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= threshold_data));
	 at t: not((getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= threshold_data));
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_57 is
dependencies: no_reset;
freeze:
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= threshold_data));
	 at t: (getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= threshold_data);
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_58 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= threshold_data));
	 at t: not((getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= threshold_data));
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_59 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= threshold_data));
	 at t: (getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= threshold_data);
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_60 is
dependencies: no_reset;
freeze:
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= threshold_data);
	 at t: not((getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= threshold_data));
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_61 is
dependencies: no_reset;
freeze:
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	max_id_at_t = max_id@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= threshold_data);
	 at t: (getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= threshold_data);
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = max_id_at_t;
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = max_id_at_t;
end property;

property run_0_read_62 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= threshold_data);
	 at t: not((getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= threshold_data));
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_63 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	max_id_at_t = max_id@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= threshold_data);
	 at t: (getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= threshold_data);
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = max_id_at_t;
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = max_id_at_t;
end property;

property run_0_read_64 is
dependencies: no_reset;
freeze:
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_65 is
dependencies: no_reset;
freeze:
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_66 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_67 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_68 is
dependencies: no_reset;
freeze:
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_69 is
dependencies: no_reset;
freeze:
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	max_id_at_t = max_id@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = max_id_at_t;
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = max_id_at_t;
end property;

property run_0_read_70 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_71 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	max_id_at_t = max_id@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = max_id_at_t;
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = max_id_at_t;
end property;

property run_0_read_72 is
dependencies: no_reset;
freeze:
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data));
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data));
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_73 is
dependencies: no_reset;
freeze:
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data));
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data);
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_74 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data));
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data));
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_75 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data));
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data);
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_76 is
dependencies: no_reset;
freeze:
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data);
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data));
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_77 is
dependencies: no_reset;
freeze:
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	max_id_at_t = max_id@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data);
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data);
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = max_id_at_t;
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = max_id_at_t;
end property;

property run_0_read_78 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data);
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data));
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_79 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	max_id_at_t = max_id@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data);
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data);
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = max_id_at_t;
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = max_id_at_t;
end property;

property run_0_read_80 is
dependencies: no_reset;
freeze:
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: not((getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_81 is
dependencies: no_reset;
freeze:
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: (getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_82 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: not((getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_83 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: (getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_84 is
dependencies: no_reset;
freeze:
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: not((getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_85 is
dependencies: no_reset;
freeze:
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	max_id_at_t = max_id@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: (getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = max_id_at_t;
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = max_id_at_t;
end property;

property run_0_read_86 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: not((getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_87 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	max_id_at_t = max_id@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: (getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = max_id_at_t;
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = max_id_at_t;
end property;

property run_0_read_88 is
dependencies: no_reset;
freeze:
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data));
	 at t: not((getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data));
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_89 is
dependencies: no_reset;
freeze:
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data));
	 at t: (getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data);
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_90 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data));
	 at t: not((getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data));
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_91 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data));
	 at t: (getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data);
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_92 is
dependencies: no_reset;
freeze:
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data);
	 at t: not((getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data));
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_93 is
dependencies: no_reset;
freeze:
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	max_id_at_t = max_id@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data);
	 at t: (getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data);
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = max_id_at_t;
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = max_id_at_t;
end property;

property run_0_read_94 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data);
	 at t: not((getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data));
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_95 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	max_id_at_t = max_id@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data);
	 at t: (getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data);
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = max_id_at_t;
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = max_id_at_t;
end property;

property run_0_read_96 is
dependencies: no_reset;
freeze:
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_97 is
dependencies: no_reset;
freeze:
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_98 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_99 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_100 is
dependencies: no_reset;
freeze:
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_101 is
dependencies: no_reset;
freeze:
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	max_id_at_t = max_id@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = max_id_at_t;
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = max_id_at_t;
end property;

property run_0_read_102 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_103 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	max_id_at_t = max_id@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = max_id_at_t;
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = max_id_at_t;
end property;

property run_0_read_104 is
dependencies: no_reset;
freeze:
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= threshold_data));
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= threshold_data));
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_105 is
dependencies: no_reset;
freeze:
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= threshold_data));
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= threshold_data);
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_106 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= threshold_data));
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= threshold_data));
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_107 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= threshold_data));
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= threshold_data);
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_108 is
dependencies: no_reset;
freeze:
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= threshold_data);
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= threshold_data));
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_109 is
dependencies: no_reset;
freeze:
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	max_id_at_t = max_id@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= threshold_data);
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= threshold_data);
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = max_id_at_t;
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = max_id_at_t;
end property;

property run_0_read_110 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= threshold_data);
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= threshold_data));
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_111 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	max_id_at_t = max_id@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= threshold_data);
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= threshold_data);
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = max_id_at_t;
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = max_id_at_t;
end property;

property run_0_read_112 is
dependencies: no_reset;
freeze:
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: not((getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_113 is
dependencies: no_reset;
freeze:
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: (getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_114 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: not((getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_115 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: (getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_116 is
dependencies: no_reset;
freeze:
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: not((getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_117 is
dependencies: no_reset;
freeze:
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	max_id_at_t = max_id@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: (getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = max_id_at_t;
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = max_id_at_t;
end property;

property run_0_read_118 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: not((getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_119 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	max_id_at_t = max_id@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: (getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = max_id_at_t;
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = max_id_at_t;
end property;

property run_0_read_120 is
dependencies: no_reset;
freeze:
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= threshold_data));
	 at t: not((getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= threshold_data));
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_121 is
dependencies: no_reset;
freeze:
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= threshold_data));
	 at t: (getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= threshold_data);
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_122 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= threshold_data));
	 at t: not((getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= threshold_data));
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_123 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= threshold_data));
	 at t: (getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= threshold_data);
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_124 is
dependencies: no_reset;
freeze:
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= threshold_data);
	 at t: not((getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= threshold_data));
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_125 is
dependencies: no_reset;
freeze:
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	max_id_at_t = max_id@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= threshold_data);
	 at t: (getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= threshold_data);
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = max_id_at_t;
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = max_id_at_t;
end property;

property run_0_read_126 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= threshold_data);
	 at t: not((getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= threshold_data));
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_127 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	max_id_at_t = max_id@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= threshold_data);
	 at t: (getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= threshold_data);
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
	 at t: fromGateway_Int1_sync;
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = max_id_at_t;
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = max_id_at_t;
end property;

property run_0_read_128 is
dependencies: no_reset;
freeze:
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_129 is
dependencies: no_reset;
freeze:
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_130 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_131 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_132 is
dependencies: no_reset;
freeze:
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_133 is
dependencies: no_reset;
freeze:
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	max_id_at_t = max_id@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = max_id_at_t;
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = max_id_at_t;
end property;

property run_0_read_134 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_135 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	max_id_at_t = max_id@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = max_id_at_t;
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = max_id_at_t;
end property;

property run_0_read_136 is
dependencies: no_reset;
freeze:
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data));
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data));
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_137 is
dependencies: no_reset;
freeze:
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data));
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data);
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_138 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data));
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data));
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_139 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data));
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data);
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_140 is
dependencies: no_reset;
freeze:
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data);
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data));
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_141 is
dependencies: no_reset;
freeze:
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	max_id_at_t = max_id@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data);
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data);
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = max_id_at_t;
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = max_id_at_t;
end property;

property run_0_read_142 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data);
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data));
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_143 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	max_id_at_t = max_id@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data);
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data);
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = max_id_at_t;
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = max_id_at_t;
end property;

property run_0_read_144 is
dependencies: no_reset;
freeze:
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: not((getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_145 is
dependencies: no_reset;
freeze:
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: (getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_146 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: not((getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_147 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: (getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_148 is
dependencies: no_reset;
freeze:
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: not((getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_149 is
dependencies: no_reset;
freeze:
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	max_id_at_t = max_id@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: (getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = max_id_at_t;
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = max_id_at_t;
end property;

property run_0_read_150 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: not((getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_151 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	max_id_at_t = max_id@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: (getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = max_id_at_t;
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = max_id_at_t;
end property;

property run_0_read_152 is
dependencies: no_reset;
freeze:
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data));
	 at t: not((getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data));
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_153 is
dependencies: no_reset;
freeze:
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data));
	 at t: (getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data);
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_154 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data));
	 at t: not((getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data));
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_155 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data));
	 at t: (getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data);
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_156 is
dependencies: no_reset;
freeze:
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data);
	 at t: not((getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data));
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_157 is
dependencies: no_reset;
freeze:
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	max_id_at_t = max_id@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data);
	 at t: (getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data);
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = max_id_at_t;
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = max_id_at_t;
end property;

property run_0_read_158 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data);
	 at t: not((getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data));
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_159 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	max_id_at_t = max_id@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data);
	 at t: (getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data);
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = max_id_at_t;
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = max_id_at_t;
end property;

property run_0_read_160 is
dependencies: no_reset;
freeze:
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_161 is
dependencies: no_reset;
freeze:
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_162 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_163 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_164 is
dependencies: no_reset;
freeze:
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_165 is
dependencies: no_reset;
freeze:
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	max_id_at_t = max_id@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = max_id_at_t;
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = max_id_at_t;
end property;

property run_0_read_166 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_167 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	max_id_at_t = max_id@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = max_id_at_t;
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = max_id_at_t;
end property;

property run_0_read_168 is
dependencies: no_reset;
freeze:
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= threshold_data));
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= threshold_data));
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_169 is
dependencies: no_reset;
freeze:
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= threshold_data));
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= threshold_data);
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_170 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= threshold_data));
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= threshold_data));
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_171 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= threshold_data));
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= threshold_data);
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_172 is
dependencies: no_reset;
freeze:
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= threshold_data);
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= threshold_data));
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_173 is
dependencies: no_reset;
freeze:
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	max_id_at_t = max_id@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= threshold_data);
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= threshold_data);
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = max_id_at_t;
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = max_id_at_t;
end property;

property run_0_read_174 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= threshold_data);
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= threshold_data));
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_175 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	max_id_at_t = max_id@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= threshold_data);
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= threshold_data);
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = max_id_at_t;
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = max_id_at_t;
end property;

property run_0_read_176 is
dependencies: no_reset;
freeze:
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: not((getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_177 is
dependencies: no_reset;
freeze:
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: (getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_178 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: not((getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_179 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: (getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_180 is
dependencies: no_reset;
freeze:
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: not((getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_181 is
dependencies: no_reset;
freeze:
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	max_id_at_t = max_id@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: (getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = max_id_at_t;
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = max_id_at_t;
end property;

property run_0_read_182 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: not((getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_183 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	max_id_at_t = max_id@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: (getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = max_id_at_t;
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = max_id_at_t;
end property;

property run_0_read_184 is
dependencies: no_reset;
freeze:
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= threshold_data));
	 at t: not((getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= threshold_data));
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_185 is
dependencies: no_reset;
freeze:
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= threshold_data));
	 at t: (getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= threshold_data);
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_186 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= threshold_data));
	 at t: not((getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= threshold_data));
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_187 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= threshold_data));
	 at t: (getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= threshold_data);
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_188 is
dependencies: no_reset;
freeze:
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= threshold_data);
	 at t: not((getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= threshold_data));
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_189 is
dependencies: no_reset;
freeze:
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	max_id_at_t = max_id@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= threshold_data);
	 at t: (getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= threshold_data);
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = max_id_at_t;
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = max_id_at_t;
end property;

property run_0_read_190 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= threshold_data);
	 at t: not((getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= threshold_data));
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_191 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	max_id_at_t = max_id@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= threshold_data);
	 at t: (getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= threshold_data);
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = max_id_at_t;
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = max_id_at_t;
end property;

property run_0_read_192 is
dependencies: no_reset;
freeze:
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_193 is
dependencies: no_reset;
freeze:
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_194 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_195 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_196 is
dependencies: no_reset;
freeze:
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_197 is
dependencies: no_reset;
freeze:
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	max_id_at_t = max_id@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = max_id_at_t;
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = max_id_at_t;
end property;

property run_0_read_198 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_199 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	max_id_at_t = max_id@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = max_id_at_t;
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = max_id_at_t;
end property;

property run_0_read_200 is
dependencies: no_reset;
freeze:
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data));
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data));
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_201 is
dependencies: no_reset;
freeze:
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data));
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data);
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_202 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data));
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data));
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_203 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data));
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data);
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_204 is
dependencies: no_reset;
freeze:
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data);
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data));
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_205 is
dependencies: no_reset;
freeze:
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	max_id_at_t = max_id@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data);
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data);
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = max_id_at_t;
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = max_id_at_t;
end property;

property run_0_read_206 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data);
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data));
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_207 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	max_id_at_t = max_id@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data);
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data);
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = max_id_at_t;
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = max_id_at_t;
end property;

property run_0_read_208 is
dependencies: no_reset;
freeze:
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: not((getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_209 is
dependencies: no_reset;
freeze:
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: (getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_210 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: not((getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_211 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: (getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_212 is
dependencies: no_reset;
freeze:
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: not((getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_213 is
dependencies: no_reset;
freeze:
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	max_id_at_t = max_id@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: (getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = max_id_at_t;
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = max_id_at_t;
end property;

property run_0_read_214 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: not((getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_215 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	max_id_at_t = max_id@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: (getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = max_id_at_t;
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = max_id_at_t;
end property;

property run_0_read_216 is
dependencies: no_reset;
freeze:
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data));
	 at t: not((getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data));
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_217 is
dependencies: no_reset;
freeze:
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data));
	 at t: (getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data);
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_218 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data));
	 at t: not((getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data));
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_219 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data));
	 at t: (getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data);
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_220 is
dependencies: no_reset;
freeze:
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data);
	 at t: not((getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data));
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_221 is
dependencies: no_reset;
freeze:
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	max_id_at_t = max_id@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data);
	 at t: (getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data);
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = max_id_at_t;
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = max_id_at_t;
end property;

property run_0_read_222 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data);
	 at t: not((getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data));
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_223 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	max_id_at_t = max_id@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data);
	 at t: (getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data);
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = max_id_at_t;
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = max_id_at_t;
end property;

property run_0_read_224 is
dependencies: no_reset;
freeze:
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_225 is
dependencies: no_reset;
freeze:
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_226 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_227 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_228 is
dependencies: no_reset;
freeze:
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_229 is
dependencies: no_reset;
freeze:
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	max_id_at_t = max_id@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = max_id_at_t;
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = max_id_at_t;
end property;

property run_0_read_230 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_231 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	max_id_at_t = max_id@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = max_id_at_t;
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = max_id_at_t;
end property;

property run_0_read_232 is
dependencies: no_reset;
freeze:
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= threshold_data));
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= threshold_data));
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_233 is
dependencies: no_reset;
freeze:
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= threshold_data));
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= threshold_data);
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_234 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= threshold_data));
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= threshold_data));
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_235 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= threshold_data));
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= threshold_data);
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_236 is
dependencies: no_reset;
freeze:
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= threshold_data);
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= threshold_data));
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_237 is
dependencies: no_reset;
freeze:
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	max_id_at_t = max_id@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= threshold_data);
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= threshold_data);
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = max_id_at_t;
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = max_id_at_t;
end property;

property run_0_read_238 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= threshold_data);
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= threshold_data));
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_239 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	max_id_at_t = max_id@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= threshold_data);
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= threshold_data);
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = max_id_at_t;
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = max_id_at_t;
end property;

property run_0_read_240 is
dependencies: no_reset;
freeze:
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: not((getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_241 is
dependencies: no_reset;
freeze:
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: (getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_242 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: not((getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_243 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: (getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_244 is
dependencies: no_reset;
freeze:
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: not((getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_245 is
dependencies: no_reset;
freeze:
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	max_id_at_t = max_id@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: (getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = max_id_at_t;
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = max_id_at_t;
end property;

property run_0_read_246 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: not((getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_247 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	max_id_at_t = max_id@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: (getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = max_id_at_t;
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = max_id_at_t;
end property;

property run_0_read_248 is
dependencies: no_reset;
freeze:
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= threshold_data));
	 at t: not((getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= threshold_data));
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_249 is
dependencies: no_reset;
freeze:
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= threshold_data));
	 at t: (getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= threshold_data);
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_250 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= threshold_data));
	 at t: not((getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= threshold_data));
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_251 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= threshold_data));
	 at t: (getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= threshold_data);
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_252 is
dependencies: no_reset;
freeze:
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= threshold_data);
	 at t: not((getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= threshold_data));
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,fromGateway_Int1_sig_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_253 is
dependencies: no_reset;
freeze:
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	max_id_at_t = max_id@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= threshold_data);
	 at t: (getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= threshold_data);
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = max_id_at_t;
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = max_id_at_t;
end property;

property run_0_read_254 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= threshold_data);
	 at t: not((getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= threshold_data));
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,fromGateway_Int1_sig_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_255 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int1_sig_at_t = fromGateway_Int1_sig@t,
	max_id_at_t = max_id@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= threshold_data);
	 at t: (getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),fromGateway_Int1_sig),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= threshold_data);
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
	 at t: fromGateway_Int1_sync;
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = max_id_at_t;
	 at t+1: pending_Int_1_data = fromGateway_Int1_sig_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = max_id_at_t;
end property;

property run_0_read_256 is
dependencies: no_reset;
freeze:
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_257 is
dependencies: no_reset;
freeze:
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_258 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_259 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_260 is
dependencies: no_reset;
freeze:
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_261 is
dependencies: no_reset;
freeze:
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	max_id_at_t = max_id@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = max_id_at_t;
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = max_id_at_t;
end property;

property run_0_read_262 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_263 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	max_id_at_t = max_id@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = max_id_at_t;
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = max_id_at_t;
end property;

property run_0_read_264 is
dependencies: no_reset;
freeze:
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data));
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data));
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_265 is
dependencies: no_reset;
freeze:
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data));
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data);
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_266 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data));
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data));
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_267 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data));
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data);
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_268 is
dependencies: no_reset;
freeze:
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data);
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data));
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_269 is
dependencies: no_reset;
freeze:
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	max_id_at_t = max_id@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data);
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data);
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = max_id_at_t;
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = max_id_at_t;
end property;

property run_0_read_270 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data);
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data));
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_271 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	max_id_at_t = max_id@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data);
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data);
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = max_id_at_t;
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = max_id_at_t;
end property;

property run_0_read_272 is
dependencies: no_reset;
freeze:
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: not((getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_273 is
dependencies: no_reset;
freeze:
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: (getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_274 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: not((getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_275 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: (getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_276 is
dependencies: no_reset;
freeze:
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: not((getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_277 is
dependencies: no_reset;
freeze:
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	max_id_at_t = max_id@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: (getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = max_id_at_t;
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = max_id_at_t;
end property;

property run_0_read_278 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: not((getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_279 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	max_id_at_t = max_id@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: (getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = max_id_at_t;
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = max_id_at_t;
end property;

property run_0_read_280 is
dependencies: no_reset;
freeze:
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data));
	 at t: not((getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data));
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_281 is
dependencies: no_reset;
freeze:
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data));
	 at t: (getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data);
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_282 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data));
	 at t: not((getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data));
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_283 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data));
	 at t: (getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data);
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_284 is
dependencies: no_reset;
freeze:
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data);
	 at t: not((getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data));
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_285 is
dependencies: no_reset;
freeze:
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	max_id_at_t = max_id@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data);
	 at t: (getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data);
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = max_id_at_t;
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = max_id_at_t;
end property;

property run_0_read_286 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data);
	 at t: not((getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data));
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_287 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	max_id_at_t = max_id@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data);
	 at t: (getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data);
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = max_id_at_t;
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = max_id_at_t;
end property;

property run_0_read_288 is
dependencies: no_reset;
freeze:
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_289 is
dependencies: no_reset;
freeze:
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_290 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_291 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_292 is
dependencies: no_reset;
freeze:
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_293 is
dependencies: no_reset;
freeze:
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	max_id_at_t = max_id@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = max_id_at_t;
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = max_id_at_t;
end property;

property run_0_read_294 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_295 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	max_id_at_t = max_id@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = max_id_at_t;
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = max_id_at_t;
end property;

property run_0_read_296 is
dependencies: no_reset;
freeze:
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= threshold_data));
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= threshold_data));
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_297 is
dependencies: no_reset;
freeze:
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= threshold_data));
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= threshold_data);
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_298 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= threshold_data));
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= threshold_data));
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_299 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= threshold_data));
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= threshold_data);
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_300 is
dependencies: no_reset;
freeze:
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= threshold_data);
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= threshold_data));
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_301 is
dependencies: no_reset;
freeze:
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	max_id_at_t = max_id@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= threshold_data);
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= threshold_data);
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = max_id_at_t;
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = max_id_at_t;
end property;

property run_0_read_302 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= threshold_data);
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= threshold_data));
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_303 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	max_id_at_t = max_id@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= threshold_data);
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= threshold_data);
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = max_id_at_t;
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = max_id_at_t;
end property;

property run_0_read_304 is
dependencies: no_reset;
freeze:
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: not((getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_305 is
dependencies: no_reset;
freeze:
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: (getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_306 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: not((getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_307 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: (getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_308 is
dependencies: no_reset;
freeze:
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: not((getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_309 is
dependencies: no_reset;
freeze:
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	max_id_at_t = max_id@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: (getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = max_id_at_t;
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = max_id_at_t;
end property;

property run_0_read_310 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: not((getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_311 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	max_id_at_t = max_id@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: (getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = max_id_at_t;
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = max_id_at_t;
end property;

property run_0_read_312 is
dependencies: no_reset;
freeze:
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= threshold_data));
	 at t: not((getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= threshold_data));
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_313 is
dependencies: no_reset;
freeze:
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= threshold_data));
	 at t: (getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= threshold_data);
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_314 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= threshold_data));
	 at t: not((getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= threshold_data));
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_315 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= threshold_data));
	 at t: (getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= threshold_data);
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_316 is
dependencies: no_reset;
freeze:
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= threshold_data);
	 at t: not((getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= threshold_data));
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_317 is
dependencies: no_reset;
freeze:
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	max_id_at_t = max_id@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= threshold_data);
	 at t: (getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= threshold_data);
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = max_id_at_t;
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = max_id_at_t;
end property;

property run_0_read_318 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= threshold_data);
	 at t: not((getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= threshold_data));
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_319 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	max_id_at_t = max_id@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= threshold_data);
	 at t: (getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= threshold_data);
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = max_id_at_t;
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = max_id_at_t;
end property;

property run_0_read_320 is
dependencies: no_reset;
freeze:
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_321 is
dependencies: no_reset;
freeze:
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_322 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_323 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_324 is
dependencies: no_reset;
freeze:
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_325 is
dependencies: no_reset;
freeze:
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	max_id_at_t = max_id@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = max_id_at_t;
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = max_id_at_t;
end property;

property run_0_read_326 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_327 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	max_id_at_t = max_id@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = max_id_at_t;
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = max_id_at_t;
end property;

property run_0_read_328 is
dependencies: no_reset;
freeze:
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data));
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data));
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_329 is
dependencies: no_reset;
freeze:
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data));
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data);
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_330 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data));
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data));
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_331 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data));
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data);
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_332 is
dependencies: no_reset;
freeze:
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data);
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data));
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_333 is
dependencies: no_reset;
freeze:
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	max_id_at_t = max_id@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data);
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data);
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = max_id_at_t;
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = max_id_at_t;
end property;

property run_0_read_334 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data);
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data));
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_335 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	max_id_at_t = max_id@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data);
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data);
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = max_id_at_t;
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = max_id_at_t;
end property;

property run_0_read_336 is
dependencies: no_reset;
freeze:
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: not((getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_337 is
dependencies: no_reset;
freeze:
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: (getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_338 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: not((getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_339 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: (getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_340 is
dependencies: no_reset;
freeze:
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: not((getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_341 is
dependencies: no_reset;
freeze:
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	max_id_at_t = max_id@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: (getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = max_id_at_t;
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = max_id_at_t;
end property;

property run_0_read_342 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: not((getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_343 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	max_id_at_t = max_id@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: (getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = max_id_at_t;
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = max_id_at_t;
end property;

property run_0_read_344 is
dependencies: no_reset;
freeze:
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data));
	 at t: not((getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data));
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_345 is
dependencies: no_reset;
freeze:
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data));
	 at t: (getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data);
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_346 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data));
	 at t: not((getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data));
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_347 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data));
	 at t: (getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data);
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_348 is
dependencies: no_reset;
freeze:
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data);
	 at t: not((getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data));
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_349 is
dependencies: no_reset;
freeze:
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	max_id_at_t = max_id@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data);
	 at t: (getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data);
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = max_id_at_t;
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = max_id_at_t;
end property;

property run_0_read_350 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data);
	 at t: not((getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data));
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_351 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	max_id_at_t = max_id@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data);
	 at t: (getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data);
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = max_id_at_t;
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = max_id_at_t;
end property;

property run_0_read_352 is
dependencies: no_reset;
freeze:
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_353 is
dependencies: no_reset;
freeze:
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_354 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_355 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_356 is
dependencies: no_reset;
freeze:
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_357 is
dependencies: no_reset;
freeze:
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	max_id_at_t = max_id@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = max_id_at_t;
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = max_id_at_t;
end property;

property run_0_read_358 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_359 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	max_id_at_t = max_id@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = max_id_at_t;
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = max_id_at_t;
end property;

property run_0_read_360 is
dependencies: no_reset;
freeze:
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= threshold_data));
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= threshold_data));
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_361 is
dependencies: no_reset;
freeze:
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= threshold_data));
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= threshold_data);
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_362 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= threshold_data));
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= threshold_data));
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_363 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= threshold_data));
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= threshold_data);
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_364 is
dependencies: no_reset;
freeze:
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= threshold_data);
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= threshold_data));
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_365 is
dependencies: no_reset;
freeze:
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	max_id_at_t = max_id@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= threshold_data);
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= threshold_data);
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = max_id_at_t;
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = max_id_at_t;
end property;

property run_0_read_366 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= threshold_data);
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= threshold_data));
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_367 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	max_id_at_t = max_id@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= threshold_data);
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= threshold_data);
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = max_id_at_t;
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = max_id_at_t;
end property;

property run_0_read_368 is
dependencies: no_reset;
freeze:
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: not((getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_369 is
dependencies: no_reset;
freeze:
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: (getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_370 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: not((getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_371 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: (getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_372 is
dependencies: no_reset;
freeze:
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: not((getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_373 is
dependencies: no_reset;
freeze:
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	max_id_at_t = max_id@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: (getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = max_id_at_t;
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = max_id_at_t;
end property;

property run_0_read_374 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: not((getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_375 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	max_id_at_t = max_id@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: (getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = max_id_at_t;
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = max_id_at_t;
end property;

property run_0_read_376 is
dependencies: no_reset;
freeze:
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= threshold_data));
	 at t: not((getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= threshold_data));
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_377 is
dependencies: no_reset;
freeze:
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= threshold_data));
	 at t: (getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= threshold_data);
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_378 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= threshold_data));
	 at t: not((getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= threshold_data));
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_379 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= threshold_data));
	 at t: (getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= threshold_data);
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_380 is
dependencies: no_reset;
freeze:
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= threshold_data);
	 at t: not((getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= threshold_data));
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_381 is
dependencies: no_reset;
freeze:
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	max_id_at_t = max_id@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= threshold_data);
	 at t: (getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= threshold_data);
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = max_id_at_t;
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = max_id_at_t;
end property;

property run_0_read_382 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= threshold_data);
	 at t: not((getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= threshold_data));
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,fromGateway_Int2_sig_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_383 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	enabled_data_at_t = enabled_data@t,
	fromGateway_Int2_sig_at_t = fromGateway_Int2_sig@t,
	max_id_at_t = max_id@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= threshold_data);
	 at t: (getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),fromGateway_Int2_sig),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= threshold_data);
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
	 at t: not(fromGateway_Int1_sync);
	 at t: fromGateway_Int2_sync;
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = max_id_at_t;
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = fromGateway_Int2_sig_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = max_id_at_t;
end property;

property run_0_read_384 is
dependencies: no_reset;
freeze:
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_385 is
dependencies: no_reset;
freeze:
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_386 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_387 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_388 is
dependencies: no_reset;
freeze:
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_389 is
dependencies: no_reset;
freeze:
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	max_id_at_t = max_id@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = max_id_at_t;
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = max_id_at_t;
end property;

property run_0_read_390 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_391 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	max_id_at_t = max_id@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = max_id_at_t;
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = max_id_at_t;
end property;

property run_0_read_392 is
dependencies: no_reset;
freeze:
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data));
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data));
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_393 is
dependencies: no_reset;
freeze:
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data));
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data);
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_394 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data));
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data));
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_395 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data));
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data);
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_396 is
dependencies: no_reset;
freeze:
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data);
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data));
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_397 is
dependencies: no_reset;
freeze:
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	max_id_at_t = max_id@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data);
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data);
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = max_id_at_t;
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = max_id_at_t;
end property;

property run_0_read_398 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data);
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data));
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_399 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	max_id_at_t = max_id@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data);
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data);
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = max_id_at_t;
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = max_id_at_t;
end property;

property run_0_read_400 is
dependencies: no_reset;
freeze:
	enabled_data_at_t = enabled_data@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: not((getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_401 is
dependencies: no_reset;
freeze:
	enabled_data_at_t = enabled_data@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: (getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_402 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	enabled_data_at_t = enabled_data@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: not((getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_403 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	enabled_data_at_t = enabled_data@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: (getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_404 is
dependencies: no_reset;
freeze:
	enabled_data_at_t = enabled_data@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: not((getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_405 is
dependencies: no_reset;
freeze:
	enabled_data_at_t = enabled_data@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	max_id_at_t = max_id@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: (getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = max_id_at_t;
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = max_id_at_t;
end property;

property run_0_read_406 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	enabled_data_at_t = enabled_data@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: not((getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_407 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	enabled_data_at_t = enabled_data@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	max_id_at_t = max_id@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: (getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = max_id_at_t;
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = max_id_at_t;
end property;

property run_0_read_408 is
dependencies: no_reset;
freeze:
	enabled_data_at_t = enabled_data@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data));
	 at t: not((getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data));
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_409 is
dependencies: no_reset;
freeze:
	enabled_data_at_t = enabled_data@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data));
	 at t: (getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data);
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_410 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	enabled_data_at_t = enabled_data@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data));
	 at t: not((getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data));
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_411 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	enabled_data_at_t = enabled_data@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data));
	 at t: (getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data);
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_412 is
dependencies: no_reset;
freeze:
	enabled_data_at_t = enabled_data@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data);
	 at t: not((getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data));
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_413 is
dependencies: no_reset;
freeze:
	enabled_data_at_t = enabled_data@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	max_id_at_t = max_id@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data);
	 at t: (getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data);
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = max_id_at_t;
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = max_id_at_t;
end property;

property run_0_read_414 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	enabled_data_at_t = enabled_data@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data);
	 at t: not((getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data));
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_415 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	enabled_data_at_t = enabled_data@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	max_id_at_t = max_id@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data);
	 at t: (getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data);
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = max_id_at_t;
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = max_id_at_t;
end property;

property run_0_read_416 is
dependencies: no_reset;
freeze:
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_417 is
dependencies: no_reset;
freeze:
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_418 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_419 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_420 is
dependencies: no_reset;
freeze:
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_421 is
dependencies: no_reset;
freeze:
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	max_id_at_t = max_id@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = max_id_at_t;
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = max_id_at_t;
end property;

property run_0_read_422 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_423 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	max_id_at_t = max_id@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = max_id_at_t;
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = max_id_at_t;
end property;

property run_0_read_424 is
dependencies: no_reset;
freeze:
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= threshold_data));
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= threshold_data));
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_425 is
dependencies: no_reset;
freeze:
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= threshold_data));
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= threshold_data);
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_426 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= threshold_data));
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= threshold_data));
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_427 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= threshold_data));
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= threshold_data);
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_428 is
dependencies: no_reset;
freeze:
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= threshold_data);
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= threshold_data));
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_429 is
dependencies: no_reset;
freeze:
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	max_id_at_t = max_id@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= threshold_data);
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= threshold_data);
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = max_id_at_t;
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = max_id_at_t;
end property;

property run_0_read_430 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= threshold_data);
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= threshold_data));
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_431 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	max_id_at_t = max_id@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= threshold_data);
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= threshold_data);
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = max_id_at_t;
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = max_id_at_t;
end property;

property run_0_read_432 is
dependencies: no_reset;
freeze:
	enabled_data_at_t = enabled_data@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: not((getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_433 is
dependencies: no_reset;
freeze:
	enabled_data_at_t = enabled_data@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: (getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_434 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	enabled_data_at_t = enabled_data@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: not((getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_435 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	enabled_data_at_t = enabled_data@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: (getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_436 is
dependencies: no_reset;
freeze:
	enabled_data_at_t = enabled_data@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: not((getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_437 is
dependencies: no_reset;
freeze:
	enabled_data_at_t = enabled_data@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	max_id_at_t = max_id@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: (getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = max_id_at_t;
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = max_id_at_t;
end property;

property run_0_read_438 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	enabled_data_at_t = enabled_data@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: not((getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_439 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	enabled_data_at_t = enabled_data@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	max_id_at_t = max_id@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: (getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = max_id_at_t;
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = max_id_at_t;
end property;

property run_0_read_440 is
dependencies: no_reset;
freeze:
	enabled_data_at_t = enabled_data@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= threshold_data));
	 at t: not((getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= threshold_data));
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_441 is
dependencies: no_reset;
freeze:
	enabled_data_at_t = enabled_data@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= threshold_data));
	 at t: (getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= threshold_data);
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_442 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	enabled_data_at_t = enabled_data@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= threshold_data));
	 at t: not((getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= threshold_data));
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_443 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	enabled_data_at_t = enabled_data@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= threshold_data));
	 at t: (getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= threshold_data);
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_444 is
dependencies: no_reset;
freeze:
	enabled_data_at_t = enabled_data@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= threshold_data);
	 at t: not((getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= threshold_data));
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_445 is
dependencies: no_reset;
freeze:
	enabled_data_at_t = enabled_data@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	max_id_at_t = max_id@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= threshold_data);
	 at t: (getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= threshold_data);
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = max_id_at_t;
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = max_id_at_t;
end property;

property run_0_read_446 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	enabled_data_at_t = enabled_data@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= threshold_data);
	 at t: not((getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= threshold_data));
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),fromMemory_Priority_Int_1_sig_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_447 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	enabled_data_at_t = enabled_data@t,
	fromMemory_Priority_Int_1_sig_at_t = fromMemory_Priority_Int_1_sig@t,
	max_id_at_t = max_id@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= threshold_data);
	 at t: (getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),fromMemory_Priority_Int_1_sig,priority_Int_2_data,resize(0,32)) <= threshold_data);
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: fromMemory_Priority_Int_1_sync;
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = max_id_at_t;
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = fromMemory_Priority_Int_1_sig_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = max_id_at_t;
end property;

property run_0_read_448 is
dependencies: no_reset;
freeze:
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_449 is
dependencies: no_reset;
freeze:
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_450 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_451 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_452 is
dependencies: no_reset;
freeze:
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_453 is
dependencies: no_reset;
freeze:
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	max_id_at_t = max_id@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = max_id_at_t;
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = max_id_at_t;
end property;

property run_0_read_454 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_455 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	max_id_at_t = max_id@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = max_id_at_t;
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = max_id_at_t;
end property;

property run_0_read_456 is
dependencies: no_reset;
freeze:
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data));
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data));
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_457 is
dependencies: no_reset;
freeze:
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data));
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data);
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_458 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data));
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data));
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_459 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data));
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data);
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_460 is
dependencies: no_reset;
freeze:
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data);
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data));
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_461 is
dependencies: no_reset;
freeze:
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	max_id_at_t = max_id@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data);
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data);
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = max_id_at_t;
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = max_id_at_t;
end property;

property run_0_read_462 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data);
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data));
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_463 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	max_id_at_t = max_id@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data);
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data);
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = max_id_at_t;
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = max_id_at_t;
end property;

property run_0_read_464 is
dependencies: no_reset;
freeze:
	enabled_data_at_t = enabled_data@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: not((getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_465 is
dependencies: no_reset;
freeze:
	enabled_data_at_t = enabled_data@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: (getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_466 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	enabled_data_at_t = enabled_data@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: not((getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_467 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	enabled_data_at_t = enabled_data@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: (getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_468 is
dependencies: no_reset;
freeze:
	enabled_data_at_t = enabled_data@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: not((getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_469 is
dependencies: no_reset;
freeze:
	enabled_data_at_t = enabled_data@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	max_id_at_t = max_id@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: (getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = max_id_at_t;
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = max_id_at_t;
end property;

property run_0_read_470 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	enabled_data_at_t = enabled_data@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: not((getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_471 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	enabled_data_at_t = enabled_data@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	max_id_at_t = max_id@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: (getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = max_id_at_t;
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = max_id_at_t;
end property;

property run_0_read_472 is
dependencies: no_reset;
freeze:
	enabled_data_at_t = enabled_data@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data));
	 at t: not((getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data));
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_473 is
dependencies: no_reset;
freeze:
	enabled_data_at_t = enabled_data@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data));
	 at t: (getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data);
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_474 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	enabled_data_at_t = enabled_data@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data));
	 at t: not((getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data));
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_475 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	enabled_data_at_t = enabled_data@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data));
	 at t: (getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data);
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_476 is
dependencies: no_reset;
freeze:
	enabled_data_at_t = enabled_data@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data);
	 at t: not((getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data));
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_477 is
dependencies: no_reset;
freeze:
	enabled_data_at_t = enabled_data@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	max_id_at_t = max_id@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data);
	 at t: (getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data);
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = max_id_at_t;
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = max_id_at_t;
end property;

property run_0_read_478 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	enabled_data_at_t = enabled_data@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data);
	 at t: not((getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data));
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,fromMemory_Priority_Int_2_sig_at_t,0,0);
end property;

property run_0_read_479 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	enabled_data_at_t = enabled_data@t,
	fromMemory_Priority_Int_2_sig_at_t = fromMemory_Priority_Int_2_sig@t,
	max_id_at_t = max_id@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data);
	 at t: (getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),priority_Int_1_data,fromMemory_Priority_Int_2_sig,resize(0,32)) <= threshold_data);
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: fromMemory_Priority_Int_2_sync;
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = max_id_at_t;
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = fromMemory_Priority_Int_2_sig_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = max_id_at_t;
end property;

property run_0_read_480 is
dependencies: no_reset;
freeze:
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_481 is
dependencies: no_reset;
freeze:
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_482 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_483 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_484 is
dependencies: no_reset;
freeze:
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_485 is
dependencies: no_reset;
freeze:
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	max_id_at_t = max_id@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = max_id_at_t;
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = max_id_at_t;
end property;

property run_0_read_486 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_487 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	max_id_at_t = max_id@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = max_id_at_t;
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = max_id_at_t;
end property;

property run_0_read_488 is
dependencies: no_reset;
freeze:
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= threshold_data));
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= threshold_data));
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_489 is
dependencies: no_reset;
freeze:
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= threshold_data));
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= threshold_data);
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_490 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= threshold_data));
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= threshold_data));
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_491 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= threshold_data));
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= threshold_data);
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_492 is
dependencies: no_reset;
freeze:
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= threshold_data);
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= threshold_data));
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_493 is
dependencies: no_reset;
freeze:
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	max_id_at_t = max_id@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= threshold_data);
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= threshold_data);
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = max_id_at_t;
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = max_id_at_t;
end property;

property run_0_read_494 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= threshold_data);
	 at t: not((getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= threshold_data));
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(fromMemory_Enabled_sig_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_495 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	fromMemory_Enabled_sig_at_t = fromMemory_Enabled_sig@t,
	max_id_at_t = max_id@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= threshold_data);
	 at t: (getPriority(fromMemory_Enabled_sig,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= threshold_data);
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: fromMemory_Enabled_sync;
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = fromMemory_Enabled_sig_at_t;
	 at t+1: max_id = max_id_at_t;
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = max_id_at_t;
end property;

property run_0_read_496 is
dependencies: no_reset;
freeze:
	enabled_data_at_t = enabled_data@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: not((getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_497 is
dependencies: no_reset;
freeze:
	enabled_data_at_t = enabled_data@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: (getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_498 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	enabled_data_at_t = enabled_data@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: not((getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_499 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	enabled_data_at_t = enabled_data@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: (getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_500 is
dependencies: no_reset;
freeze:
	enabled_data_at_t = enabled_data@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: not((getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_501 is
dependencies: no_reset;
freeze:
	enabled_data_at_t = enabled_data@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	max_id_at_t = max_id@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: (getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = max_id_at_t;
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = max_id_at_t;
end property;

property run_0_read_502 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	enabled_data_at_t = enabled_data@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: not((getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig));
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_503 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	enabled_data_at_t = enabled_data@t,
	fromMemory_Threshold_sig_at_t = fromMemory_Threshold_sig@t,
	max_id_at_t = max_id@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: (getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= fromMemory_Threshold_sig);
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: fromMemory_Threshold_sync;
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = max_id_at_t;
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = fromMemory_Threshold_sig_at_t;
	 at t+1: toMemory_MaxID_sig = max_id_at_t;
end property;

property run_0_read_504 is
dependencies: no_reset;
freeze:
	enabled_data_at_t = enabled_data@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= threshold_data));
	 at t: not((getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= threshold_data));
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_505 is
dependencies: no_reset;
freeze:
	enabled_data_at_t = enabled_data@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= threshold_data));
	 at t: (getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= threshold_data);
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_506 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	enabled_data_at_t = enabled_data@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= threshold_data));
	 at t: not((getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= threshold_data));
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_507 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	enabled_data_at_t = enabled_data@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: not((getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= threshold_data));
	 at t: (getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= threshold_data);
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_508 is
dependencies: no_reset;
freeze:
	enabled_data_at_t = enabled_data@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	fromMemory_Claimed_sync_at_t = fromMemory_Claimed_sync@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= threshold_data);
	 at t: not((getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= threshold_data));
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,1,pending_Int_1_data_at_t),manageInt_Claim(fromMemory_Claimed_sig_at_t,fromMemory_Claimed_sync_at_t,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_509 is
dependencies: no_reset;
freeze:
	enabled_data_at_t = enabled_data@t,
	fromMemory_Claimed_sig_at_t = fromMemory_Claimed_sig@t,
	max_id_at_t = max_id@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= threshold_data);
	 at t: (getPriority(enabled_data,manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(1,32),pending_Int_1_data),manageInt_Claim(fromMemory_Claimed_sig,fromMemory_Claimed_sync,resize(2,32),pending_Int_2_data),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= threshold_data);
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: fromMemory_Claimed_sync;
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = fromMemory_Claimed_sig_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = max_id_at_t;
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = max_id_at_t;
end property;

property run_0_read_510 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	enabled_data_at_t = enabled_data@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= threshold_data);
	 at t: not((getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= threshold_data));
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = true;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = getId(enabled_data_at_t,manageInt_Claim(claimed_data_at_t,false,1,pending_Int_1_data_at_t),manageInt_Claim(claimed_data_at_t,false,2,pending_Int_2_data_at_t),priority_Int_1_data_at_t,priority_Int_2_data_at_t,0,0);
end property;

property run_0_read_511 is
dependencies: no_reset;
freeze:
	claimed_data_at_t = claimed_data@t,
	enabled_data_at_t = enabled_data@t,
	max_id_at_t = max_id@t,
	pending_Int_1_data_at_t = pending_Int_1_data@t,
	pending_Int_2_data_at_t = pending_Int_2_data@t,
	priority_Int_1_data_at_t = priority_Int_1_data@t,
	priority_Int_2_data_at_t = priority_Int_2_data@t,
	threshold_data_at_t = threshold_data@t;
assume: 
	 at t: run_0;
	 at t: (getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= threshold_data);
	 at t: (getPriority(enabled_data,manageInt_Claim(claimed_data,false,resize(1,32),pending_Int_1_data),manageInt_Claim(claimed_data,false,resize(2,32),pending_Int_2_data),priority_Int_1_data,priority_Int_2_data,resize(0,32)) <= threshold_data);
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
	 at t: not(fromGateway_Int1_sync);
	 at t: not(fromGateway_Int2_sync);
	 at t: not(fromMemory_Priority_Int_1_sync);
	 at t: not(fromMemory_Priority_Int_2_sync);
	 at t: not(fromMemory_Enabled_sync);
	 at t: not(fromMemory_Threshold_sync);
	 at t: not(fromMemory_Claimed_sync);
prove:
	 at t+1: run_0;
	 at t+1: MEIP_port_sig = false;
	 at t+1: claimed_data = claimed_data_at_t;
	 at t+1: enabled_data = enabled_data_at_t;
	 at t+1: max_id = max_id_at_t;
	 at t+1: pending_Int_1_data = pending_Int_1_data_at_t;
	 at t+1: pending_Int_2_data = pending_Int_2_data_at_t;
	 at t+1: priority_Int_1_data = priority_Int_1_data_at_t;
	 at t+1: priority_Int_2_data = priority_Int_2_data_at_t;
	 at t+1: threshold_data = threshold_data_at_t;
	 at t+1: toMemory_MaxID_sig = max_id_at_t;
end property;