// DATA TYPES //
typedef enum {IDLE, RUN} phases;

`define next_shift_amount 0 //IN CASE OF REQUIRED SIGNALS VALUES IN THE FUTURE, SHIFT YOUR ENTIRE TIMING BY THIS FACTOR

`include "ipc.sva"
`include "BubbleSort_functions.sva"

import top_level_types::*;
import BubbleSort_types::*;

module BubbleSort_verification(reset);

input reset;

//DESIGNER SHOULD PAY ATTENTION FOR USING THE MODEL CORRECT NAME TO REFER TO THE CLK SIGNAL USED IN IT
default clocking default_clk @(posedge BubbleSort.clk); endclocking

// SYNC AND NOTIFY SIGNALS (1-cycle macros) //
function data_in_sync;
	data_in_sync = ;
endfunction
function data_out_sync;
	data_out_sync = ;
endfunction
function data_in_notify;
	data_in_notify = ;
endfunction
function data_out_notify;
	data_out_notify = ;
endfunction

// DP SIGNALS //
function int_8 data_in_sig;
	data_in_sig = ;
endfunction
function int data_in_sig_0;
	data_in_sig_0 = ;
endfunction
function int data_in_sig_1;
	data_in_sig_1 = ;
endfunction
function int data_in_sig_2;
	data_in_sig_2 = ;
endfunction
function int data_in_sig_3;
	data_in_sig_3 = ;
endfunction
function int data_in_sig_4;
	data_in_sig_4 = ;
endfunction
function int data_in_sig_5;
	data_in_sig_5 = ;
endfunction
function int data_in_sig_6;
	data_in_sig_6 = ;
endfunction
function int data_in_sig_7;
	data_in_sig_7 = ;
endfunction
function int_8 data_out_sig;
	data_out_sig = ;
endfunction
function int data_out_sig_0;
	data_out_sig_0 = ;
endfunction
function int data_out_sig_1;
	data_out_sig_1 = ;
endfunction
function int data_out_sig_2;
	data_out_sig_2 = ;
endfunction
function int data_out_sig_3;
	data_out_sig_3 = ;
endfunction
function int data_out_sig_4;
	data_out_sig_4 = ;
endfunction
function int data_out_sig_5;
	data_out_sig_5 = ;
endfunction
function int data_out_sig_6;
	data_out_sig_6 = ;
endfunction
function int data_out_sig_7;
	data_out_sig_7 = ;
endfunction

// VISIBLE REGISTERS //
function int_8 data_algorithm;
	data_algorithm = ;
endfunction
function int i;
	i = ;
endfunction
function int j;
	j = ;
endfunction
function phases phase_algorithm;
	phase_algorithm = ;
endfunction

// STATES //
function data_in_1;
	data_in_1 = ;
endfunction
function clock_tick_2;
	clock_tick_2 = ;
endfunction
function clock_tick_3;
	clock_tick_3 = ;
endfunction
function state_4;
	state_4 = ;
endfunction


////////////////////////////////////
//////////// Operations ////////////
////////////////////////////////////

sequence reset_sequence;
	//DESIGNER REFER TO MODEL RESET SIGNAL HERE
endsequence

property reset_p;
	reset_sequence |=>
	t##0 data_in_1() and
	t##0 data_algorithm_0() == 0 and
	t##0 data_algorithm_1() == 0 and
	t##0 data_algorithm_2() == 0 and
	t##0 data_algorithm_3() == 0 and
	t##0 data_algorithm_4() == 0 and
	t##0 data_algorithm_5() == 0 and
	t##0 data_algorithm_6() == 0 and
	t##0 data_algorithm_7() == 0 and
	t##0 i() == 0 and
	t##0 j() == 0 and
	t##0 phase_algorithm() == IDLE and
	t##0 data_in_notify() == 1 and
	t##0 data_out_notify() == 0;
endproperty
reset_a: assert property (reset_p);



property clock_tick_2_10_p(o);
 bit[31:0] data_algorithm_0_0;
 bit[31:0] data_algorithm_1_0;
 bit[31:0] data_algorithm_2_0;
 bit[31:0] data_algorithm_3_0;
 bit[31:0] data_algorithm_4_0;
 bit[31:0] data_algorithm_5_0;
 bit[31:0] data_algorithm_6_0;
 bit[31:0] data_algorithm_7_0;
 bit[31:0] i_0;
 bit[31:0] j_0;
 bit[31:0] phase_algorithm_0;
	t ##0 hold(data_algorithm_0_0, data_algorithm_0()) and
	t ##0 hold(data_algorithm_1_0, data_algorithm_1()) and
	t ##0 hold(data_algorithm_2_0, data_algorithm_2()) and
	t ##0 hold(data_algorithm_3_0, data_algorithm_3()) and
	t ##0 hold(data_algorithm_4_0, data_algorithm_4()) and
	t ##0 hold(data_algorithm_5_0, data_algorithm_5()) and
	t ##0 hold(data_algorithm_6_0, data_algorithm_6()) and
	t ##0 hold(data_algorithm_7_0, data_algorithm_7()) and
	t ##0 hold(i_0, i()) and
	t ##0 hold(j_0, j()) and
	t ##0 hold(phase_algorithm_0, phase_algorithm()) and
	t##0 clock_tick_2() and
	t##0 !((phase_algorithm() == IDLE)) and
	t##0 !((i() == 8)) and
	t##0 !((j() == (7 + (-1 * i())))) and
	t##0 !((data_algorithm[j()] <= data_algorithm[(j() + 1)])) and
	t##0 !((j() == 0)) and
	t##0 !((j() == 1)) and
	t##0 !((j() == 2)) and
	t##0 !((j() == 3)) and
	t##0 !((j() == 4)) and
	t##0 !((j() == 5)) and
	t##0 !((j() == 6))
implies
	t_end(o)##0 clock_tick_2() and
	t_end(o)##0 data_algorithm_0() == data_algorithm_0_0 and
	t_end(o)##0 data_algorithm_1() == data_algorithm_1_0 and
	t_end(o)##0 data_algorithm_2() == data_algorithm_2_0 and
	t_end(o)##0 data_algorithm_3() == data_algorithm_3_0 and
	t_end(o)##0 data_algorithm_4() == data_algorithm_4_0 and
	t_end(o)##0 data_algorithm_5() == data_algorithm_5_0 and
	t_end(o)##0 data_algorithm_6() == data_algorithm_6_0 and
	t_end(o)##0 data_algorithm_7() == data_algorithm_7_0 and
	t_end(o)##0 i() == i_0 and
	t_end(o)##0 j() == j_0 and
	t_end(o)##0 phase_algorithm() == phase_algorithm_0 and
	during_o (t, 1, t_end(o), 0, data_in_notify() == 0) and
	during_o (t, 1, t_end(o), 0, data_out_notify() == 0);
endproperty;
clock_tick_2_10_a: assert property (disable iff (reset) clock_tick_2_10_p(1)); //ASSIGN t_end offset here



property clock_tick_2_11_p(o);
 bit[31:0] data_algorithm_0_0;
 bit[31:0] data_algorithm_1_0;
 bit[31:0] data_algorithm_2_0;
 bit[31:0] data_algorithm_3_0;
 bit[31:0] data_algorithm_4_0;
 bit[31:0] data_algorithm_5_0;
 bit[31:0] data_algorithm_6_0;
 bit[31:0] data_algorithm_7_0;
 bit[31:0] i_0;
 bit[31:0] j_0;
 bit[31:0] phase_algorithm_0;
	t ##0 hold(data_algorithm_0_0, data_algorithm_0()) and
	t ##0 hold(data_algorithm_1_0, data_algorithm_1()) and
	t ##0 hold(data_algorithm_2_0, data_algorithm_2()) and
	t ##0 hold(data_algorithm_3_0, data_algorithm_3()) and
	t ##0 hold(data_algorithm_4_0, data_algorithm_4()) and
	t ##0 hold(data_algorithm_5_0, data_algorithm_5()) and
	t ##0 hold(data_algorithm_6_0, data_algorithm_6()) and
	t ##0 hold(data_algorithm_7_0, data_algorithm_7()) and
	t ##0 hold(i_0, i()) and
	t ##0 hold(j_0, j()) and
	t ##0 hold(phase_algorithm_0, phase_algorithm()) and
	t##0 clock_tick_2() and
	t##0 !((phase_algorithm() == IDLE)) and
	t##0 !((i() == 8)) and
	t##0 !((j() == (7 + (-1 * i())))) and
	t##0 (data_algorithm[j()] <= data_algorithm[(j() + 1)])
implies
	t_end(o)##0 clock_tick_2() and
	t_end(o)##0 data_algorithm_0() == data_algorithm_0_0 and
	t_end(o)##0 data_algorithm_1() == data_algorithm_1_0 and
	t_end(o)##0 data_algorithm_2() == data_algorithm_2_0 and
	t_end(o)##0 data_algorithm_3() == data_algorithm_3_0 and
	t_end(o)##0 data_algorithm_4() == data_algorithm_4_0 and
	t_end(o)##0 data_algorithm_5() == data_algorithm_5_0 and
	t_end(o)##0 data_algorithm_6() == data_algorithm_6_0 and
	t_end(o)##0 data_algorithm_7() == data_algorithm_7_0 and
	t_end(o)##0 i() == i_0 and
	t_end(o)##0 j() == j_0 and
	t_end(o)##0 phase_algorithm() == phase_algorithm_0 and
	during_o (t, 1, t_end(o), 0, data_in_notify() == 0) and
	during_o (t, 1, t_end(o), 0, data_out_notify() == 0);
endproperty;
clock_tick_2_11_a: assert property (disable iff (reset) clock_tick_2_11_p(1)); //ASSIGN t_end offset here



property clock_tick_2_3_p(o);
 bit[31:0] data_algorithm_0_0;
 bit[31:0] data_algorithm_1_0;
 bit[31:0] data_algorithm_2_0;
 bit[31:0] data_algorithm_3_0;
 bit[31:0] data_algorithm_4_0;
 bit[31:0] data_algorithm_5_0;
 bit[31:0] data_algorithm_6_0;
 bit[31:0] data_algorithm_7_0;
 bit[31:0] i_0;
 bit[31:0] j_0;
 bit[31:0] phase_algorithm_0;
	t ##0 hold(data_algorithm_0_0, data_algorithm_0()) and
	t ##0 hold(data_algorithm_1_0, data_algorithm_1()) and
	t ##0 hold(data_algorithm_2_0, data_algorithm_2()) and
	t ##0 hold(data_algorithm_3_0, data_algorithm_3()) and
	t ##0 hold(data_algorithm_4_0, data_algorithm_4()) and
	t ##0 hold(data_algorithm_5_0, data_algorithm_5()) and
	t ##0 hold(data_algorithm_6_0, data_algorithm_6()) and
	t ##0 hold(data_algorithm_7_0, data_algorithm_7()) and
	t ##0 hold(i_0, i()) and
	t ##0 hold(j_0, j()) and
	t ##0 hold(phase_algorithm_0, phase_algorithm()) and
	t##0 clock_tick_2() and
	t##0 !((phase_algorithm() == IDLE)) and
	t##0 !((i() == 8)) and
	t##0 !((i() == 7)) and
	t##0 !((data_algorithm[j()] <= data_algorithm[(j() + 1)])) and
	t##0 (j() == 0)
implies
	t_end(o)##0 clock_tick_2() and
	t_end(o)##0 data_algorithm_0() == data_algorithm_1_0 and
	t_end(o)##0 data_algorithm_1() == data_algorithm_0_0 and
	t_end(o)##0 data_algorithm_2() == data_algorithm_2_0 and
	t_end(o)##0 data_algorithm_3() == data_algorithm_3_0 and
	t_end(o)##0 data_algorithm_4() == data_algorithm_4_0 and
	t_end(o)##0 data_algorithm_5() == data_algorithm_5_0 and
	t_end(o)##0 data_algorithm_6() == data_algorithm_6_0 and
	t_end(o)##0 data_algorithm_7() == data_algorithm_7_0 and
	t_end(o)##0 i() == i_0 and
	t_end(o)##0 j() == j_0 and
	t_end(o)##0 phase_algorithm() == phase_algorithm_0 and
	during_o (t, 1, t_end(o), 0, data_in_notify() == 0) and
	during_o (t, 1, t_end(o), 0, data_out_notify() == 0);
endproperty;
clock_tick_2_3_a: assert property (disable iff (reset) clock_tick_2_3_p(1)); //ASSIGN t_end offset here



property clock_tick_2_4_p(o);
 bit[31:0] data_algorithm_0_0;
 bit[31:0] data_algorithm_1_0;
 bit[31:0] data_algorithm_2_0;
 bit[31:0] data_algorithm_3_0;
 bit[31:0] data_algorithm_4_0;
 bit[31:0] data_algorithm_5_0;
 bit[31:0] data_algorithm_6_0;
 bit[31:0] data_algorithm_7_0;
 bit[31:0] i_0;
 bit[31:0] j_0;
 bit[31:0] phase_algorithm_0;
	t ##0 hold(data_algorithm_0_0, data_algorithm_0()) and
	t ##0 hold(data_algorithm_1_0, data_algorithm_1()) and
	t ##0 hold(data_algorithm_2_0, data_algorithm_2()) and
	t ##0 hold(data_algorithm_3_0, data_algorithm_3()) and
	t ##0 hold(data_algorithm_4_0, data_algorithm_4()) and
	t ##0 hold(data_algorithm_5_0, data_algorithm_5()) and
	t ##0 hold(data_algorithm_6_0, data_algorithm_6()) and
	t ##0 hold(data_algorithm_7_0, data_algorithm_7()) and
	t ##0 hold(i_0, i()) and
	t ##0 hold(j_0, j()) and
	t ##0 hold(phase_algorithm_0, phase_algorithm()) and
	t##0 clock_tick_2() and
	t##0 !((phase_algorithm() == IDLE)) and
	t##0 !((i() == 8)) and
	t##0 !((i() == 6)) and
	t##0 !((data_algorithm[j()] <= data_algorithm[(j() + 1)])) and
	t##0 (j() == 1)
implies
	t_end(o)##0 clock_tick_2() and
	t_end(o)##0 data_algorithm_0() == data_algorithm_0_0 and
	t_end(o)##0 data_algorithm_1() == data_algorithm_2_0 and
	t_end(o)##0 data_algorithm_2() == data_algorithm_1_0 and
	t_end(o)##0 data_algorithm_3() == data_algorithm_3_0 and
	t_end(o)##0 data_algorithm_4() == data_algorithm_4_0 and
	t_end(o)##0 data_algorithm_5() == data_algorithm_5_0 and
	t_end(o)##0 data_algorithm_6() == data_algorithm_6_0 and
	t_end(o)##0 data_algorithm_7() == data_algorithm_7_0 and
	t_end(o)##0 i() == i_0 and
	t_end(o)##0 j() == j_0 and
	t_end(o)##0 phase_algorithm() == phase_algorithm_0 and
	during_o (t, 1, t_end(o), 0, data_in_notify() == 0) and
	during_o (t, 1, t_end(o), 0, data_out_notify() == 0);
endproperty;
clock_tick_2_4_a: assert property (disable iff (reset) clock_tick_2_4_p(1)); //ASSIGN t_end offset here



property clock_tick_2_5_p(o);
 bit[31:0] data_algorithm_0_0;
 bit[31:0] data_algorithm_1_0;
 bit[31:0] data_algorithm_2_0;
 bit[31:0] data_algorithm_3_0;
 bit[31:0] data_algorithm_4_0;
 bit[31:0] data_algorithm_5_0;
 bit[31:0] data_algorithm_6_0;
 bit[31:0] data_algorithm_7_0;
 bit[31:0] i_0;
 bit[31:0] j_0;
 bit[31:0] phase_algorithm_0;
	t ##0 hold(data_algorithm_0_0, data_algorithm_0()) and
	t ##0 hold(data_algorithm_1_0, data_algorithm_1()) and
	t ##0 hold(data_algorithm_2_0, data_algorithm_2()) and
	t ##0 hold(data_algorithm_3_0, data_algorithm_3()) and
	t ##0 hold(data_algorithm_4_0, data_algorithm_4()) and
	t ##0 hold(data_algorithm_5_0, data_algorithm_5()) and
	t ##0 hold(data_algorithm_6_0, data_algorithm_6()) and
	t ##0 hold(data_algorithm_7_0, data_algorithm_7()) and
	t ##0 hold(i_0, i()) and
	t ##0 hold(j_0, j()) and
	t ##0 hold(phase_algorithm_0, phase_algorithm()) and
	t##0 clock_tick_2() and
	t##0 !((phase_algorithm() == IDLE)) and
	t##0 !((i() == 8)) and
	t##0 !((i() == 5)) and
	t##0 !((data_algorithm[j()] <= data_algorithm[(j() + 1)])) and
	t##0 (j() == 2)
implies
	t_end(o)##0 clock_tick_2() and
	t_end(o)##0 data_algorithm_0() == data_algorithm_0_0 and
	t_end(o)##0 data_algorithm_1() == data_algorithm_1_0 and
	t_end(o)##0 data_algorithm_2() == data_algorithm_3_0 and
	t_end(o)##0 data_algorithm_3() == data_algorithm_2_0 and
	t_end(o)##0 data_algorithm_4() == data_algorithm_4_0 and
	t_end(o)##0 data_algorithm_5() == data_algorithm_5_0 and
	t_end(o)##0 data_algorithm_6() == data_algorithm_6_0 and
	t_end(o)##0 data_algorithm_7() == data_algorithm_7_0 and
	t_end(o)##0 i() == i_0 and
	t_end(o)##0 j() == j_0 and
	t_end(o)##0 phase_algorithm() == phase_algorithm_0 and
	during_o (t, 1, t_end(o), 0, data_in_notify() == 0) and
	during_o (t, 1, t_end(o), 0, data_out_notify() == 0);
endproperty;
clock_tick_2_5_a: assert property (disable iff (reset) clock_tick_2_5_p(1)); //ASSIGN t_end offset here



property clock_tick_2_6_p(o);
 bit[31:0] data_algorithm_0_0;
 bit[31:0] data_algorithm_1_0;
 bit[31:0] data_algorithm_2_0;
 bit[31:0] data_algorithm_3_0;
 bit[31:0] data_algorithm_4_0;
 bit[31:0] data_algorithm_5_0;
 bit[31:0] data_algorithm_6_0;
 bit[31:0] data_algorithm_7_0;
 bit[31:0] i_0;
 bit[31:0] j_0;
 bit[31:0] phase_algorithm_0;
	t ##0 hold(data_algorithm_0_0, data_algorithm_0()) and
	t ##0 hold(data_algorithm_1_0, data_algorithm_1()) and
	t ##0 hold(data_algorithm_2_0, data_algorithm_2()) and
	t ##0 hold(data_algorithm_3_0, data_algorithm_3()) and
	t ##0 hold(data_algorithm_4_0, data_algorithm_4()) and
	t ##0 hold(data_algorithm_5_0, data_algorithm_5()) and
	t ##0 hold(data_algorithm_6_0, data_algorithm_6()) and
	t ##0 hold(data_algorithm_7_0, data_algorithm_7()) and
	t ##0 hold(i_0, i()) and
	t ##0 hold(j_0, j()) and
	t ##0 hold(phase_algorithm_0, phase_algorithm()) and
	t##0 clock_tick_2() and
	t##0 !((phase_algorithm() == IDLE)) and
	t##0 !((i() == 8)) and
	t##0 !((i() == 4)) and
	t##0 !((data_algorithm[j()] <= data_algorithm[(j() + 1)])) and
	t##0 (j() == 3)
implies
	t_end(o)##0 clock_tick_2() and
	t_end(o)##0 data_algorithm_0() == data_algorithm_0_0 and
	t_end(o)##0 data_algorithm_1() == data_algorithm_1_0 and
	t_end(o)##0 data_algorithm_2() == data_algorithm_2_0 and
	t_end(o)##0 data_algorithm_3() == data_algorithm_4_0 and
	t_end(o)##0 data_algorithm_4() == data_algorithm_3_0 and
	t_end(o)##0 data_algorithm_5() == data_algorithm_5_0 and
	t_end(o)##0 data_algorithm_6() == data_algorithm_6_0 and
	t_end(o)##0 data_algorithm_7() == data_algorithm_7_0 and
	t_end(o)##0 i() == i_0 and
	t_end(o)##0 j() == j_0 and
	t_end(o)##0 phase_algorithm() == phase_algorithm_0 and
	during_o (t, 1, t_end(o), 0, data_in_notify() == 0) and
	during_o (t, 1, t_end(o), 0, data_out_notify() == 0);
endproperty;
clock_tick_2_6_a: assert property (disable iff (reset) clock_tick_2_6_p(1)); //ASSIGN t_end offset here



property clock_tick_2_7_p(o);
 bit[31:0] data_algorithm_0_0;
 bit[31:0] data_algorithm_1_0;
 bit[31:0] data_algorithm_2_0;
 bit[31:0] data_algorithm_3_0;
 bit[31:0] data_algorithm_4_0;
 bit[31:0] data_algorithm_5_0;
 bit[31:0] data_algorithm_6_0;
 bit[31:0] data_algorithm_7_0;
 bit[31:0] i_0;
 bit[31:0] j_0;
 bit[31:0] phase_algorithm_0;
	t ##0 hold(data_algorithm_0_0, data_algorithm_0()) and
	t ##0 hold(data_algorithm_1_0, data_algorithm_1()) and
	t ##0 hold(data_algorithm_2_0, data_algorithm_2()) and
	t ##0 hold(data_algorithm_3_0, data_algorithm_3()) and
	t ##0 hold(data_algorithm_4_0, data_algorithm_4()) and
	t ##0 hold(data_algorithm_5_0, data_algorithm_5()) and
	t ##0 hold(data_algorithm_6_0, data_algorithm_6()) and
	t ##0 hold(data_algorithm_7_0, data_algorithm_7()) and
	t ##0 hold(i_0, i()) and
	t ##0 hold(j_0, j()) and
	t ##0 hold(phase_algorithm_0, phase_algorithm()) and
	t##0 clock_tick_2() and
	t##0 !((phase_algorithm() == IDLE)) and
	t##0 !((i() == 8)) and
	t##0 !((i() == 3)) and
	t##0 !((data_algorithm[j()] <= data_algorithm[(j() + 1)])) and
	t##0 (j() == 4)
implies
	t_end(o)##0 clock_tick_2() and
	t_end(o)##0 data_algorithm_0() == data_algorithm_0_0 and
	t_end(o)##0 data_algorithm_1() == data_algorithm_1_0 and
	t_end(o)##0 data_algorithm_2() == data_algorithm_2_0 and
	t_end(o)##0 data_algorithm_3() == data_algorithm_3_0 and
	t_end(o)##0 data_algorithm_4() == data_algorithm_5_0 and
	t_end(o)##0 data_algorithm_5() == data_algorithm_4_0 and
	t_end(o)##0 data_algorithm_6() == data_algorithm_6_0 and
	t_end(o)##0 data_algorithm_7() == data_algorithm_7_0 and
	t_end(o)##0 i() == i_0 and
	t_end(o)##0 j() == j_0 and
	t_end(o)##0 phase_algorithm() == phase_algorithm_0 and
	during_o (t, 1, t_end(o), 0, data_in_notify() == 0) and
	during_o (t, 1, t_end(o), 0, data_out_notify() == 0);
endproperty;
clock_tick_2_7_a: assert property (disable iff (reset) clock_tick_2_7_p(1)); //ASSIGN t_end offset here



property clock_tick_2_8_p(o);
 bit[31:0] data_algorithm_0_0;
 bit[31:0] data_algorithm_1_0;
 bit[31:0] data_algorithm_2_0;
 bit[31:0] data_algorithm_3_0;
 bit[31:0] data_algorithm_4_0;
 bit[31:0] data_algorithm_5_0;
 bit[31:0] data_algorithm_6_0;
 bit[31:0] data_algorithm_7_0;
 bit[31:0] i_0;
 bit[31:0] j_0;
 bit[31:0] phase_algorithm_0;
	t ##0 hold(data_algorithm_0_0, data_algorithm_0()) and
	t ##0 hold(data_algorithm_1_0, data_algorithm_1()) and
	t ##0 hold(data_algorithm_2_0, data_algorithm_2()) and
	t ##0 hold(data_algorithm_3_0, data_algorithm_3()) and
	t ##0 hold(data_algorithm_4_0, data_algorithm_4()) and
	t ##0 hold(data_algorithm_5_0, data_algorithm_5()) and
	t ##0 hold(data_algorithm_6_0, data_algorithm_6()) and
	t ##0 hold(data_algorithm_7_0, data_algorithm_7()) and
	t ##0 hold(i_0, i()) and
	t ##0 hold(j_0, j()) and
	t ##0 hold(phase_algorithm_0, phase_algorithm()) and
	t##0 clock_tick_2() and
	t##0 !((phase_algorithm() == IDLE)) and
	t##0 !((i() == 8)) and
	t##0 !((i() == 2)) and
	t##0 !((data_algorithm[j()] <= data_algorithm[(j() + 1)])) and
	t##0 (j() == 5)
implies
	t_end(o)##0 clock_tick_2() and
	t_end(o)##0 data_algorithm_0() == data_algorithm_0_0 and
	t_end(o)##0 data_algorithm_1() == data_algorithm_1_0 and
	t_end(o)##0 data_algorithm_2() == data_algorithm_2_0 and
	t_end(o)##0 data_algorithm_3() == data_algorithm_3_0 and
	t_end(o)##0 data_algorithm_4() == data_algorithm_4_0 and
	t_end(o)##0 data_algorithm_5() == data_algorithm_6_0 and
	t_end(o)##0 data_algorithm_6() == data_algorithm_5_0 and
	t_end(o)##0 data_algorithm_7() == data_algorithm_7_0 and
	t_end(o)##0 i() == i_0 and
	t_end(o)##0 j() == j_0 and
	t_end(o)##0 phase_algorithm() == phase_algorithm_0 and
	during_o (t, 1, t_end(o), 0, data_in_notify() == 0) and
	during_o (t, 1, t_end(o), 0, data_out_notify() == 0);
endproperty;
clock_tick_2_8_a: assert property (disable iff (reset) clock_tick_2_8_p(1)); //ASSIGN t_end offset here



property clock_tick_2_9_p(o);
 bit[31:0] data_algorithm_0_0;
 bit[31:0] data_algorithm_1_0;
 bit[31:0] data_algorithm_2_0;
 bit[31:0] data_algorithm_3_0;
 bit[31:0] data_algorithm_4_0;
 bit[31:0] data_algorithm_5_0;
 bit[31:0] data_algorithm_6_0;
 bit[31:0] data_algorithm_7_0;
 bit[31:0] i_0;
 bit[31:0] j_0;
 bit[31:0] phase_algorithm_0;
	t ##0 hold(data_algorithm_0_0, data_algorithm_0()) and
	t ##0 hold(data_algorithm_1_0, data_algorithm_1()) and
	t ##0 hold(data_algorithm_2_0, data_algorithm_2()) and
	t ##0 hold(data_algorithm_3_0, data_algorithm_3()) and
	t ##0 hold(data_algorithm_4_0, data_algorithm_4()) and
	t ##0 hold(data_algorithm_5_0, data_algorithm_5()) and
	t ##0 hold(data_algorithm_6_0, data_algorithm_6()) and
	t ##0 hold(data_algorithm_7_0, data_algorithm_7()) and
	t ##0 hold(i_0, i()) and
	t ##0 hold(j_0, j()) and
	t ##0 hold(phase_algorithm_0, phase_algorithm()) and
	t##0 clock_tick_2() and
	t##0 !((phase_algorithm() == IDLE)) and
	t##0 !((i() == 8)) and
	t##0 !((i() == 1)) and
	t##0 !((data_algorithm[j()] <= data_algorithm[(j() + 1)])) and
	t##0 (j() == 6)
implies
	t_end(o)##0 clock_tick_2() and
	t_end(o)##0 data_algorithm_0() == data_algorithm_0_0 and
	t_end(o)##0 data_algorithm_1() == data_algorithm_1_0 and
	t_end(o)##0 data_algorithm_2() == data_algorithm_2_0 and
	t_end(o)##0 data_algorithm_3() == data_algorithm_3_0 and
	t_end(o)##0 data_algorithm_4() == data_algorithm_4_0 and
	t_end(o)##0 data_algorithm_5() == data_algorithm_5_0 and
	t_end(o)##0 data_algorithm_6() == data_algorithm_7_0 and
	t_end(o)##0 data_algorithm_7() == data_algorithm_6_0 and
	t_end(o)##0 i() == i_0 and
	t_end(o)##0 j() == j_0 and
	t_end(o)##0 phase_algorithm() == phase_algorithm_0 and
	during_o (t, 1, t_end(o), 0, data_in_notify() == 0) and
	during_o (t, 1, t_end(o), 0, data_out_notify() == 0);
endproperty;
clock_tick_2_9_a: assert property (disable iff (reset) clock_tick_2_9_p(1)); //ASSIGN t_end offset here



property clock_tick_3_12_p(o);
 bit[31:0] data_algorithm_0_0;
 bit[31:0] data_algorithm_1_0;
 bit[31:0] data_algorithm_2_0;
 bit[31:0] data_algorithm_3_0;
 bit[31:0] data_algorithm_4_0;
 bit[31:0] data_algorithm_5_0;
 bit[31:0] data_algorithm_6_0;
 bit[31:0] data_algorithm_7_0;
 bit[31:0] i_0;
 bit[31:0] j_0;
 bit[31:0] phase_algorithm_0;
	t ##0 hold(data_algorithm_0_0, data_algorithm_0()) and
	t ##0 hold(data_algorithm_1_0, data_algorithm_1()) and
	t ##0 hold(data_algorithm_2_0, data_algorithm_2()) and
	t ##0 hold(data_algorithm_3_0, data_algorithm_3()) and
	t ##0 hold(data_algorithm_4_0, data_algorithm_4()) and
	t ##0 hold(data_algorithm_5_0, data_algorithm_5()) and
	t ##0 hold(data_algorithm_6_0, data_algorithm_6()) and
	t ##0 hold(data_algorithm_7_0, data_algorithm_7()) and
	t ##0 hold(i_0, i()) and
	t ##0 hold(j_0, j()) and
	t ##0 hold(phase_algorithm_0, phase_algorithm()) and
	t##0 clock_tick_3() and
	t##0 !((phase_algorithm() == IDLE)) and
	t##0 !((i() == 8)) and
	t##0 !((i() == 7)) and
	t##0 !((data_algorithm[j()] <= data_algorithm[(j() + 1)])) and
	t##0 (j() == 0)
implies
	t_end(o)##0 clock_tick_2() and
	t_end(o)##0 data_algorithm_0() == data_algorithm_1_0 and
	t_end(o)##0 data_algorithm_1() == data_algorithm_0_0 and
	t_end(o)##0 data_algorithm_2() == data_algorithm_2_0 and
	t_end(o)##0 data_algorithm_3() == data_algorithm_3_0 and
	t_end(o)##0 data_algorithm_4() == data_algorithm_4_0 and
	t_end(o)##0 data_algorithm_5() == data_algorithm_5_0 and
	t_end(o)##0 data_algorithm_6() == data_algorithm_6_0 and
	t_end(o)##0 data_algorithm_7() == data_algorithm_7_0 and
	t_end(o)##0 i() == i_0 and
	t_end(o)##0 j() == j_0 and
	t_end(o)##0 phase_algorithm() == phase_algorithm_0 and
	during_o (t, 1, t_end(o), 0, data_in_notify() == 0) and
	during_o (t, 1, t_end(o), 0, data_out_notify() == 0);
endproperty;
clock_tick_3_12_a: assert property (disable iff (reset) clock_tick_3_12_p(1)); //ASSIGN t_end offset here



property clock_tick_3_13_p(o);
 bit[31:0] data_algorithm_0_0;
 bit[31:0] data_algorithm_1_0;
 bit[31:0] data_algorithm_2_0;
 bit[31:0] data_algorithm_3_0;
 bit[31:0] data_algorithm_4_0;
 bit[31:0] data_algorithm_5_0;
 bit[31:0] data_algorithm_6_0;
 bit[31:0] data_algorithm_7_0;
 bit[31:0] i_0;
 bit[31:0] j_0;
 bit[31:0] phase_algorithm_0;
	t ##0 hold(data_algorithm_0_0, data_algorithm_0()) and
	t ##0 hold(data_algorithm_1_0, data_algorithm_1()) and
	t ##0 hold(data_algorithm_2_0, data_algorithm_2()) and
	t ##0 hold(data_algorithm_3_0, data_algorithm_3()) and
	t ##0 hold(data_algorithm_4_0, data_algorithm_4()) and
	t ##0 hold(data_algorithm_5_0, data_algorithm_5()) and
	t ##0 hold(data_algorithm_6_0, data_algorithm_6()) and
	t ##0 hold(data_algorithm_7_0, data_algorithm_7()) and
	t ##0 hold(i_0, i()) and
	t ##0 hold(j_0, j()) and
	t ##0 hold(phase_algorithm_0, phase_algorithm()) and
	t##0 clock_tick_3() and
	t##0 !((phase_algorithm() == IDLE)) and
	t##0 !((i() == 8)) and
	t##0 !((j() == (7 + (-1 * i())))) and
	t##0 (data_algorithm[j()] <= data_algorithm[(j() + 1)])
implies
	t_end(o)##0 clock_tick_2() and
	t_end(o)##0 data_algorithm_0() == data_algorithm_0_0 and
	t_end(o)##0 data_algorithm_1() == data_algorithm_1_0 and
	t_end(o)##0 data_algorithm_2() == data_algorithm_2_0 and
	t_end(o)##0 data_algorithm_3() == data_algorithm_3_0 and
	t_end(o)##0 data_algorithm_4() == data_algorithm_4_0 and
	t_end(o)##0 data_algorithm_5() == data_algorithm_5_0 and
	t_end(o)##0 data_algorithm_6() == data_algorithm_6_0 and
	t_end(o)##0 data_algorithm_7() == data_algorithm_7_0 and
	t_end(o)##0 i() == i_0 and
	t_end(o)##0 j() == j_0 and
	t_end(o)##0 phase_algorithm() == phase_algorithm_0 and
	during_o (t, 1, t_end(o), 0, data_in_notify() == 0) and
	during_o (t, 1, t_end(o), 0, data_out_notify() == 0);
endproperty;
clock_tick_3_13_a: assert property (disable iff (reset) clock_tick_3_13_p(1)); //ASSIGN t_end offset here



property clock_tick_3_14_p(o);
 bit[31:0] data_algorithm_0_0;
 bit[31:0] data_algorithm_1_0;
 bit[31:0] data_algorithm_2_0;
 bit[31:0] data_algorithm_3_0;
 bit[31:0] data_algorithm_4_0;
 bit[31:0] data_algorithm_5_0;
 bit[31:0] data_algorithm_6_0;
 bit[31:0] data_algorithm_7_0;
 bit[31:0] i_0;
 bit[31:0] phase_algorithm_0;
	t ##0 hold(data_algorithm_0_0, data_algorithm_0()) and
	t ##0 hold(data_algorithm_1_0, data_algorithm_1()) and
	t ##0 hold(data_algorithm_2_0, data_algorithm_2()) and
	t ##0 hold(data_algorithm_3_0, data_algorithm_3()) and
	t ##0 hold(data_algorithm_4_0, data_algorithm_4()) and
	t ##0 hold(data_algorithm_5_0, data_algorithm_5()) and
	t ##0 hold(data_algorithm_6_0, data_algorithm_6()) and
	t ##0 hold(data_algorithm_7_0, data_algorithm_7()) and
	t ##0 hold(i_0, i()) and
	t ##0 hold(phase_algorithm_0, phase_algorithm()) and
	t##0 clock_tick_3() and
	t##0 !((phase_algorithm() == IDLE)) and
	t##0 !((i() == 8)) and
	t##0 (j() == (7 + (-1 * i())))
implies
	t_end(o)##0 clock_tick_3() and
	t_end(o)##0 data_algorithm_0() == data_algorithm_0_0 and
	t_end(o)##0 data_algorithm_1() == data_algorithm_1_0 and
	t_end(o)##0 data_algorithm_2() == data_algorithm_2_0 and
	t_end(o)##0 data_algorithm_3() == data_algorithm_3_0 and
	t_end(o)##0 data_algorithm_4() == data_algorithm_4_0 and
	t_end(o)##0 data_algorithm_5() == data_algorithm_5_0 and
	t_end(o)##0 data_algorithm_6() == data_algorithm_6_0 and
	t_end(o)##0 data_algorithm_7() == data_algorithm_7_0 and
	t_end(o)##0 i() == i_0 and
	t_end(o)##0 j() == 0 and
	t_end(o)##0 phase_algorithm() == phase_algorithm_0 and
	during_o (t, 1, t_end(o), 0, data_in_notify() == 0) and
	during_o (t, 1, t_end(o), 0, data_out_notify() == 0);
endproperty;
clock_tick_3_14_a: assert property (disable iff (reset) clock_tick_3_14_p(1)); //ASSIGN t_end offset here



property data_in_1_1_p(o);
 bit[31:0] data_in_sig_0_0;
 bit[31:0] data_in_sig_1_0;
 bit[31:0] data_in_sig_2_0;
 bit[31:0] data_in_sig_3_0;
 bit[31:0] data_in_sig_4_0;
 bit[31:0] data_in_sig_5_0;
 bit[31:0] data_in_sig_6_0;
 bit[31:0] data_in_sig_7_0;
	t ##0 hold(data_in_sig_0_0, data_in_sig_0()) and
	t ##0 hold(data_in_sig_1_0, data_in_sig_1()) and
	t ##0 hold(data_in_sig_2_0, data_in_sig_2()) and
	t ##0 hold(data_in_sig_3_0, data_in_sig_3()) and
	t ##0 hold(data_in_sig_4_0, data_in_sig_4()) and
	t ##0 hold(data_in_sig_5_0, data_in_sig_5()) and
	t ##0 hold(data_in_sig_6_0, data_in_sig_6()) and
	t ##0 hold(data_in_sig_7_0, data_in_sig_7()) and
	t##0 data_in_1() and
	t##0 data_in_sync() and
	t##0 !((data_in_sig[0] <= data_in_sig[(0 + 1)]))
implies
	t_end(o)##0 clock_tick_2() and
	t_end(o)##0 data_algorithm_0() == data_in_sig_1_0 and
	t_end(o)##0 data_algorithm_1() == data_in_sig_0_0 and
	t_end(o)##0 data_algorithm_2() == data_in_sig_2_0 and
	t_end(o)##0 data_algorithm_3() == data_in_sig_3_0 and
	t_end(o)##0 data_algorithm_4() == data_in_sig_4_0 and
	t_end(o)##0 data_algorithm_5() == data_in_sig_5_0 and
	t_end(o)##0 data_algorithm_6() == data_in_sig_6_0 and
	t_end(o)##0 data_algorithm_7() == data_in_sig_7_0 and
	t_end(o)##0 i() == 0 and
	t_end(o)##0 j() == 0 and
	t_end(o)##0 phase_algorithm() == RUN and
	during_o (t, 1, t_end(o), 0, data_in_notify() == 0) and
	during_o (t, 1, t_end(o), 0, data_out_notify() == 0);
endproperty;
data_in_1_1_a: assert property (disable iff (reset) data_in_1_1_p(1)); //ASSIGN t_end offset here



property data_in_1_2_p(o);
 bit[31:0] data_in_sig_0_0;
 bit[31:0] data_in_sig_1_0;
 bit[31:0] data_in_sig_2_0;
 bit[31:0] data_in_sig_3_0;
 bit[31:0] data_in_sig_4_0;
 bit[31:0] data_in_sig_5_0;
 bit[31:0] data_in_sig_6_0;
 bit[31:0] data_in_sig_7_0;
	t ##0 hold(data_in_sig_0_0, data_in_sig_0()) and
	t ##0 hold(data_in_sig_1_0, data_in_sig_1()) and
	t ##0 hold(data_in_sig_2_0, data_in_sig_2()) and
	t ##0 hold(data_in_sig_3_0, data_in_sig_3()) and
	t ##0 hold(data_in_sig_4_0, data_in_sig_4()) and
	t ##0 hold(data_in_sig_5_0, data_in_sig_5()) and
	t ##0 hold(data_in_sig_6_0, data_in_sig_6()) and
	t ##0 hold(data_in_sig_7_0, data_in_sig_7()) and
	t##0 data_in_1() and
	t##0 data_in_sync() and
	t##0 (data_in_sig[0] <= data_in_sig[(0 + 1)])
implies
	t_end(o)##0 clock_tick_2() and
	t_end(o)##0 data_algorithm_0() == data_in_sig_0_0 and
	t_end(o)##0 data_algorithm_1() == data_in_sig_1_0 and
	t_end(o)##0 data_algorithm_2() == data_in_sig_2_0 and
	t_end(o)##0 data_algorithm_3() == data_in_sig_3_0 and
	t_end(o)##0 data_algorithm_4() == data_in_sig_4_0 and
	t_end(o)##0 data_algorithm_5() == data_in_sig_5_0 and
	t_end(o)##0 data_algorithm_6() == data_in_sig_6_0 and
	t_end(o)##0 data_algorithm_7() == data_in_sig_7_0 and
	t_end(o)##0 i() == 0 and
	t_end(o)##0 j() == 0 and
	t_end(o)##0 phase_algorithm() == RUN and
	during_o (t, 1, t_end(o), 0, data_in_notify() == 0) and
	during_o (t, 1, t_end(o), 0, data_out_notify() == 0);
endproperty;
data_in_1_2_a: assert property (disable iff (reset) data_in_1_2_p(1)); //ASSIGN t_end offset here



property state_4_15_p(o);
 bit[31:0] data_algorithm_0_0;
 bit[31:0] data_algorithm_1_0;
 bit[31:0] data_algorithm_2_0;
 bit[31:0] data_algorithm_3_0;
 bit[31:0] data_algorithm_4_0;
 bit[31:0] data_algorithm_5_0;
 bit[31:0] data_algorithm_6_0;
 bit[31:0] data_algorithm_7_0;
 bit[31:0] i_0;
 bit[31:0] j_0;
	t ##0 hold(data_algorithm_0_0, data_algorithm_0()) and
	t ##0 hold(data_algorithm_1_0, data_algorithm_1()) and
	t ##0 hold(data_algorithm_2_0, data_algorithm_2()) and
	t ##0 hold(data_algorithm_3_0, data_algorithm_3()) and
	t ##0 hold(data_algorithm_4_0, data_algorithm_4()) and
	t ##0 hold(data_algorithm_5_0, data_algorithm_5()) and
	t ##0 hold(data_algorithm_6_0, data_algorithm_6()) and
	t ##0 hold(data_algorithm_7_0, data_algorithm_7()) and
	t ##0 hold(i_0, i()) and
	t ##0 hold(j_0, j()) and
	t##0 state_4() and
	t##0 data_out_sync()
implies
	t_end(o)##0 data_in_1() and
	t_end(o)##0 data_algorithm_0() == data_algorithm_0_0 and
	t_end(o)##0 data_algorithm_1() == data_algorithm_1_0 and
	t_end(o)##0 data_algorithm_2() == data_algorithm_2_0 and
	t_end(o)##0 data_algorithm_3() == data_algorithm_3_0 and
	t_end(o)##0 data_algorithm_4() == data_algorithm_4_0 and
	t_end(o)##0 data_algorithm_5() == data_algorithm_5_0 and
	t_end(o)##0 data_algorithm_6() == data_algorithm_6_0 and
	t_end(o)##0 data_algorithm_7() == data_algorithm_7_0 and
	t_end(o)##0 i() == i_0 and
	t_end(o)##0 j() == j_0 and
	t_end(o)##0 phase_algorithm() == IDLE and
	during_o (t, 1, t_end(o), -1, data_in_notify() == 0) and
	t_end(o)##0 data_in_notify() == 1 and
	during_o (t, 1, t_end(o), 0, data_out_notify() == 0);
endproperty;
state_4_15_a: assert property (disable iff (reset) state_4_15_p(1)); //ASSIGN t_end offset here



property wait_data_in_1_p(o);
 bit[31:0] data_algorithm_0_0;
 bit[31:0] data_algorithm_1_0;
 bit[31:0] data_algorithm_2_0;
 bit[31:0] data_algorithm_3_0;
 bit[31:0] data_algorithm_4_0;
 bit[31:0] data_algorithm_5_0;
 bit[31:0] data_algorithm_6_0;
 bit[31:0] data_algorithm_7_0;
 bit[31:0] i_0;
 bit[31:0] j_0;
 bit[31:0] phase_algorithm_0;
	t ##0 hold(data_algorithm_0_0, data_algorithm_0()) and
	t ##0 hold(data_algorithm_1_0, data_algorithm_1()) and
	t ##0 hold(data_algorithm_2_0, data_algorithm_2()) and
	t ##0 hold(data_algorithm_3_0, data_algorithm_3()) and
	t ##0 hold(data_algorithm_4_0, data_algorithm_4()) and
	t ##0 hold(data_algorithm_5_0, data_algorithm_5()) and
	t ##0 hold(data_algorithm_6_0, data_algorithm_6()) and
	t ##0 hold(data_algorithm_7_0, data_algorithm_7()) and
	t ##0 hold(i_0, i()) and
	t ##0 hold(j_0, j()) and
	t ##0 hold(phase_algorithm_0, phase_algorithm()) and
	t##0 data_in_1() and
	t##0 !(data_in_sync())
implies
	t##1 data_in_1() and
	t##1 data_algorithm_0() == data_algorithm_0_0 and
	t##1 data_algorithm_1() == data_algorithm_1_0 and
	t##1 data_algorithm_2() == data_algorithm_2_0 and
	t##1 data_algorithm_3() == data_algorithm_3_0 and
	t##1 data_algorithm_4() == data_algorithm_4_0 and
	t##1 data_algorithm_5() == data_algorithm_5_0 and
	t##1 data_algorithm_6() == data_algorithm_6_0 and
	t##1 data_algorithm_7() == data_algorithm_7_0 and
	t##1 i() == i_0 and
	t##1 j() == j_0 and
	t##1 phase_algorithm() == phase_algorithm_0 and
	t##1 data_in_notify() == 1 and
	t##1 data_out_notify() == 0;
endproperty;
wait_data_in_1_a: assert property (disable iff (reset) wait_data_in_1_p(1)); //ASSIGN t_end offset here



property wait_state_4_p(o);
 bit[31:0] data_algorithm_0_0;
 bit[31:0] data_algorithm_1_0;
 bit[31:0] data_algorithm_2_0;
 bit[31:0] data_algorithm_3_0;
 bit[31:0] data_algorithm_4_0;
 bit[31:0] data_algorithm_5_0;
 bit[31:0] data_algorithm_6_0;
 bit[31:0] data_algorithm_7_0;
 bit[31:0] data_out_sig_0;
 bit[31:0] i_0;
 bit[31:0] j_0;
 bit[31:0] phase_algorithm_0;
	t ##0 hold(data_algorithm_0_0, data_algorithm_0()) and
	t ##0 hold(data_algorithm_1_0, data_algorithm_1()) and
	t ##0 hold(data_algorithm_2_0, data_algorithm_2()) and
	t ##0 hold(data_algorithm_3_0, data_algorithm_3()) and
	t ##0 hold(data_algorithm_4_0, data_algorithm_4()) and
	t ##0 hold(data_algorithm_5_0, data_algorithm_5()) and
	t ##0 hold(data_algorithm_6_0, data_algorithm_6()) and
	t ##0 hold(data_algorithm_7_0, data_algorithm_7()) and
	t ##0 hold(data_out_sig_0, data_out_sig()) and
	t ##0 hold(i_0, i()) and
	t ##0 hold(j_0, j()) and
	t ##0 hold(phase_algorithm_0, phase_algorithm()) and
	t##0 state_4() and
	t##0 !(data_out_sync())
implies
	t##1 state_4() and
	t##1 data_algorithm_0() == data_algorithm_0_0 and
	t##1 data_algorithm_1() == data_algorithm_1_0 and
	t##1 data_algorithm_2() == data_algorithm_2_0 and
	t##1 data_algorithm_3() == data_algorithm_3_0 and
	t##1 data_algorithm_4() == data_algorithm_4_0 and
	t##1 data_algorithm_5() == data_algorithm_5_0 and
	t##1 data_algorithm_6() == data_algorithm_6_0 and
	t##1 data_algorithm_7() == data_algorithm_7_0 and
	t##1 data_out_sig() == data_out_sig_0 and
	t##1 i() == i_0 and
	t##1 j() == j_0 and
	t##1 phase_algorithm() == phase_algorithm_0 and
	t##1 data_in_notify() == 0 and
	t##1 data_out_notify() == 1;
endproperty;
wait_state_4_a: assert property (disable iff (reset) wait_state_4_p(1)); //ASSIGN t_end offset here



endmodule

//DESIGNER SHOULD PAY ATTENTION FOR USING THE MODEL CORRECT NAME FOR BINDING AND TO REFER TO THE RESET SIGNAL USED IN IT
bind BubbleSort BubbleSort_verification inst (.*, .reset(rst));
