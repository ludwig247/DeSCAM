// required terminology
`define next_shift_amount 0 //IN CASE OF REQUIRED SIGNALS VALUES IN THE FUTURE, SHIFT YOUR ENTIRE TIMING BY THIS FACTOR

sequence hold(l, e);
	(l===e, l=e);
endsequence

sequence t;
	##`next_shift_amount 1'b1;
endsequence

sequence t_end(offset);
	t ##offset 1'b1;
endsequence

sequence next(timepoint, offset);
	timepoint ##offset 1'b1;
endsequence

property during(t1, t2, se);
	(t1 ##0 se[*0:$] intersect t2) or
	(t1 intersect t2 ##[1:$] 1'b1);
endproperty

property during_limited(t1, t2, off, se);
	(t1 ##0 se[*0:$] ##off 1'b1 intersect t2) or
	(next(t1, off) intersect t2 ##[1:$] 1'b1);
endproperty

property during_o(t1, o1, t2, o2, se);
	if (o2 >= 0)
		during(next(t1, o1), next(t2, (o2<0) ? 0 : o2), se)
	else
		during_limited(next(t1, o1), t2, (o2>0) ? 0 : -o2, se);
endproperty
// end of ipc_sva

import scam_model_types::*;

module requesteQ_verification(reset);

input reset;

//DESIGNER SHOULD PAY ATTENTION FOR USING THE MODEL CORRECT NAME TO REFER TO THE CLK SIGNAL USED IN IT
default clocking default_clk @(posedge requesteQ.clk); endclocking

// SYNC AND NOTIFY SIGNALS (1-cycle macros) //
function updateQ_i_sync;
	updateQ_i_sync = requesteQ.updateQ_i_sync;
endfunction

// DP SIGNALS //
function bool buffer1_sig_abort;
	buffer1_sig_abort = requesteQ.buffer1.abort;
endfunction
function int buffer1_sig_addr;
	buffer1_sig_addr = requesteQ.buffer1.addr;
endfunction
function int buffer1_sig_data;
	buffer1_sig_data = requesteQ.buffer1.data;
endfunction
function opc_t buffer1_sig_opc;
	buffer1_sig_opc = requesteQ.buffer1.opc;
endfunction
function bool buffer2_sig_abort;
	buffer2_sig_abort = requesteQ.buffer2.abort;
endfunction
function int buffer2_sig_addr;
	buffer2_sig_addr = requesteQ.buffer2.addr;
endfunction
function int buffer2_sig_data;
	buffer2_sig_data = requesteQ.buffer2.data;
endfunction
function opc_t buffer2_sig_opc;
	buffer2_sig_opc = requesteQ.buffer2.opc;
endfunction
function bool buffer3_sig_abort;
	buffer3_sig_abort = requesteQ.buffer3.abort;
endfunction
function int buffer3_sig_addr;
	buffer3_sig_addr = requesteQ.buffer3.addr;
endfunction
function int buffer3_sig_data;
	buffer3_sig_data = requesteQ.buffer3.data;
endfunction
function opc_t buffer3_sig_opc;
	buffer3_sig_opc = requesteQ.buffer3.opc;
endfunction
function bool peripheral_request_i_sig_abort;
	peripheral_request_i_sig_abort = requesteQ.peripheral_request_i.abort;
endfunction
function int peripheral_request_i_sig_addr;
	peripheral_request_i_sig_addr = requesteQ.peripheral_request_i.addr;
endfunction
function int peripheral_request_i_sig_data;
	peripheral_request_i_sig_data = requesteQ.peripheral_request_i.data;
endfunction
function opc_t peripheral_request_i_sig_opc;
	peripheral_request_i_sig_opc = requesteQ.peripheral_request_i.opc;
endfunction
function bool req_o_sig;
	req_o_sig = requesteQ.req_o;
endfunction
function req_status_t status1_sig;
	status1_sig = requesteQ.status1;
endfunction
function req_status_t status2_sig;
	status2_sig = requesteQ.status2;
endfunction
function req_status_t status3_sig;
	status3_sig = requesteQ.status3;
endfunction
function update_t updateQ_i_sig;
	updateQ_i_sig = requesteQ.updateQ_i;
endfunction

// VISIBLE REGISTERS //
function bool buffer2_var_abort;
	buffer2_var_abort = requesteQ.buffer2_var_signal.abort;
endfunction
function int buffer2_var_addr;
	buffer2_var_addr = requesteQ.buffer2_var_signal.addr;
endfunction
function int buffer2_var_data;
	buffer2_var_data = requesteQ.buffer2_var_signal.data;
endfunction
function opc_t buffer2_var_opc;
	buffer2_var_opc = requesteQ.buffer2_var_signal.opc;
endfunction
function bool buffer3_var_abort;
	buffer3_var_abort = requesteQ.buffer3_var_signal.abort;
endfunction
function int buffer3_var_addr;
	buffer3_var_addr = requesteQ.buffer3_var_signal.addr;
endfunction
function int buffer3_var_data;
	buffer3_var_data = requesteQ.buffer3_var_signal.data;
endfunction
function opc_t buffer3_var_opc;
	buffer3_var_opc = requesteQ.buffer3_var_signal.opc;
endfunction
function req_status_t status1_var;
	status1_var = requesteQ.status1_var_signal;
endfunction
function req_status_t status2_var;
	status2_var = requesteQ.status2_var_signal;
endfunction
function req_status_t status3_var;
	status3_var = requesteQ.status3_var_signal;
endfunction
function bool tmp_buffer_abort;
	tmp_buffer_abort = requesteQ.tmp_buffer_signal.abort;
endfunction
function int tmp_buffer_addr;
	tmp_buffer_addr = requesteQ.tmp_buffer_signal.addr;
endfunction
function int tmp_buffer_data;
	tmp_buffer_data = requesteQ.tmp_buffer_signal.data;
endfunction
function opc_t tmp_buffer_opc;
	tmp_buffer_opc = requesteQ.tmp_buffer_signal.opc;
endfunction

// STATES //
function EMPTY_0;
	EMPTY_0 = (requesteQ.section == empty);
endfunction
function NON_EMPTY_2;
	NON_EMPTY_2 = (requesteQ.section == non_empty);
endfunction


////////////////////////////////////
//////////// Operations ////////////
////////////////////////////////////
sequence reset_sequence;
	(requesteQ.rst == 1'b1);//DISGNER REFER TO MODEL RESET SIGNAL HERE
endsequence
property reset_p;
	reset_sequence |=>
	t ##0 EMPTY_0() and
	t ##0 buffer1_sig_abort() == 0 and
	t ##0 buffer1_sig_addr() == 0 and
	t ##0 buffer1_sig_data() == 0 and
	t ##0 buffer1_sig_opc() == btr2_opc and
	t ##0 buffer2_sig_abort() == 0 and
	t ##0 buffer2_sig_addr() == 0 and
	t ##0 buffer2_sig_data() == 0 and
	t ##0 buffer2_sig_opc() == btr2_opc and
	t ##0 buffer2_var_abort() == 0 and
	t ##0 buffer2_var_addr() == 0 and
	t ##0 buffer2_var_data() == 0 and
	t ##0 buffer2_var_opc() == btr2_opc and
	t ##0 buffer3_sig_abort() == 0 and
	t ##0 buffer3_sig_addr() == 0 and
	t ##0 buffer3_sig_data() == 0 and
	t ##0 buffer3_sig_opc() == btr2_opc and
	t ##0 buffer3_var_abort() == 0 and
	t ##0 buffer3_var_addr() == 0 and
	t ##0 buffer3_var_data() == 0 and
	t ##0 buffer3_var_opc() == btr2_opc and
	t ##0 req_o_sig() == 0 and
	t ##0 status1_sig() == empty_status and
	t ##0 status1_var() == empty_status and
	t ##0 status2_sig() == empty_status and
	t ##0 status2_var() == empty_status and
	t ##0 status3_sig() == empty_status and
	t ##0 status3_var() == empty_status and
	t ##0 tmp_buffer_abort() == 0 and
	t ##0 tmp_buffer_addr() == 0 and
	t ##0 tmp_buffer_data() == 0 and
	t ##0 tmp_buffer_opc() == btr2_opc;
endproperty
reset_a: assert property (reset_p);

property EMPTY_0_read_0_p(o);
bool buffer2_var_abort_0;
int buffer2_var_addr_0;
int buffer2_var_data_0;
opc_t buffer2_var_opc_0;
bool tmp_buffer_abort_0;
int tmp_buffer_addr_0;
int tmp_buffer_data_0;
opc_t tmp_buffer_opc_0;
bool buffer3_var_abort_0;
int buffer3_var_addr_0;
int buffer3_var_data_0;
opc_t buffer3_var_opc_0;
req_status_t status1_var_0;
req_status_t status2_var_0;
req_status_t status3_var_0;
bool buffer3_sig_abort_0;
int buffer3_sig_addr_0;
int buffer3_sig_data_0;
opc_t buffer3_sig_opc_0;
req_status_t status2_sig_0;
req_status_t status3_sig_0;
bool buffer1_sig_abort_0;
int buffer1_sig_addr_0;
int buffer1_sig_data_0;
opc_t buffer1_sig_opc_0;
bool buffer2_sig_abort_0;
int buffer2_sig_addr_0;
int buffer2_sig_data_0;
opc_t buffer2_sig_opc_0;
// hold
	t ##0 hold(buffer2_var_abort_0, buffer2_var_abort()) and
	t ##0 hold(buffer2_var_addr_0, buffer2_var_addr()) and
	t ##0 hold(buffer2_var_data_0, buffer2_var_data()) and
	t ##0 hold(buffer2_var_opc_0, buffer2_var_opc()) and
	t ##0 hold(tmp_buffer_abort_0, tmp_buffer_abort()) and
	t ##0 hold(tmp_buffer_addr_0, tmp_buffer_addr()) and
	t ##0 hold(tmp_buffer_data_0, tmp_buffer_data()) and
	t ##0 hold(tmp_buffer_opc_0, tmp_buffer_opc()) and
	t ##0 hold(buffer3_var_abort_0, buffer3_var_abort()) and
	t ##0 hold(buffer3_var_addr_0, buffer3_var_addr()) and
	t ##0 hold(buffer3_var_data_0, buffer3_var_data()) and
	t ##0 hold(buffer3_var_opc_0, buffer3_var_opc()) and
	t ##0 hold(status1_var_0, status1_var()) and
	t ##0 hold(status2_var_0, status2_var()) and
	t ##0 hold(status3_var_0, status3_var()) and
	t ##0 hold(buffer3_sig_abort_0, buffer3_sig_abort()) and
	t ##0 hold(buffer3_sig_addr_0, buffer3_sig_addr()) and
	t ##0 hold(buffer3_sig_data_0, buffer3_sig_data()) and
	t ##0 hold(buffer3_sig_opc_0, buffer3_sig_opc()) and
	t ##0 hold(status2_sig_0, status2_sig()) and
	t ##0 hold(status3_sig_0, status3_sig()) and
	t ##0 hold(buffer1_sig_abort_0, buffer1_sig_abort()) and
	t ##0 hold(buffer1_sig_addr_0, buffer1_sig_addr()) and
	t ##0 hold(buffer1_sig_data_0, buffer1_sig_data()) and
	t ##0 hold(buffer1_sig_opc_0, buffer1_sig_opc()) and
	t ##0 hold(buffer2_sig_abort_0, buffer2_sig_abort()) and
	t ##0 hold(buffer2_sig_addr_0, buffer2_sig_addr()) and
	t ##0 hold(buffer2_sig_data_0, buffer2_sig_data()) and
	t ##0 hold(buffer2_sig_opc_0, buffer2_sig_opc()) and
// Conceptual State
	t ##0 EMPTY_0() and
// trigger
	t ##0 updateQ_i_sync()
implies
	t_end(o) ##0 NON_EMPTY_2() and
	t_end(o) ##0 buffer1_sig_abort() == buffer1_sig_abort_0 and
	t_end(o) ##0 buffer1_sig_addr() == buffer1_sig_addr_0 and
	t_end(o) ##0 buffer1_sig_data() == buffer1_sig_data_0 and
	t_end(o) ##0 buffer1_sig_opc() == buffer1_sig_opc_0 and
	t_end(o) ##0 buffer2_sig_abort() == buffer2_sig_abort_0 and
	t_end(o) ##0 buffer2_sig_addr() == buffer2_sig_addr_0 and
	t_end(o) ##0 buffer2_sig_data() == buffer2_sig_data_0 and
	t_end(o) ##0 buffer2_sig_opc() == buffer2_sig_opc_0 and
	t_end(o) ##0 buffer2_var_abort() == buffer2_var_abort_0 and
	t_end(o) ##0 buffer2_var_addr() == buffer2_var_addr_0 and
	t_end(o) ##0 buffer2_var_data() == buffer2_var_data_0 and
	t_end(o) ##0 buffer2_var_opc() == buffer2_var_opc_0 and
	t_end(o) ##0 buffer3_sig_abort() == buffer3_sig_abort_0 and
	t_end(o) ##0 buffer3_sig_addr() == buffer3_sig_addr_0 and
	t_end(o) ##0 buffer3_sig_data() == buffer3_sig_data_0 and
	t_end(o) ##0 buffer3_sig_opc() == buffer3_sig_opc_0 and
	t_end(o) ##0 buffer3_var_abort() == buffer3_var_abort_0 and
	t_end(o) ##0 buffer3_var_addr() == buffer3_var_addr_0 and
	t_end(o) ##0 buffer3_var_data() == buffer3_var_data_0 and
	t_end(o) ##0 buffer3_var_opc() == buffer3_var_opc_0 and
	t_end(o) ##0 req_o_sig() == 1 and
	t_end(o) ##0 status1_sig() == req_status and
	t_end(o) ##0 status1_var() == status1_var_0 and
	t_end(o) ##0 status2_sig() == status2_sig_0 and
	t_end(o) ##0 status2_var() == status2_var_0 and
	t_end(o) ##0 status3_sig() == status3_sig_0 and
	t_end(o) ##0 status3_var() == status3_var_0 and
	t_end(o) ##0 tmp_buffer_abort() == tmp_buffer_abort_0 and
	t_end(o) ##0 tmp_buffer_addr() == tmp_buffer_addr_0 and
	t_end(o) ##0 tmp_buffer_data() == tmp_buffer_data_0 and
	t_end(o) ##0 tmp_buffer_opc() == tmp_buffer_opc_0;
endproperty;
EMPTY_0_read_0_a: assert property (disable iff (reset) EMPTY_0_read_0_p(1));// ASSIGN t_end offset here

property EMPTY_0_read_1_p(o);
bool buffer2_var_abort_0;
int buffer2_var_addr_0;
int buffer2_var_data_0;
opc_t buffer2_var_opc_0;
bool tmp_buffer_abort_0;
int tmp_buffer_addr_0;
int tmp_buffer_data_0;
opc_t tmp_buffer_opc_0;
bool buffer3_var_abort_0;
int buffer3_var_addr_0;
int buffer3_var_data_0;
opc_t buffer3_var_opc_0;
req_status_t status1_var_0;
req_status_t status2_var_0;
req_status_t status3_var_0;
bool buffer3_sig_abort_0;
int buffer3_sig_addr_0;
int buffer3_sig_data_0;
opc_t buffer3_sig_opc_0;
req_status_t status2_sig_0;
req_status_t status3_sig_0;
bool buffer1_sig_abort_0;
int buffer1_sig_addr_0;
int buffer1_sig_data_0;
opc_t buffer1_sig_opc_0;
bool buffer2_sig_abort_0;
int buffer2_sig_addr_0;
int buffer2_sig_data_0;
opc_t buffer2_sig_opc_0;
// hold
	t ##0 hold(buffer2_var_abort_0, buffer2_var_abort()) and
	t ##0 hold(buffer2_var_addr_0, buffer2_var_addr()) and
	t ##0 hold(buffer2_var_data_0, buffer2_var_data()) and
	t ##0 hold(buffer2_var_opc_0, buffer2_var_opc()) and
	t ##0 hold(tmp_buffer_abort_0, tmp_buffer_abort()) and
	t ##0 hold(tmp_buffer_addr_0, tmp_buffer_addr()) and
	t ##0 hold(tmp_buffer_data_0, tmp_buffer_data()) and
	t ##0 hold(tmp_buffer_opc_0, tmp_buffer_opc()) and
	t ##0 hold(buffer3_var_abort_0, buffer3_var_abort()) and
	t ##0 hold(buffer3_var_addr_0, buffer3_var_addr()) and
	t ##0 hold(buffer3_var_data_0, buffer3_var_data()) and
	t ##0 hold(buffer3_var_opc_0, buffer3_var_opc()) and
	t ##0 hold(status1_var_0, status1_var()) and
	t ##0 hold(status2_var_0, status2_var()) and
	t ##0 hold(status3_var_0, status3_var()) and
	t ##0 hold(buffer3_sig_abort_0, buffer3_sig_abort()) and
	t ##0 hold(buffer3_sig_addr_0, buffer3_sig_addr()) and
	t ##0 hold(buffer3_sig_data_0, buffer3_sig_data()) and
	t ##0 hold(buffer3_sig_opc_0, buffer3_sig_opc()) and
	t ##0 hold(status2_sig_0, status2_sig()) and
	t ##0 hold(status3_sig_0, status3_sig()) and
	t ##0 hold(buffer1_sig_abort_0, buffer1_sig_abort()) and
	t ##0 hold(buffer1_sig_addr_0, buffer1_sig_addr()) and
	t ##0 hold(buffer1_sig_data_0, buffer1_sig_data()) and
	t ##0 hold(buffer1_sig_opc_0, buffer1_sig_opc()) and
	t ##0 hold(buffer2_sig_abort_0, buffer2_sig_abort()) and
	t ##0 hold(buffer2_sig_addr_0, buffer2_sig_addr()) and
	t ##0 hold(buffer2_sig_data_0, buffer2_sig_data()) and
	t ##0 hold(buffer2_sig_opc_0, buffer2_sig_opc()) and
// Conceptual State
	t ##0 EMPTY_0() and
// trigger
	t ##0 !(updateQ_i_sync())
implies
	t_end(o) ##0 NON_EMPTY_2() and
	t_end(o) ##0 buffer1_sig_abort() == buffer1_sig_abort_0 and
	t_end(o) ##0 buffer1_sig_addr() == buffer1_sig_addr_0 and
	t_end(o) ##0 buffer1_sig_data() == buffer1_sig_data_0 and
	t_end(o) ##0 buffer1_sig_opc() == buffer1_sig_opc_0 and
	t_end(o) ##0 buffer2_sig_abort() == buffer2_sig_abort_0 and
	t_end(o) ##0 buffer2_sig_addr() == buffer2_sig_addr_0 and
	t_end(o) ##0 buffer2_sig_data() == buffer2_sig_data_0 and
	t_end(o) ##0 buffer2_sig_opc() == buffer2_sig_opc_0 and
	t_end(o) ##0 buffer2_var_abort() == buffer2_var_abort_0 and
	t_end(o) ##0 buffer2_var_addr() == buffer2_var_addr_0 and
	t_end(o) ##0 buffer2_var_data() == buffer2_var_data_0 and
	t_end(o) ##0 buffer2_var_opc() == buffer2_var_opc_0 and
	t_end(o) ##0 buffer3_sig_abort() == buffer3_sig_abort_0 and
	t_end(o) ##0 buffer3_sig_addr() == buffer3_sig_addr_0 and
	t_end(o) ##0 buffer3_sig_data() == buffer3_sig_data_0 and
	t_end(o) ##0 buffer3_sig_opc() == buffer3_sig_opc_0 and
	t_end(o) ##0 buffer3_var_abort() == buffer3_var_abort_0 and
	t_end(o) ##0 buffer3_var_addr() == buffer3_var_addr_0 and
	t_end(o) ##0 buffer3_var_data() == buffer3_var_data_0 and
	t_end(o) ##0 buffer3_var_opc() == buffer3_var_opc_0 and
	t_end(o) ##0 req_o_sig() == 1 and
	t_end(o) ##0 status1_sig() == req_status and
	t_end(o) ##0 status1_var() == status1_var_0 and
	t_end(o) ##0 status2_sig() == status2_sig_0 and
	t_end(o) ##0 status2_var() == status2_var_0 and
	t_end(o) ##0 status3_sig() == status3_sig_0 and
	t_end(o) ##0 status3_var() == status3_var_0 and
	t_end(o) ##0 tmp_buffer_abort() == tmp_buffer_abort_0 and
	t_end(o) ##0 tmp_buffer_addr() == tmp_buffer_addr_0 and
	t_end(o) ##0 tmp_buffer_data() == tmp_buffer_data_0 and
	t_end(o) ##0 tmp_buffer_opc() == tmp_buffer_opc_0;
endproperty;
EMPTY_0_read_1_a: assert property (disable iff (reset) EMPTY_0_read_1_p(1));// ASSIGN t_end offset here

property NON_EMPTY_2_read_2_p(o);
bool buffer2_var_abort_0;
int buffer2_var_addr_0;
int buffer2_var_data_0;
opc_t buffer2_var_opc_0;
bool tmp_buffer_abort_0;
int tmp_buffer_addr_0;
int tmp_buffer_data_0;
opc_t tmp_buffer_opc_0;
bool buffer3_var_abort_0;
int buffer3_var_addr_0;
int buffer3_var_data_0;
opc_t buffer3_var_opc_0;
req_status_t status2_var_0;
req_status_t status3_var_0;
bool buffer3_sig_abort_0;
int buffer3_sig_addr_0;
int buffer3_sig_data_0;
opc_t buffer3_sig_opc_0;
bool req_o_sig_0;
req_status_t status1_sig_0;
req_status_t status2_sig_0;
req_status_t status3_sig_0;
bool buffer1_sig_abort_0;
int buffer1_sig_addr_0;
int buffer1_sig_data_0;
opc_t buffer1_sig_opc_0;
bool buffer2_sig_abort_0;
int buffer2_sig_addr_0;
int buffer2_sig_data_0;
opc_t buffer2_sig_opc_0;
// hold
	t ##0 hold(buffer2_var_abort_0, buffer2_var_abort()) and
	t ##0 hold(buffer2_var_addr_0, buffer2_var_addr()) and
	t ##0 hold(buffer2_var_data_0, buffer2_var_data()) and
	t ##0 hold(buffer2_var_opc_0, buffer2_var_opc()) and
	t ##0 hold(tmp_buffer_abort_0, tmp_buffer_abort()) and
	t ##0 hold(tmp_buffer_addr_0, tmp_buffer_addr()) and
	t ##0 hold(tmp_buffer_data_0, tmp_buffer_data()) and
	t ##0 hold(tmp_buffer_opc_0, tmp_buffer_opc()) and
	t ##0 hold(buffer3_var_abort_0, buffer3_var_abort()) and
	t ##0 hold(buffer3_var_addr_0, buffer3_var_addr()) and
	t ##0 hold(buffer3_var_data_0, buffer3_var_data()) and
	t ##0 hold(buffer3_var_opc_0, buffer3_var_opc()) and
	t ##0 hold(status2_var_0, status2_var()) and
	t ##0 hold(status3_var_0, status3_var()) and
	t ##0 hold(buffer3_sig_abort_0, buffer3_sig_abort()) and
	t ##0 hold(buffer3_sig_addr_0, buffer3_sig_addr()) and
	t ##0 hold(buffer3_sig_data_0, buffer3_sig_data()) and
	t ##0 hold(buffer3_sig_opc_0, buffer3_sig_opc()) and
	t ##0 hold(req_o_sig_0, req_o_sig()) and
	t ##0 hold(status1_sig_0, status1_sig()) and
	t ##0 hold(status2_sig_0, status2_sig()) and
	t ##0 hold(status3_sig_0, status3_sig()) and
	t ##0 hold(buffer1_sig_abort_0, buffer1_sig_abort()) and
	t ##0 hold(buffer1_sig_addr_0, buffer1_sig_addr()) and
	t ##0 hold(buffer1_sig_data_0, buffer1_sig_data()) and
	t ##0 hold(buffer1_sig_opc_0, buffer1_sig_opc()) and
	t ##0 hold(buffer2_sig_abort_0, buffer2_sig_abort()) and
	t ##0 hold(buffer2_sig_addr_0, buffer2_sig_addr()) and
	t ##0 hold(buffer2_sig_data_0, buffer2_sig_data()) and
	t ##0 hold(buffer2_sig_opc_0, buffer2_sig_opc()) and
// Conceptual State
	t ##0 NON_EMPTY_2() and
// trigger
	t ##0 !((status3_var() == empty_status)) and
	t ##0 (status1_var() == empty_status) and
	t ##0 !(updateQ_i_sync())
implies
	t_end(o) ##0 NON_EMPTY_2() and
	t_end(o) ##0 buffer1_sig_abort() == buffer1_sig_abort_0 and
	t_end(o) ##0 buffer1_sig_addr() == buffer1_sig_addr_0 and
	t_end(o) ##0 buffer1_sig_data() == buffer1_sig_data_0 and
	t_end(o) ##0 buffer1_sig_opc() == buffer1_sig_opc_0 and
	t_end(o) ##0 buffer2_sig_abort() == buffer2_sig_abort_0 and
	t_end(o) ##0 buffer2_sig_addr() == buffer2_sig_addr_0 and
	t_end(o) ##0 buffer2_sig_data() == buffer2_sig_data_0 and
	t_end(o) ##0 buffer2_sig_opc() == buffer2_sig_opc_0 and
	t_end(o) ##0 buffer2_var_abort() == buffer2_var_abort_0 and
	t_end(o) ##0 buffer2_var_addr() == buffer2_var_addr_0 and
	t_end(o) ##0 buffer2_var_data() == buffer2_var_data_0 and
	t_end(o) ##0 buffer2_var_opc() == buffer2_var_opc_0 and
	t_end(o) ##0 buffer3_sig_abort() == buffer3_sig_abort_0 and
	t_end(o) ##0 buffer3_sig_addr() == buffer3_sig_addr_0 and
	t_end(o) ##0 buffer3_sig_data() == buffer3_sig_data_0 and
	t_end(o) ##0 buffer3_sig_opc() == buffer3_sig_opc_0 and
	t_end(o) ##0 buffer3_var_abort() == buffer3_var_abort_0 and
	t_end(o) ##0 buffer3_var_addr() == buffer3_var_addr_0 and
	t_end(o) ##0 buffer3_var_data() == buffer3_var_data_0 and
	t_end(o) ##0 buffer3_var_opc() == buffer3_var_opc_0 and
	t_end(o) ##0 req_o_sig() == req_o_sig_0 and
	t_end(o) ##0 status1_sig() == status1_sig_0 and
	t_end(o) ##0 status1_var() == req_status and
	t_end(o) ##0 status2_sig() == status2_sig_0 and
	t_end(o) ##0 status2_var() == status2_var_0 and
	t_end(o) ##0 status3_sig() == status3_sig_0 and
	t_end(o) ##0 status3_var() == status3_var_0 and
	t_end(o) ##0 tmp_buffer_abort() == tmp_buffer_abort_0 and
	t_end(o) ##0 tmp_buffer_addr() == tmp_buffer_addr_0 and
	t_end(o) ##0 tmp_buffer_data() == tmp_buffer_data_0 and
	t_end(o) ##0 tmp_buffer_opc() == tmp_buffer_opc_0;
endproperty;
NON_EMPTY_2_read_2_a: assert property (disable iff (reset) NON_EMPTY_2_read_2_p(1));// ASSIGN t_end offset here

property NON_EMPTY_2_read_3_p(o);
bool tmp_buffer_abort_0;
int tmp_buffer_addr_0;
int tmp_buffer_data_0;
opc_t tmp_buffer_opc_0;
bool buffer3_var_abort_0;
int buffer3_var_addr_0;
int buffer3_var_data_0;
opc_t buffer3_var_opc_0;
req_status_t status1_var_0;
req_status_t status3_var_0;
bool buffer3_sig_abort_0;
int buffer3_sig_addr_0;
int buffer3_sig_data_0;
opc_t buffer3_sig_opc_0;
bool req_o_sig_0;
req_status_t status1_sig_0;
req_status_t status2_sig_0;
req_status_t status3_sig_0;
bool buffer1_sig_abort_0;
int buffer1_sig_addr_0;
int buffer1_sig_data_0;
opc_t buffer1_sig_opc_0;
bool buffer2_sig_abort_0;
int buffer2_sig_addr_0;
int buffer2_sig_data_0;
opc_t buffer2_sig_opc_0;
// hold
	t ##0 hold(tmp_buffer_abort_0, tmp_buffer_abort()) and
	t ##0 hold(tmp_buffer_addr_0, tmp_buffer_addr()) and
	t ##0 hold(tmp_buffer_data_0, tmp_buffer_data()) and
	t ##0 hold(tmp_buffer_opc_0, tmp_buffer_opc()) and
	t ##0 hold(buffer3_var_abort_0, buffer3_var_abort()) and
	t ##0 hold(buffer3_var_addr_0, buffer3_var_addr()) and
	t ##0 hold(buffer3_var_data_0, buffer3_var_data()) and
	t ##0 hold(buffer3_var_opc_0, buffer3_var_opc()) and
	t ##0 hold(status1_var_0, status1_var()) and
	t ##0 hold(status3_var_0, status3_var()) and
	t ##0 hold(buffer3_sig_abort_0, buffer3_sig_abort()) and
	t ##0 hold(buffer3_sig_addr_0, buffer3_sig_addr()) and
	t ##0 hold(buffer3_sig_data_0, buffer3_sig_data()) and
	t ##0 hold(buffer3_sig_opc_0, buffer3_sig_opc()) and
	t ##0 hold(req_o_sig_0, req_o_sig()) and
	t ##0 hold(status1_sig_0, status1_sig()) and
	t ##0 hold(status2_sig_0, status2_sig()) and
	t ##0 hold(status3_sig_0, status3_sig()) and
	t ##0 hold(buffer1_sig_abort_0, buffer1_sig_abort()) and
	t ##0 hold(buffer1_sig_addr_0, buffer1_sig_addr()) and
	t ##0 hold(buffer1_sig_data_0, buffer1_sig_data()) and
	t ##0 hold(buffer1_sig_opc_0, buffer1_sig_opc()) and
	t ##0 hold(buffer2_sig_abort_0, buffer2_sig_abort()) and
	t ##0 hold(buffer2_sig_addr_0, buffer2_sig_addr()) and
	t ##0 hold(buffer2_sig_data_0, buffer2_sig_data()) and
	t ##0 hold(buffer2_sig_opc_0, buffer2_sig_opc()) and
// Conceptual State
	t ##0 NON_EMPTY_2() and
// trigger
	t ##0 !((status3_var() == empty_status)) and
	t ##0 !((status1_var() == empty_status)) and
	t ##0 (status2_var() == empty_status) and
	t ##0 !(updateQ_i_sync())
implies
	t_end(o) ##0 NON_EMPTY_2() and
	t_end(o) ##0 buffer1_sig_abort() == buffer1_sig_abort_0 and
	t_end(o) ##0 buffer1_sig_addr() == buffer1_sig_addr_0 and
	t_end(o) ##0 buffer1_sig_data() == buffer1_sig_data_0 and
	t_end(o) ##0 buffer1_sig_opc() == buffer1_sig_opc_0 and
	t_end(o) ##0 buffer2_sig_abort() == buffer2_sig_abort_0 and
	t_end(o) ##0 buffer2_sig_addr() == buffer2_sig_addr_0 and
	t_end(o) ##0 buffer2_sig_data() == buffer2_sig_data_0 and
	t_end(o) ##0 buffer2_sig_opc() == buffer2_sig_opc_0 and
	t_end(o) ##0 buffer2_var_abort() == tmp_buffer_abort_0 and
	t_end(o) ##0 buffer2_var_addr() == tmp_buffer_addr_0 and
	t_end(o) ##0 buffer2_var_data() == tmp_buffer_data_0 and
	t_end(o) ##0 buffer2_var_opc() == tmp_buffer_opc_0 and
	t_end(o) ##0 buffer3_sig_abort() == buffer3_sig_abort_0 and
	t_end(o) ##0 buffer3_sig_addr() == buffer3_sig_addr_0 and
	t_end(o) ##0 buffer3_sig_data() == buffer3_sig_data_0 and
	t_end(o) ##0 buffer3_sig_opc() == buffer3_sig_opc_0 and
	t_end(o) ##0 buffer3_var_abort() == buffer3_var_abort_0 and
	t_end(o) ##0 buffer3_var_addr() == buffer3_var_addr_0 and
	t_end(o) ##0 buffer3_var_data() == buffer3_var_data_0 and
	t_end(o) ##0 buffer3_var_opc() == buffer3_var_opc_0 and
	t_end(o) ##0 req_o_sig() == req_o_sig_0 and
	t_end(o) ##0 status1_sig() == status1_sig_0 and
	t_end(o) ##0 status1_var() == status1_var_0 and
	t_end(o) ##0 status2_sig() == status2_sig_0 and
	t_end(o) ##0 status2_var() == req_status and
	t_end(o) ##0 status3_sig() == status3_sig_0 and
	t_end(o) ##0 status3_var() == status3_var_0 and
	t_end(o) ##0 tmp_buffer_abort() == tmp_buffer_abort_0 and
	t_end(o) ##0 tmp_buffer_addr() == tmp_buffer_addr_0 and
	t_end(o) ##0 tmp_buffer_data() == tmp_buffer_data_0 and
	t_end(o) ##0 tmp_buffer_opc() == tmp_buffer_opc_0;
endproperty;
NON_EMPTY_2_read_3_a: assert property (disable iff (reset) NON_EMPTY_2_read_3_p(1));// ASSIGN t_end offset here

property NON_EMPTY_2_read_4_p(o);
bool buffer2_var_abort_0;
int buffer2_var_addr_0;
int buffer2_var_data_0;
opc_t buffer2_var_opc_0;
bool tmp_buffer_abort_0;
int tmp_buffer_addr_0;
int tmp_buffer_data_0;
opc_t tmp_buffer_opc_0;
req_status_t status1_var_0;
req_status_t status2_var_0;
bool buffer3_sig_abort_0;
int buffer3_sig_addr_0;
int buffer3_sig_data_0;
opc_t buffer3_sig_opc_0;
bool req_o_sig_0;
req_status_t status1_sig_0;
req_status_t status2_sig_0;
req_status_t status3_sig_0;
bool buffer1_sig_abort_0;
int buffer1_sig_addr_0;
int buffer1_sig_data_0;
opc_t buffer1_sig_opc_0;
bool buffer2_sig_abort_0;
int buffer2_sig_addr_0;
int buffer2_sig_data_0;
opc_t buffer2_sig_opc_0;
// hold
	t ##0 hold(buffer2_var_abort_0, buffer2_var_abort()) and
	t ##0 hold(buffer2_var_addr_0, buffer2_var_addr()) and
	t ##0 hold(buffer2_var_data_0, buffer2_var_data()) and
	t ##0 hold(buffer2_var_opc_0, buffer2_var_opc()) and
	t ##0 hold(tmp_buffer_abort_0, tmp_buffer_abort()) and
	t ##0 hold(tmp_buffer_addr_0, tmp_buffer_addr()) and
	t ##0 hold(tmp_buffer_data_0, tmp_buffer_data()) and
	t ##0 hold(tmp_buffer_opc_0, tmp_buffer_opc()) and
	t ##0 hold(status1_var_0, status1_var()) and
	t ##0 hold(status2_var_0, status2_var()) and
	t ##0 hold(buffer3_sig_abort_0, buffer3_sig_abort()) and
	t ##0 hold(buffer3_sig_addr_0, buffer3_sig_addr()) and
	t ##0 hold(buffer3_sig_data_0, buffer3_sig_data()) and
	t ##0 hold(buffer3_sig_opc_0, buffer3_sig_opc()) and
	t ##0 hold(req_o_sig_0, req_o_sig()) and
	t ##0 hold(status1_sig_0, status1_sig()) and
	t ##0 hold(status2_sig_0, status2_sig()) and
	t ##0 hold(status3_sig_0, status3_sig()) and
	t ##0 hold(buffer1_sig_abort_0, buffer1_sig_abort()) and
	t ##0 hold(buffer1_sig_addr_0, buffer1_sig_addr()) and
	t ##0 hold(buffer1_sig_data_0, buffer1_sig_data()) and
	t ##0 hold(buffer1_sig_opc_0, buffer1_sig_opc()) and
	t ##0 hold(buffer2_sig_abort_0, buffer2_sig_abort()) and
	t ##0 hold(buffer2_sig_addr_0, buffer2_sig_addr()) and
	t ##0 hold(buffer2_sig_data_0, buffer2_sig_data()) and
	t ##0 hold(buffer2_sig_opc_0, buffer2_sig_opc()) and
// Conceptual State
	t ##0 NON_EMPTY_2() and
// trigger
	t ##0 !((status3_var() == empty_status)) and
	t ##0 !((status1_var() == empty_status)) and
	t ##0 !((status2_var() == empty_status)) and
	t ##0 !(updateQ_i_sync())
implies
	t_end(o) ##0 NON_EMPTY_2() and
	t_end(o) ##0 buffer1_sig_abort() == buffer1_sig_abort_0 and
	t_end(o) ##0 buffer1_sig_addr() == buffer1_sig_addr_0 and
	t_end(o) ##0 buffer1_sig_data() == buffer1_sig_data_0 and
	t_end(o) ##0 buffer1_sig_opc() == buffer1_sig_opc_0 and
	t_end(o) ##0 buffer2_sig_abort() == buffer2_sig_abort_0 and
	t_end(o) ##0 buffer2_sig_addr() == buffer2_sig_addr_0 and
	t_end(o) ##0 buffer2_sig_data() == buffer2_sig_data_0 and
	t_end(o) ##0 buffer2_sig_opc() == buffer2_sig_opc_0 and
	t_end(o) ##0 buffer2_var_abort() == buffer2_var_abort_0 and
	t_end(o) ##0 buffer2_var_addr() == buffer2_var_addr_0 and
	t_end(o) ##0 buffer2_var_data() == buffer2_var_data_0 and
	t_end(o) ##0 buffer2_var_opc() == buffer2_var_opc_0 and
	t_end(o) ##0 buffer3_sig_abort() == buffer3_sig_abort_0 and
	t_end(o) ##0 buffer3_sig_addr() == buffer3_sig_addr_0 and
	t_end(o) ##0 buffer3_sig_data() == buffer3_sig_data_0 and
	t_end(o) ##0 buffer3_sig_opc() == buffer3_sig_opc_0 and
	t_end(o) ##0 buffer3_var_abort() == tmp_buffer_abort_0 and
	t_end(o) ##0 buffer3_var_addr() == tmp_buffer_addr_0 and
	t_end(o) ##0 buffer3_var_data() == tmp_buffer_data_0 and
	t_end(o) ##0 buffer3_var_opc() == tmp_buffer_opc_0 and
	t_end(o) ##0 req_o_sig() == req_o_sig_0 and
	t_end(o) ##0 status1_sig() == status1_sig_0 and
	t_end(o) ##0 status1_var() == status1_var_0 and
	t_end(o) ##0 status2_sig() == status2_sig_0 and
	t_end(o) ##0 status2_var() == status2_var_0 and
	t_end(o) ##0 status3_sig() == status3_sig_0 and
	t_end(o) ##0 status3_var() == req_status and
	t_end(o) ##0 tmp_buffer_abort() == tmp_buffer_abort_0 and
	t_end(o) ##0 tmp_buffer_addr() == tmp_buffer_addr_0 and
	t_end(o) ##0 tmp_buffer_data() == tmp_buffer_data_0 and
	t_end(o) ##0 tmp_buffer_opc() == tmp_buffer_opc_0;
endproperty;
NON_EMPTY_2_read_4_a: assert property (disable iff (reset) NON_EMPTY_2_read_4_p(1));// ASSIGN t_end offset here

property NON_EMPTY_2_read_5_p(o);
bool tmp_buffer_abort_0;
int tmp_buffer_addr_0;
int tmp_buffer_data_0;
opc_t tmp_buffer_opc_0;
bool buffer3_var_abort_0;
int buffer3_var_addr_0;
int buffer3_var_data_0;
opc_t buffer3_var_opc_0;
req_status_t status3_var_0;
bool buffer3_sig_abort_0;
int buffer3_sig_addr_0;
int buffer3_sig_data_0;
opc_t buffer3_sig_opc_0;
bool req_o_sig_0;
req_status_t status1_sig_0;
req_status_t status2_sig_0;
req_status_t status3_sig_0;
bool buffer1_sig_abort_0;
int buffer1_sig_addr_0;
int buffer1_sig_data_0;
opc_t buffer1_sig_opc_0;
bool buffer2_sig_abort_0;
int buffer2_sig_addr_0;
int buffer2_sig_data_0;
opc_t buffer2_sig_opc_0;
// hold
	t ##0 hold(tmp_buffer_abort_0, tmp_buffer_abort()) and
	t ##0 hold(tmp_buffer_addr_0, tmp_buffer_addr()) and
	t ##0 hold(tmp_buffer_data_0, tmp_buffer_data()) and
	t ##0 hold(tmp_buffer_opc_0, tmp_buffer_opc()) and
	t ##0 hold(buffer3_var_abort_0, buffer3_var_abort()) and
	t ##0 hold(buffer3_var_addr_0, buffer3_var_addr()) and
	t ##0 hold(buffer3_var_data_0, buffer3_var_data()) and
	t ##0 hold(buffer3_var_opc_0, buffer3_var_opc()) and
	t ##0 hold(status3_var_0, status3_var()) and
	t ##0 hold(buffer3_sig_abort_0, buffer3_sig_abort()) and
	t ##0 hold(buffer3_sig_addr_0, buffer3_sig_addr()) and
	t ##0 hold(buffer3_sig_data_0, buffer3_sig_data()) and
	t ##0 hold(buffer3_sig_opc_0, buffer3_sig_opc()) and
	t ##0 hold(req_o_sig_0, req_o_sig()) and
	t ##0 hold(status1_sig_0, status1_sig()) and
	t ##0 hold(status2_sig_0, status2_sig()) and
	t ##0 hold(status3_sig_0, status3_sig()) and
	t ##0 hold(buffer1_sig_abort_0, buffer1_sig_abort()) and
	t ##0 hold(buffer1_sig_addr_0, buffer1_sig_addr()) and
	t ##0 hold(buffer1_sig_data_0, buffer1_sig_data()) and
	t ##0 hold(buffer1_sig_opc_0, buffer1_sig_opc()) and
	t ##0 hold(buffer2_sig_abort_0, buffer2_sig_abort()) and
	t ##0 hold(buffer2_sig_addr_0, buffer2_sig_addr()) and
	t ##0 hold(buffer2_sig_data_0, buffer2_sig_data()) and
	t ##0 hold(buffer2_sig_opc_0, buffer2_sig_opc()) and
// Conceptual State
	t ##0 NON_EMPTY_2() and
// trigger
	t ##0 updateQ_i_sync() and
	t ##0 (updateQ_i_sig() == nxt_grant_q) and
	t ##0 (status1_var() == req_status) and
	t ##0 !((status3_var() == empty_status)) and
	t ##0 (status2_var() == empty_status) and
	t ##0 updateQ_i_sync()
implies
	t_end(o) ##0 NON_EMPTY_2() and
	t_end(o) ##0 buffer1_sig_abort() == buffer1_sig_abort_0 and
	t_end(o) ##0 buffer1_sig_addr() == buffer1_sig_addr_0 and
	t_end(o) ##0 buffer1_sig_data() == buffer1_sig_data_0 and
	t_end(o) ##0 buffer1_sig_opc() == buffer1_sig_opc_0 and
	t_end(o) ##0 buffer2_sig_abort() == buffer2_sig_abort_0 and
	t_end(o) ##0 buffer2_sig_addr() == buffer2_sig_addr_0 and
	t_end(o) ##0 buffer2_sig_data() == buffer2_sig_data_0 and
	t_end(o) ##0 buffer2_sig_opc() == buffer2_sig_opc_0 and
	t_end(o) ##0 buffer2_var_abort() == tmp_buffer_abort_0 and
	t_end(o) ##0 buffer2_var_addr() == tmp_buffer_addr_0 and
	t_end(o) ##0 buffer2_var_data() == tmp_buffer_data_0 and
	t_end(o) ##0 buffer2_var_opc() == tmp_buffer_opc_0 and
	t_end(o) ##0 buffer3_sig_abort() == buffer3_sig_abort_0 and
	t_end(o) ##0 buffer3_sig_addr() == buffer3_sig_addr_0 and
	t_end(o) ##0 buffer3_sig_data() == buffer3_sig_data_0 and
	t_end(o) ##0 buffer3_sig_opc() == buffer3_sig_opc_0 and
	t_end(o) ##0 buffer3_var_abort() == buffer3_var_abort_0 and
	t_end(o) ##0 buffer3_var_addr() == buffer3_var_addr_0 and
	t_end(o) ##0 buffer3_var_data() == buffer3_var_data_0 and
	t_end(o) ##0 buffer3_var_opc() == buffer3_var_opc_0 and
	t_end(o) ##0 req_o_sig() == req_o_sig_0 and
	t_end(o) ##0 status1_sig() == status1_sig_0 and
	t_end(o) ##0 status1_var() == addr_status and
	t_end(o) ##0 status2_sig() == status2_sig_0 and
	t_end(o) ##0 status2_var() == req_status and
	t_end(o) ##0 status3_sig() == status3_sig_0 and
	t_end(o) ##0 status3_var() == status3_var_0 and
	t_end(o) ##0 tmp_buffer_abort() == tmp_buffer_abort_0 and
	t_end(o) ##0 tmp_buffer_addr() == tmp_buffer_addr_0 and
	t_end(o) ##0 tmp_buffer_data() == tmp_buffer_data_0 and
	t_end(o) ##0 tmp_buffer_opc() == tmp_buffer_opc_0;
endproperty;
NON_EMPTY_2_read_5_a: assert property (disable iff (reset) NON_EMPTY_2_read_5_p(1));// ASSIGN t_end offset here

property NON_EMPTY_2_read_6_p(o);
bool buffer2_var_abort_0;
int buffer2_var_addr_0;
int buffer2_var_data_0;
opc_t buffer2_var_opc_0;
bool tmp_buffer_abort_0;
int tmp_buffer_addr_0;
int tmp_buffer_data_0;
opc_t tmp_buffer_opc_0;
req_status_t status2_var_0;
bool buffer3_sig_abort_0;
int buffer3_sig_addr_0;
int buffer3_sig_data_0;
opc_t buffer3_sig_opc_0;
bool req_o_sig_0;
req_status_t status1_sig_0;
req_status_t status2_sig_0;
req_status_t status3_sig_0;
bool buffer1_sig_abort_0;
int buffer1_sig_addr_0;
int buffer1_sig_data_0;
opc_t buffer1_sig_opc_0;
bool buffer2_sig_abort_0;
int buffer2_sig_addr_0;
int buffer2_sig_data_0;
opc_t buffer2_sig_opc_0;
// hold
	t ##0 hold(buffer2_var_abort_0, buffer2_var_abort()) and
	t ##0 hold(buffer2_var_addr_0, buffer2_var_addr()) and
	t ##0 hold(buffer2_var_data_0, buffer2_var_data()) and
	t ##0 hold(buffer2_var_opc_0, buffer2_var_opc()) and
	t ##0 hold(tmp_buffer_abort_0, tmp_buffer_abort()) and
	t ##0 hold(tmp_buffer_addr_0, tmp_buffer_addr()) and
	t ##0 hold(tmp_buffer_data_0, tmp_buffer_data()) and
	t ##0 hold(tmp_buffer_opc_0, tmp_buffer_opc()) and
	t ##0 hold(status2_var_0, status2_var()) and
	t ##0 hold(buffer3_sig_abort_0, buffer3_sig_abort()) and
	t ##0 hold(buffer3_sig_addr_0, buffer3_sig_addr()) and
	t ##0 hold(buffer3_sig_data_0, buffer3_sig_data()) and
	t ##0 hold(buffer3_sig_opc_0, buffer3_sig_opc()) and
	t ##0 hold(req_o_sig_0, req_o_sig()) and
	t ##0 hold(status1_sig_0, status1_sig()) and
	t ##0 hold(status2_sig_0, status2_sig()) and
	t ##0 hold(status3_sig_0, status3_sig()) and
	t ##0 hold(buffer1_sig_abort_0, buffer1_sig_abort()) and
	t ##0 hold(buffer1_sig_addr_0, buffer1_sig_addr()) and
	t ##0 hold(buffer1_sig_data_0, buffer1_sig_data()) and
	t ##0 hold(buffer1_sig_opc_0, buffer1_sig_opc()) and
	t ##0 hold(buffer2_sig_abort_0, buffer2_sig_abort()) and
	t ##0 hold(buffer2_sig_addr_0, buffer2_sig_addr()) and
	t ##0 hold(buffer2_sig_data_0, buffer2_sig_data()) and
	t ##0 hold(buffer2_sig_opc_0, buffer2_sig_opc()) and
// Conceptual State
	t ##0 NON_EMPTY_2() and
// trigger
	t ##0 updateQ_i_sync() and
	t ##0 (updateQ_i_sig() == nxt_grant_q) and
	t ##0 (status1_var() == req_status) and
	t ##0 !((status3_var() == empty_status)) and
	t ##0 !((status2_var() == empty_status)) and
	t ##0 updateQ_i_sync()
implies
	t_end(o) ##0 NON_EMPTY_2() and
	t_end(o) ##0 buffer1_sig_abort() == buffer1_sig_abort_0 and
	t_end(o) ##0 buffer1_sig_addr() == buffer1_sig_addr_0 and
	t_end(o) ##0 buffer1_sig_data() == buffer1_sig_data_0 and
	t_end(o) ##0 buffer1_sig_opc() == buffer1_sig_opc_0 and
	t_end(o) ##0 buffer2_sig_abort() == buffer2_sig_abort_0 and
	t_end(o) ##0 buffer2_sig_addr() == buffer2_sig_addr_0 and
	t_end(o) ##0 buffer2_sig_data() == buffer2_sig_data_0 and
	t_end(o) ##0 buffer2_sig_opc() == buffer2_sig_opc_0 and
	t_end(o) ##0 buffer2_var_abort() == buffer2_var_abort_0 and
	t_end(o) ##0 buffer2_var_addr() == buffer2_var_addr_0 and
	t_end(o) ##0 buffer2_var_data() == buffer2_var_data_0 and
	t_end(o) ##0 buffer2_var_opc() == buffer2_var_opc_0 and
	t_end(o) ##0 buffer3_sig_abort() == buffer3_sig_abort_0 and
	t_end(o) ##0 buffer3_sig_addr() == buffer3_sig_addr_0 and
	t_end(o) ##0 buffer3_sig_data() == buffer3_sig_data_0 and
	t_end(o) ##0 buffer3_sig_opc() == buffer3_sig_opc_0 and
	t_end(o) ##0 buffer3_var_abort() == tmp_buffer_abort_0 and
	t_end(o) ##0 buffer3_var_addr() == tmp_buffer_addr_0 and
	t_end(o) ##0 buffer3_var_data() == tmp_buffer_data_0 and
	t_end(o) ##0 buffer3_var_opc() == tmp_buffer_opc_0 and
	t_end(o) ##0 req_o_sig() == req_o_sig_0 and
	t_end(o) ##0 status1_sig() == status1_sig_0 and
	t_end(o) ##0 status1_var() == addr_status and
	t_end(o) ##0 status2_sig() == status2_sig_0 and
	t_end(o) ##0 status2_var() == status2_var_0 and
	t_end(o) ##0 status3_sig() == status3_sig_0 and
	t_end(o) ##0 status3_var() == req_status and
	t_end(o) ##0 tmp_buffer_abort() == tmp_buffer_abort_0 and
	t_end(o) ##0 tmp_buffer_addr() == tmp_buffer_addr_0 and
	t_end(o) ##0 tmp_buffer_data() == tmp_buffer_data_0 and
	t_end(o) ##0 tmp_buffer_opc() == tmp_buffer_opc_0;
endproperty;
NON_EMPTY_2_read_6_a: assert property (disable iff (reset) NON_EMPTY_2_read_6_p(1));// ASSIGN t_end offset here

property NON_EMPTY_2_read_7_p(o);
bool buffer2_var_abort_0;
int buffer2_var_addr_0;
int buffer2_var_data_0;
opc_t buffer2_var_opc_0;
bool tmp_buffer_abort_0;
int tmp_buffer_addr_0;
int tmp_buffer_data_0;
opc_t tmp_buffer_opc_0;
bool buffer3_var_abort_0;
int buffer3_var_addr_0;
int buffer3_var_data_0;
opc_t buffer3_var_opc_0;
req_status_t status2_var_0;
req_status_t status3_var_0;
bool buffer3_sig_abort_0;
int buffer3_sig_addr_0;
int buffer3_sig_data_0;
opc_t buffer3_sig_opc_0;
bool req_o_sig_0;
req_status_t status1_sig_0;
req_status_t status2_sig_0;
req_status_t status3_sig_0;
bool buffer1_sig_abort_0;
int buffer1_sig_addr_0;
int buffer1_sig_data_0;
opc_t buffer1_sig_opc_0;
bool buffer2_sig_abort_0;
int buffer2_sig_addr_0;
int buffer2_sig_data_0;
opc_t buffer2_sig_opc_0;
// hold
	t ##0 hold(buffer2_var_abort_0, buffer2_var_abort()) and
	t ##0 hold(buffer2_var_addr_0, buffer2_var_addr()) and
	t ##0 hold(buffer2_var_data_0, buffer2_var_data()) and
	t ##0 hold(buffer2_var_opc_0, buffer2_var_opc()) and
	t ##0 hold(tmp_buffer_abort_0, tmp_buffer_abort()) and
	t ##0 hold(tmp_buffer_addr_0, tmp_buffer_addr()) and
	t ##0 hold(tmp_buffer_data_0, tmp_buffer_data()) and
	t ##0 hold(tmp_buffer_opc_0, tmp_buffer_opc()) and
	t ##0 hold(buffer3_var_abort_0, buffer3_var_abort()) and
	t ##0 hold(buffer3_var_addr_0, buffer3_var_addr()) and
	t ##0 hold(buffer3_var_data_0, buffer3_var_data()) and
	t ##0 hold(buffer3_var_opc_0, buffer3_var_opc()) and
	t ##0 hold(status2_var_0, status2_var()) and
	t ##0 hold(status3_var_0, status3_var()) and
	t ##0 hold(buffer3_sig_abort_0, buffer3_sig_abort()) and
	t ##0 hold(buffer3_sig_addr_0, buffer3_sig_addr()) and
	t ##0 hold(buffer3_sig_data_0, buffer3_sig_data()) and
	t ##0 hold(buffer3_sig_opc_0, buffer3_sig_opc()) and
	t ##0 hold(req_o_sig_0, req_o_sig()) and
	t ##0 hold(status1_sig_0, status1_sig()) and
	t ##0 hold(status2_sig_0, status2_sig()) and
	t ##0 hold(status3_sig_0, status3_sig()) and
	t ##0 hold(buffer1_sig_abort_0, buffer1_sig_abort()) and
	t ##0 hold(buffer1_sig_addr_0, buffer1_sig_addr()) and
	t ##0 hold(buffer1_sig_data_0, buffer1_sig_data()) and
	t ##0 hold(buffer1_sig_opc_0, buffer1_sig_opc()) and
	t ##0 hold(buffer2_sig_abort_0, buffer2_sig_abort()) and
	t ##0 hold(buffer2_sig_addr_0, buffer2_sig_addr()) and
	t ##0 hold(buffer2_sig_data_0, buffer2_sig_data()) and
	t ##0 hold(buffer2_sig_opc_0, buffer2_sig_opc()) and
// Conceptual State
	t ##0 NON_EMPTY_2() and
// trigger
	t ##0 updateQ_i_sync() and
	t ##0 (updateQ_i_sig() == nxt_phase_q) and
	t ##0 !((status3_var() == empty_status)) and
	t ##0 (status1_var() == empty_status) and
	t ##0 updateQ_i_sync()
implies
	t_end(o) ##0 NON_EMPTY_2() and
	t_end(o) ##0 buffer1_sig_abort() == buffer1_sig_abort_0 and
	t_end(o) ##0 buffer1_sig_addr() == buffer1_sig_addr_0 and
	t_end(o) ##0 buffer1_sig_data() == buffer1_sig_data_0 and
	t_end(o) ##0 buffer1_sig_opc() == buffer1_sig_opc_0 and
	t_end(o) ##0 buffer2_sig_abort() == buffer2_sig_abort_0 and
	t_end(o) ##0 buffer2_sig_addr() == buffer2_sig_addr_0 and
	t_end(o) ##0 buffer2_sig_data() == buffer2_sig_data_0 and
	t_end(o) ##0 buffer2_sig_opc() == buffer2_sig_opc_0 and
	t_end(o) ##0 buffer2_var_abort() == buffer2_var_abort_0 and
	t_end(o) ##0 buffer2_var_addr() == buffer2_var_addr_0 and
	t_end(o) ##0 buffer2_var_data() == buffer2_var_data_0 and
	t_end(o) ##0 buffer2_var_opc() == buffer2_var_opc_0 and
	t_end(o) ##0 buffer3_sig_abort() == buffer3_sig_abort_0 and
	t_end(o) ##0 buffer3_sig_addr() == buffer3_sig_addr_0 and
	t_end(o) ##0 buffer3_sig_data() == buffer3_sig_data_0 and
	t_end(o) ##0 buffer3_sig_opc() == buffer3_sig_opc_0 and
	t_end(o) ##0 buffer3_var_abort() == buffer3_var_abort_0 and
	t_end(o) ##0 buffer3_var_addr() == buffer3_var_addr_0 and
	t_end(o) ##0 buffer3_var_data() == buffer3_var_data_0 and
	t_end(o) ##0 buffer3_var_opc() == buffer3_var_opc_0 and
	t_end(o) ##0 req_o_sig() == req_o_sig_0 and
	t_end(o) ##0 status1_sig() == status1_sig_0 and
	t_end(o) ##0 status1_var() == req_status and
	t_end(o) ##0 status2_sig() == status2_sig_0 and
	t_end(o) ##0 status2_var() == status2_var_0 and
	t_end(o) ##0 status3_sig() == status3_sig_0 and
	t_end(o) ##0 status3_var() == status3_var_0 and
	t_end(o) ##0 tmp_buffer_abort() == tmp_buffer_abort_0 and
	t_end(o) ##0 tmp_buffer_addr() == tmp_buffer_addr_0 and
	t_end(o) ##0 tmp_buffer_data() == tmp_buffer_data_0 and
	t_end(o) ##0 tmp_buffer_opc() == tmp_buffer_opc_0;
endproperty;
NON_EMPTY_2_read_7_a: assert property (disable iff (reset) NON_EMPTY_2_read_7_p(1));// ASSIGN t_end offset here

property NON_EMPTY_2_read_8_p(o);
bool buffer2_var_abort_0;
int buffer2_var_addr_0;
int buffer2_var_data_0;
opc_t buffer2_var_opc_0;
bool tmp_buffer_abort_0;
int tmp_buffer_addr_0;
int tmp_buffer_data_0;
opc_t tmp_buffer_opc_0;
bool buffer3_var_abort_0;
int buffer3_var_addr_0;
int buffer3_var_data_0;
opc_t buffer3_var_opc_0;
req_status_t status2_var_0;
req_status_t status3_var_0;
bool buffer3_sig_abort_0;
int buffer3_sig_addr_0;
int buffer3_sig_data_0;
opc_t buffer3_sig_opc_0;
bool req_o_sig_0;
req_status_t status1_sig_0;
req_status_t status2_sig_0;
req_status_t status3_sig_0;
bool buffer1_sig_abort_0;
int buffer1_sig_addr_0;
int buffer1_sig_data_0;
opc_t buffer1_sig_opc_0;
bool buffer2_sig_abort_0;
int buffer2_sig_addr_0;
int buffer2_sig_data_0;
opc_t buffer2_sig_opc_0;
// hold
	t ##0 hold(buffer2_var_abort_0, buffer2_var_abort()) and
	t ##0 hold(buffer2_var_addr_0, buffer2_var_addr()) and
	t ##0 hold(buffer2_var_data_0, buffer2_var_data()) and
	t ##0 hold(buffer2_var_opc_0, buffer2_var_opc()) and
	t ##0 hold(tmp_buffer_abort_0, tmp_buffer_abort()) and
	t ##0 hold(tmp_buffer_addr_0, tmp_buffer_addr()) and
	t ##0 hold(tmp_buffer_data_0, tmp_buffer_data()) and
	t ##0 hold(tmp_buffer_opc_0, tmp_buffer_opc()) and
	t ##0 hold(buffer3_var_abort_0, buffer3_var_abort()) and
	t ##0 hold(buffer3_var_addr_0, buffer3_var_addr()) and
	t ##0 hold(buffer3_var_data_0, buffer3_var_data()) and
	t ##0 hold(buffer3_var_opc_0, buffer3_var_opc()) and
	t ##0 hold(status2_var_0, status2_var()) and
	t ##0 hold(status3_var_0, status3_var()) and
	t ##0 hold(buffer3_sig_abort_0, buffer3_sig_abort()) and
	t ##0 hold(buffer3_sig_addr_0, buffer3_sig_addr()) and
	t ##0 hold(buffer3_sig_data_0, buffer3_sig_data()) and
	t ##0 hold(buffer3_sig_opc_0, buffer3_sig_opc()) and
	t ##0 hold(req_o_sig_0, req_o_sig()) and
	t ##0 hold(status1_sig_0, status1_sig()) and
	t ##0 hold(status2_sig_0, status2_sig()) and
	t ##0 hold(status3_sig_0, status3_sig()) and
	t ##0 hold(buffer1_sig_abort_0, buffer1_sig_abort()) and
	t ##0 hold(buffer1_sig_addr_0, buffer1_sig_addr()) and
	t ##0 hold(buffer1_sig_data_0, buffer1_sig_data()) and
	t ##0 hold(buffer1_sig_opc_0, buffer1_sig_opc()) and
	t ##0 hold(buffer2_sig_abort_0, buffer2_sig_abort()) and
	t ##0 hold(buffer2_sig_addr_0, buffer2_sig_addr()) and
	t ##0 hold(buffer2_sig_data_0, buffer2_sig_data()) and
	t ##0 hold(buffer2_sig_opc_0, buffer2_sig_opc()) and
// Conceptual State
	t ##0 NON_EMPTY_2() and
// trigger
	t ##0 updateQ_i_sync() and
	t ##0 (updateQ_i_sig() == nxt_btr_q) and
	t ##0 !((status3_var() == empty_status)) and
	t ##0 (status1_var() == empty_status) and
	t ##0 updateQ_i_sync()
implies
	t_end(o) ##0 NON_EMPTY_2() and
	t_end(o) ##0 buffer1_sig_abort() == buffer1_sig_abort_0 and
	t_end(o) ##0 buffer1_sig_addr() == buffer1_sig_addr_0 and
	t_end(o) ##0 buffer1_sig_data() == buffer1_sig_data_0 and
	t_end(o) ##0 buffer1_sig_opc() == buffer1_sig_opc_0 and
	t_end(o) ##0 buffer2_sig_abort() == buffer2_sig_abort_0 and
	t_end(o) ##0 buffer2_sig_addr() == buffer2_sig_addr_0 and
	t_end(o) ##0 buffer2_sig_data() == buffer2_sig_data_0 and
	t_end(o) ##0 buffer2_sig_opc() == buffer2_sig_opc_0 and
	t_end(o) ##0 buffer2_var_abort() == buffer2_var_abort_0 and
	t_end(o) ##0 buffer2_var_addr() == buffer2_var_addr_0 and
	t_end(o) ##0 buffer2_var_data() == buffer2_var_data_0 and
	t_end(o) ##0 buffer2_var_opc() == buffer2_var_opc_0 and
	t_end(o) ##0 buffer3_sig_abort() == buffer3_sig_abort_0 and
	t_end(o) ##0 buffer3_sig_addr() == buffer3_sig_addr_0 and
	t_end(o) ##0 buffer3_sig_data() == buffer3_sig_data_0 and
	t_end(o) ##0 buffer3_sig_opc() == buffer3_sig_opc_0 and
	t_end(o) ##0 buffer3_var_abort() == buffer3_var_abort_0 and
	t_end(o) ##0 buffer3_var_addr() == buffer3_var_addr_0 and
	t_end(o) ##0 buffer3_var_data() == buffer3_var_data_0 and
	t_end(o) ##0 buffer3_var_opc() == buffer3_var_opc_0 and
	t_end(o) ##0 req_o_sig() == req_o_sig_0 and
	t_end(o) ##0 status1_sig() == status1_sig_0 and
	t_end(o) ##0 status1_var() == req_status and
	t_end(o) ##0 status2_sig() == status2_sig_0 and
	t_end(o) ##0 status2_var() == status2_var_0 and
	t_end(o) ##0 status3_sig() == status3_sig_0 and
	t_end(o) ##0 status3_var() == status3_var_0 and
	t_end(o) ##0 tmp_buffer_abort() == tmp_buffer_abort_0 and
	t_end(o) ##0 tmp_buffer_addr() == tmp_buffer_addr_0 and
	t_end(o) ##0 tmp_buffer_data() == tmp_buffer_data_0 and
	t_end(o) ##0 tmp_buffer_opc() == tmp_buffer_opc_0;
endproperty;
NON_EMPTY_2_read_8_a: assert property (disable iff (reset) NON_EMPTY_2_read_8_p(1));// ASSIGN t_end offset here

property NON_EMPTY_2_read_9_p(o);
bool tmp_buffer_abort_0;
int tmp_buffer_addr_0;
int tmp_buffer_data_0;
opc_t tmp_buffer_opc_0;
bool buffer3_var_abort_0;
int buffer3_var_addr_0;
int buffer3_var_data_0;
opc_t buffer3_var_opc_0;
req_status_t status1_var_0;
req_status_t status3_var_0;
bool buffer3_sig_abort_0;
int buffer3_sig_addr_0;
int buffer3_sig_data_0;
opc_t buffer3_sig_opc_0;
bool req_o_sig_0;
req_status_t status1_sig_0;
req_status_t status2_sig_0;
req_status_t status3_sig_0;
bool buffer1_sig_abort_0;
int buffer1_sig_addr_0;
int buffer1_sig_data_0;
opc_t buffer1_sig_opc_0;
bool buffer2_sig_abort_0;
int buffer2_sig_addr_0;
int buffer2_sig_data_0;
opc_t buffer2_sig_opc_0;
// hold
	t ##0 hold(tmp_buffer_abort_0, tmp_buffer_abort()) and
	t ##0 hold(tmp_buffer_addr_0, tmp_buffer_addr()) and
	t ##0 hold(tmp_buffer_data_0, tmp_buffer_data()) and
	t ##0 hold(tmp_buffer_opc_0, tmp_buffer_opc()) and
	t ##0 hold(buffer3_var_abort_0, buffer3_var_abort()) and
	t ##0 hold(buffer3_var_addr_0, buffer3_var_addr()) and
	t ##0 hold(buffer3_var_data_0, buffer3_var_data()) and
	t ##0 hold(buffer3_var_opc_0, buffer3_var_opc()) and
	t ##0 hold(status1_var_0, status1_var()) and
	t ##0 hold(status3_var_0, status3_var()) and
	t ##0 hold(buffer3_sig_abort_0, buffer3_sig_abort()) and
	t ##0 hold(buffer3_sig_addr_0, buffer3_sig_addr()) and
	t ##0 hold(buffer3_sig_data_0, buffer3_sig_data()) and
	t ##0 hold(buffer3_sig_opc_0, buffer3_sig_opc()) and
	t ##0 hold(req_o_sig_0, req_o_sig()) and
	t ##0 hold(status1_sig_0, status1_sig()) and
	t ##0 hold(status2_sig_0, status2_sig()) and
	t ##0 hold(status3_sig_0, status3_sig()) and
	t ##0 hold(buffer1_sig_abort_0, buffer1_sig_abort()) and
	t ##0 hold(buffer1_sig_addr_0, buffer1_sig_addr()) and
	t ##0 hold(buffer1_sig_data_0, buffer1_sig_data()) and
	t ##0 hold(buffer1_sig_opc_0, buffer1_sig_opc()) and
	t ##0 hold(buffer2_sig_abort_0, buffer2_sig_abort()) and
	t ##0 hold(buffer2_sig_addr_0, buffer2_sig_addr()) and
	t ##0 hold(buffer2_sig_data_0, buffer2_sig_data()) and
	t ##0 hold(buffer2_sig_opc_0, buffer2_sig_opc()) and
// Conceptual State
	t ##0 NON_EMPTY_2() and
// trigger
	t ##0 updateQ_i_sync() and
	t ##0 (updateQ_i_sig() == nxt_phase_q) and
	t ##0 !((status1_var() == data_staus)) and
	t ##0 !((status1_var() == addr_status)) and
	t ##0 !((status3_var() == empty_status)) and
	t ##0 !((status1_var() == empty_status)) and
	t ##0 (status2_var() == empty_status) and
	t ##0 updateQ_i_sync()
implies
	t_end(o) ##0 NON_EMPTY_2() and
	t_end(o) ##0 buffer1_sig_abort() == buffer1_sig_abort_0 and
	t_end(o) ##0 buffer1_sig_addr() == buffer1_sig_addr_0 and
	t_end(o) ##0 buffer1_sig_data() == buffer1_sig_data_0 and
	t_end(o) ##0 buffer1_sig_opc() == buffer1_sig_opc_0 and
	t_end(o) ##0 buffer2_sig_abort() == buffer2_sig_abort_0 and
	t_end(o) ##0 buffer2_sig_addr() == buffer2_sig_addr_0 and
	t_end(o) ##0 buffer2_sig_data() == buffer2_sig_data_0 and
	t_end(o) ##0 buffer2_sig_opc() == buffer2_sig_opc_0 and
	t_end(o) ##0 buffer2_var_abort() == tmp_buffer_abort_0 and
	t_end(o) ##0 buffer2_var_addr() == tmp_buffer_addr_0 and
	t_end(o) ##0 buffer2_var_data() == tmp_buffer_data_0 and
	t_end(o) ##0 buffer2_var_opc() == tmp_buffer_opc_0 and
	t_end(o) ##0 buffer3_sig_abort() == buffer3_sig_abort_0 and
	t_end(o) ##0 buffer3_sig_addr() == buffer3_sig_addr_0 and
	t_end(o) ##0 buffer3_sig_data() == buffer3_sig_data_0 and
	t_end(o) ##0 buffer3_sig_opc() == buffer3_sig_opc_0 and
	t_end(o) ##0 buffer3_var_abort() == buffer3_var_abort_0 and
	t_end(o) ##0 buffer3_var_addr() == buffer3_var_addr_0 and
	t_end(o) ##0 buffer3_var_data() == buffer3_var_data_0 and
	t_end(o) ##0 buffer3_var_opc() == buffer3_var_opc_0 and
	t_end(o) ##0 req_o_sig() == req_o_sig_0 and
	t_end(o) ##0 status1_sig() == status1_sig_0 and
	t_end(o) ##0 status1_var() == status1_var_0 and
	t_end(o) ##0 status2_sig() == status2_sig_0 and
	t_end(o) ##0 status2_var() == req_status and
	t_end(o) ##0 status3_sig() == status3_sig_0 and
	t_end(o) ##0 status3_var() == status3_var_0 and
	t_end(o) ##0 tmp_buffer_abort() == tmp_buffer_abort_0 and
	t_end(o) ##0 tmp_buffer_addr() == tmp_buffer_addr_0 and
	t_end(o) ##0 tmp_buffer_data() == tmp_buffer_data_0 and
	t_end(o) ##0 tmp_buffer_opc() == tmp_buffer_opc_0;
endproperty;
NON_EMPTY_2_read_9_a: assert property (disable iff (reset) NON_EMPTY_2_read_9_p(1));// ASSIGN t_end offset here

property NON_EMPTY_2_read_10_p(o);
bool buffer2_var_abort_0;
int buffer2_var_addr_0;
int buffer2_var_data_0;
opc_t buffer2_var_opc_0;
bool tmp_buffer_abort_0;
int tmp_buffer_addr_0;
int tmp_buffer_data_0;
opc_t tmp_buffer_opc_0;
req_status_t status1_var_0;
req_status_t status2_var_0;
bool buffer3_sig_abort_0;
int buffer3_sig_addr_0;
int buffer3_sig_data_0;
opc_t buffer3_sig_opc_0;
bool req_o_sig_0;
req_status_t status1_sig_0;
req_status_t status2_sig_0;
req_status_t status3_sig_0;
bool buffer1_sig_abort_0;
int buffer1_sig_addr_0;
int buffer1_sig_data_0;
opc_t buffer1_sig_opc_0;
bool buffer2_sig_abort_0;
int buffer2_sig_addr_0;
int buffer2_sig_data_0;
opc_t buffer2_sig_opc_0;
// hold
	t ##0 hold(buffer2_var_abort_0, buffer2_var_abort()) and
	t ##0 hold(buffer2_var_addr_0, buffer2_var_addr()) and
	t ##0 hold(buffer2_var_data_0, buffer2_var_data()) and
	t ##0 hold(buffer2_var_opc_0, buffer2_var_opc()) and
	t ##0 hold(tmp_buffer_abort_0, tmp_buffer_abort()) and
	t ##0 hold(tmp_buffer_addr_0, tmp_buffer_addr()) and
	t ##0 hold(tmp_buffer_data_0, tmp_buffer_data()) and
	t ##0 hold(tmp_buffer_opc_0, tmp_buffer_opc()) and
	t ##0 hold(status1_var_0, status1_var()) and
	t ##0 hold(status2_var_0, status2_var()) and
	t ##0 hold(buffer3_sig_abort_0, buffer3_sig_abort()) and
	t ##0 hold(buffer3_sig_addr_0, buffer3_sig_addr()) and
	t ##0 hold(buffer3_sig_data_0, buffer3_sig_data()) and
	t ##0 hold(buffer3_sig_opc_0, buffer3_sig_opc()) and
	t ##0 hold(req_o_sig_0, req_o_sig()) and
	t ##0 hold(status1_sig_0, status1_sig()) and
	t ##0 hold(status2_sig_0, status2_sig()) and
	t ##0 hold(status3_sig_0, status3_sig()) and
	t ##0 hold(buffer1_sig_abort_0, buffer1_sig_abort()) and
	t ##0 hold(buffer1_sig_addr_0, buffer1_sig_addr()) and
	t ##0 hold(buffer1_sig_data_0, buffer1_sig_data()) and
	t ##0 hold(buffer1_sig_opc_0, buffer1_sig_opc()) and
	t ##0 hold(buffer2_sig_abort_0, buffer2_sig_abort()) and
	t ##0 hold(buffer2_sig_addr_0, buffer2_sig_addr()) and
	t ##0 hold(buffer2_sig_data_0, buffer2_sig_data()) and
	t ##0 hold(buffer2_sig_opc_0, buffer2_sig_opc()) and
// Conceptual State
	t ##0 NON_EMPTY_2() and
// trigger
	t ##0 updateQ_i_sync() and
	t ##0 (updateQ_i_sig() == nxt_phase_q) and
	t ##0 !((status1_var() == data_staus)) and
	t ##0 !((status1_var() == addr_status)) and
	t ##0 !((status3_var() == empty_status)) and
	t ##0 !((status1_var() == empty_status)) and
	t ##0 !((status2_var() == empty_status)) and
	t ##0 updateQ_i_sync()
implies
	t_end(o) ##0 NON_EMPTY_2() and
	t_end(o) ##0 buffer1_sig_abort() == buffer1_sig_abort_0 and
	t_end(o) ##0 buffer1_sig_addr() == buffer1_sig_addr_0 and
	t_end(o) ##0 buffer1_sig_data() == buffer1_sig_data_0 and
	t_end(o) ##0 buffer1_sig_opc() == buffer1_sig_opc_0 and
	t_end(o) ##0 buffer2_sig_abort() == buffer2_sig_abort_0 and
	t_end(o) ##0 buffer2_sig_addr() == buffer2_sig_addr_0 and
	t_end(o) ##0 buffer2_sig_data() == buffer2_sig_data_0 and
	t_end(o) ##0 buffer2_sig_opc() == buffer2_sig_opc_0 and
	t_end(o) ##0 buffer2_var_abort() == buffer2_var_abort_0 and
	t_end(o) ##0 buffer2_var_addr() == buffer2_var_addr_0 and
	t_end(o) ##0 buffer2_var_data() == buffer2_var_data_0 and
	t_end(o) ##0 buffer2_var_opc() == buffer2_var_opc_0 and
	t_end(o) ##0 buffer3_sig_abort() == buffer3_sig_abort_0 and
	t_end(o) ##0 buffer3_sig_addr() == buffer3_sig_addr_0 and
	t_end(o) ##0 buffer3_sig_data() == buffer3_sig_data_0 and
	t_end(o) ##0 buffer3_sig_opc() == buffer3_sig_opc_0 and
	t_end(o) ##0 buffer3_var_abort() == tmp_buffer_abort_0 and
	t_end(o) ##0 buffer3_var_addr() == tmp_buffer_addr_0 and
	t_end(o) ##0 buffer3_var_data() == tmp_buffer_data_0 and
	t_end(o) ##0 buffer3_var_opc() == tmp_buffer_opc_0 and
	t_end(o) ##0 req_o_sig() == req_o_sig_0 and
	t_end(o) ##0 status1_sig() == status1_sig_0 and
	t_end(o) ##0 status1_var() == status1_var_0 and
	t_end(o) ##0 status2_sig() == status2_sig_0 and
	t_end(o) ##0 status2_var() == status2_var_0 and
	t_end(o) ##0 status3_sig() == status3_sig_0 and
	t_end(o) ##0 status3_var() == req_status and
	t_end(o) ##0 tmp_buffer_abort() == tmp_buffer_abort_0 and
	t_end(o) ##0 tmp_buffer_addr() == tmp_buffer_addr_0 and
	t_end(o) ##0 tmp_buffer_data() == tmp_buffer_data_0 and
	t_end(o) ##0 tmp_buffer_opc() == tmp_buffer_opc_0;
endproperty;
NON_EMPTY_2_read_10_a: assert property (disable iff (reset) NON_EMPTY_2_read_10_p(1));// ASSIGN t_end offset here

property NON_EMPTY_2_read_11_p(o);
bool tmp_buffer_abort_0;
int tmp_buffer_addr_0;
int tmp_buffer_data_0;
opc_t tmp_buffer_opc_0;
bool buffer3_var_abort_0;
int buffer3_var_addr_0;
int buffer3_var_data_0;
opc_t buffer3_var_opc_0;
req_status_t status1_var_0;
req_status_t status3_var_0;
bool buffer3_sig_abort_0;
int buffer3_sig_addr_0;
int buffer3_sig_data_0;
opc_t buffer3_sig_opc_0;
bool req_o_sig_0;
req_status_t status1_sig_0;
req_status_t status2_sig_0;
req_status_t status3_sig_0;
bool buffer1_sig_abort_0;
int buffer1_sig_addr_0;
int buffer1_sig_data_0;
opc_t buffer1_sig_opc_0;
bool buffer2_sig_abort_0;
int buffer2_sig_addr_0;
int buffer2_sig_data_0;
opc_t buffer2_sig_opc_0;
// hold
	t ##0 hold(tmp_buffer_abort_0, tmp_buffer_abort()) and
	t ##0 hold(tmp_buffer_addr_0, tmp_buffer_addr()) and
	t ##0 hold(tmp_buffer_data_0, tmp_buffer_data()) and
	t ##0 hold(tmp_buffer_opc_0, tmp_buffer_opc()) and
	t ##0 hold(buffer3_var_abort_0, buffer3_var_abort()) and
	t ##0 hold(buffer3_var_addr_0, buffer3_var_addr()) and
	t ##0 hold(buffer3_var_data_0, buffer3_var_data()) and
	t ##0 hold(buffer3_var_opc_0, buffer3_var_opc()) and
	t ##0 hold(status1_var_0, status1_var()) and
	t ##0 hold(status3_var_0, status3_var()) and
	t ##0 hold(buffer3_sig_abort_0, buffer3_sig_abort()) and
	t ##0 hold(buffer3_sig_addr_0, buffer3_sig_addr()) and
	t ##0 hold(buffer3_sig_data_0, buffer3_sig_data()) and
	t ##0 hold(buffer3_sig_opc_0, buffer3_sig_opc()) and
	t ##0 hold(req_o_sig_0, req_o_sig()) and
	t ##0 hold(status1_sig_0, status1_sig()) and
	t ##0 hold(status2_sig_0, status2_sig()) and
	t ##0 hold(status3_sig_0, status3_sig()) and
	t ##0 hold(buffer1_sig_abort_0, buffer1_sig_abort()) and
	t ##0 hold(buffer1_sig_addr_0, buffer1_sig_addr()) and
	t ##0 hold(buffer1_sig_data_0, buffer1_sig_data()) and
	t ##0 hold(buffer1_sig_opc_0, buffer1_sig_opc()) and
	t ##0 hold(buffer2_sig_abort_0, buffer2_sig_abort()) and
	t ##0 hold(buffer2_sig_addr_0, buffer2_sig_addr()) and
	t ##0 hold(buffer2_sig_data_0, buffer2_sig_data()) and
	t ##0 hold(buffer2_sig_opc_0, buffer2_sig_opc()) and
// Conceptual State
	t ##0 NON_EMPTY_2() and
// trigger
	t ##0 updateQ_i_sync() and
	t ##0 (updateQ_i_sig() == nxt_btr_q) and
	t ##0 !((status1_var() == data_staus)) and
	t ##0 !((status3_var() == empty_status)) and
	t ##0 !((status1_var() == empty_status)) and
	t ##0 (status2_var() == empty_status) and
	t ##0 updateQ_i_sync()
implies
	t_end(o) ##0 NON_EMPTY_2() and
	t_end(o) ##0 buffer1_sig_abort() == buffer1_sig_abort_0 and
	t_end(o) ##0 buffer1_sig_addr() == buffer1_sig_addr_0 and
	t_end(o) ##0 buffer1_sig_data() == buffer1_sig_data_0 and
	t_end(o) ##0 buffer1_sig_opc() == buffer1_sig_opc_0 and
	t_end(o) ##0 buffer2_sig_abort() == buffer2_sig_abort_0 and
	t_end(o) ##0 buffer2_sig_addr() == buffer2_sig_addr_0 and
	t_end(o) ##0 buffer2_sig_data() == buffer2_sig_data_0 and
	t_end(o) ##0 buffer2_sig_opc() == buffer2_sig_opc_0 and
	t_end(o) ##0 buffer2_var_abort() == tmp_buffer_abort_0 and
	t_end(o) ##0 buffer2_var_addr() == tmp_buffer_addr_0 and
	t_end(o) ##0 buffer2_var_data() == tmp_buffer_data_0 and
	t_end(o) ##0 buffer2_var_opc() == tmp_buffer_opc_0 and
	t_end(o) ##0 buffer3_sig_abort() == buffer3_sig_abort_0 and
	t_end(o) ##0 buffer3_sig_addr() == buffer3_sig_addr_0 and
	t_end(o) ##0 buffer3_sig_data() == buffer3_sig_data_0 and
	t_end(o) ##0 buffer3_sig_opc() == buffer3_sig_opc_0 and
	t_end(o) ##0 buffer3_var_abort() == buffer3_var_abort_0 and
	t_end(o) ##0 buffer3_var_addr() == buffer3_var_addr_0 and
	t_end(o) ##0 buffer3_var_data() == buffer3_var_data_0 and
	t_end(o) ##0 buffer3_var_opc() == buffer3_var_opc_0 and
	t_end(o) ##0 req_o_sig() == req_o_sig_0 and
	t_end(o) ##0 status1_sig() == status1_sig_0 and
	t_end(o) ##0 status1_var() == status1_var_0 and
	t_end(o) ##0 status2_sig() == status2_sig_0 and
	t_end(o) ##0 status2_var() == req_status and
	t_end(o) ##0 status3_sig() == status3_sig_0 and
	t_end(o) ##0 status3_var() == status3_var_0 and
	t_end(o) ##0 tmp_buffer_abort() == tmp_buffer_abort_0 and
	t_end(o) ##0 tmp_buffer_addr() == tmp_buffer_addr_0 and
	t_end(o) ##0 tmp_buffer_data() == tmp_buffer_data_0 and
	t_end(o) ##0 tmp_buffer_opc() == tmp_buffer_opc_0;
endproperty;
NON_EMPTY_2_read_11_a: assert property (disable iff (reset) NON_EMPTY_2_read_11_p(1));// ASSIGN t_end offset here

property NON_EMPTY_2_read_12_p(o);
bool buffer2_var_abort_0;
int buffer2_var_addr_0;
int buffer2_var_data_0;
opc_t buffer2_var_opc_0;
bool tmp_buffer_abort_0;
int tmp_buffer_addr_0;
int tmp_buffer_data_0;
opc_t tmp_buffer_opc_0;
req_status_t status1_var_0;
req_status_t status2_var_0;
bool buffer3_sig_abort_0;
int buffer3_sig_addr_0;
int buffer3_sig_data_0;
opc_t buffer3_sig_opc_0;
bool req_o_sig_0;
req_status_t status1_sig_0;
req_status_t status2_sig_0;
req_status_t status3_sig_0;
bool buffer1_sig_abort_0;
int buffer1_sig_addr_0;
int buffer1_sig_data_0;
opc_t buffer1_sig_opc_0;
bool buffer2_sig_abort_0;
int buffer2_sig_addr_0;
int buffer2_sig_data_0;
opc_t buffer2_sig_opc_0;
// hold
	t ##0 hold(buffer2_var_abort_0, buffer2_var_abort()) and
	t ##0 hold(buffer2_var_addr_0, buffer2_var_addr()) and
	t ##0 hold(buffer2_var_data_0, buffer2_var_data()) and
	t ##0 hold(buffer2_var_opc_0, buffer2_var_opc()) and
	t ##0 hold(tmp_buffer_abort_0, tmp_buffer_abort()) and
	t ##0 hold(tmp_buffer_addr_0, tmp_buffer_addr()) and
	t ##0 hold(tmp_buffer_data_0, tmp_buffer_data()) and
	t ##0 hold(tmp_buffer_opc_0, tmp_buffer_opc()) and
	t ##0 hold(status1_var_0, status1_var()) and
	t ##0 hold(status2_var_0, status2_var()) and
	t ##0 hold(buffer3_sig_abort_0, buffer3_sig_abort()) and
	t ##0 hold(buffer3_sig_addr_0, buffer3_sig_addr()) and
	t ##0 hold(buffer3_sig_data_0, buffer3_sig_data()) and
	t ##0 hold(buffer3_sig_opc_0, buffer3_sig_opc()) and
	t ##0 hold(req_o_sig_0, req_o_sig()) and
	t ##0 hold(status1_sig_0, status1_sig()) and
	t ##0 hold(status2_sig_0, status2_sig()) and
	t ##0 hold(status3_sig_0, status3_sig()) and
	t ##0 hold(buffer1_sig_abort_0, buffer1_sig_abort()) and
	t ##0 hold(buffer1_sig_addr_0, buffer1_sig_addr()) and
	t ##0 hold(buffer1_sig_data_0, buffer1_sig_data()) and
	t ##0 hold(buffer1_sig_opc_0, buffer1_sig_opc()) and
	t ##0 hold(buffer2_sig_abort_0, buffer2_sig_abort()) and
	t ##0 hold(buffer2_sig_addr_0, buffer2_sig_addr()) and
	t ##0 hold(buffer2_sig_data_0, buffer2_sig_data()) and
	t ##0 hold(buffer2_sig_opc_0, buffer2_sig_opc()) and
// Conceptual State
	t ##0 NON_EMPTY_2() and
// trigger
	t ##0 updateQ_i_sync() and
	t ##0 (updateQ_i_sig() == nxt_btr_q) and
	t ##0 !((status1_var() == data_staus)) and
	t ##0 !((status3_var() == empty_status)) and
	t ##0 !((status1_var() == empty_status)) and
	t ##0 !((status2_var() == empty_status)) and
	t ##0 updateQ_i_sync()
implies
	t_end(o) ##0 NON_EMPTY_2() and
	t_end(o) ##0 buffer1_sig_abort() == buffer1_sig_abort_0 and
	t_end(o) ##0 buffer1_sig_addr() == buffer1_sig_addr_0 and
	t_end(o) ##0 buffer1_sig_data() == buffer1_sig_data_0 and
	t_end(o) ##0 buffer1_sig_opc() == buffer1_sig_opc_0 and
	t_end(o) ##0 buffer2_sig_abort() == buffer2_sig_abort_0 and
	t_end(o) ##0 buffer2_sig_addr() == buffer2_sig_addr_0 and
	t_end(o) ##0 buffer2_sig_data() == buffer2_sig_data_0 and
	t_end(o) ##0 buffer2_sig_opc() == buffer2_sig_opc_0 and
	t_end(o) ##0 buffer2_var_abort() == buffer2_var_abort_0 and
	t_end(o) ##0 buffer2_var_addr() == buffer2_var_addr_0 and
	t_end(o) ##0 buffer2_var_data() == buffer2_var_data_0 and
	t_end(o) ##0 buffer2_var_opc() == buffer2_var_opc_0 and
	t_end(o) ##0 buffer3_sig_abort() == buffer3_sig_abort_0 and
	t_end(o) ##0 buffer3_sig_addr() == buffer3_sig_addr_0 and
	t_end(o) ##0 buffer3_sig_data() == buffer3_sig_data_0 and
	t_end(o) ##0 buffer3_sig_opc() == buffer3_sig_opc_0 and
	t_end(o) ##0 buffer3_var_abort() == tmp_buffer_abort_0 and
	t_end(o) ##0 buffer3_var_addr() == tmp_buffer_addr_0 and
	t_end(o) ##0 buffer3_var_data() == tmp_buffer_data_0 and
	t_end(o) ##0 buffer3_var_opc() == tmp_buffer_opc_0 and
	t_end(o) ##0 req_o_sig() == req_o_sig_0 and
	t_end(o) ##0 status1_sig() == status1_sig_0 and
	t_end(o) ##0 status1_var() == status1_var_0 and
	t_end(o) ##0 status2_sig() == status2_sig_0 and
	t_end(o) ##0 status2_var() == status2_var_0 and
	t_end(o) ##0 status3_sig() == status3_sig_0 and
	t_end(o) ##0 status3_var() == req_status and
	t_end(o) ##0 tmp_buffer_abort() == tmp_buffer_abort_0 and
	t_end(o) ##0 tmp_buffer_addr() == tmp_buffer_addr_0 and
	t_end(o) ##0 tmp_buffer_data() == tmp_buffer_data_0 and
	t_end(o) ##0 tmp_buffer_opc() == tmp_buffer_opc_0;
endproperty;
NON_EMPTY_2_read_12_a: assert property (disable iff (reset) NON_EMPTY_2_read_12_p(1));// ASSIGN t_end offset here

property NON_EMPTY_2_read_13_p(o);
bool tmp_buffer_abort_0;
int tmp_buffer_addr_0;
int tmp_buffer_data_0;
opc_t tmp_buffer_opc_0;
bool buffer3_var_abort_0;
int buffer3_var_addr_0;
int buffer3_var_data_0;
opc_t buffer3_var_opc_0;
req_status_t status3_var_0;
bool buffer3_sig_abort_0;
int buffer3_sig_addr_0;
int buffer3_sig_data_0;
opc_t buffer3_sig_opc_0;
bool req_o_sig_0;
req_status_t status1_sig_0;
req_status_t status2_sig_0;
req_status_t status3_sig_0;
bool buffer1_sig_abort_0;
int buffer1_sig_addr_0;
int buffer1_sig_data_0;
opc_t buffer1_sig_opc_0;
bool buffer2_sig_abort_0;
int buffer2_sig_addr_0;
int buffer2_sig_data_0;
opc_t buffer2_sig_opc_0;
// hold
	t ##0 hold(tmp_buffer_abort_0, tmp_buffer_abort()) and
	t ##0 hold(tmp_buffer_addr_0, tmp_buffer_addr()) and
	t ##0 hold(tmp_buffer_data_0, tmp_buffer_data()) and
	t ##0 hold(tmp_buffer_opc_0, tmp_buffer_opc()) and
	t ##0 hold(buffer3_var_abort_0, buffer3_var_abort()) and
	t ##0 hold(buffer3_var_addr_0, buffer3_var_addr()) and
	t ##0 hold(buffer3_var_data_0, buffer3_var_data()) and
	t ##0 hold(buffer3_var_opc_0, buffer3_var_opc()) and
	t ##0 hold(status3_var_0, status3_var()) and
	t ##0 hold(buffer3_sig_abort_0, buffer3_sig_abort()) and
	t ##0 hold(buffer3_sig_addr_0, buffer3_sig_addr()) and
	t ##0 hold(buffer3_sig_data_0, buffer3_sig_data()) and
	t ##0 hold(buffer3_sig_opc_0, buffer3_sig_opc()) and
	t ##0 hold(req_o_sig_0, req_o_sig()) and
	t ##0 hold(status1_sig_0, status1_sig()) and
	t ##0 hold(status2_sig_0, status2_sig()) and
	t ##0 hold(status3_sig_0, status3_sig()) and
	t ##0 hold(buffer1_sig_abort_0, buffer1_sig_abort()) and
	t ##0 hold(buffer1_sig_addr_0, buffer1_sig_addr()) and
	t ##0 hold(buffer1_sig_data_0, buffer1_sig_data()) and
	t ##0 hold(buffer1_sig_opc_0, buffer1_sig_opc()) and
	t ##0 hold(buffer2_sig_abort_0, buffer2_sig_abort()) and
	t ##0 hold(buffer2_sig_addr_0, buffer2_sig_addr()) and
	t ##0 hold(buffer2_sig_data_0, buffer2_sig_data()) and
	t ##0 hold(buffer2_sig_opc_0, buffer2_sig_opc()) and
// Conceptual State
	t ##0 NON_EMPTY_2() and
// trigger
	t ##0 updateQ_i_sync() and
	t ##0 (updateQ_i_sig() == nxt_phase_q) and
	t ##0 (status1_var() == addr_status) and
	t ##0 !((status3_var() == empty_status)) and
	t ##0 (status2_var() == empty_status) and
	t ##0 updateQ_i_sync()
implies
	t_end(o) ##0 NON_EMPTY_2() and
	t_end(o) ##0 buffer1_sig_abort() == buffer1_sig_abort_0 and
	t_end(o) ##0 buffer1_sig_addr() == buffer1_sig_addr_0 and
	t_end(o) ##0 buffer1_sig_data() == buffer1_sig_data_0 and
	t_end(o) ##0 buffer1_sig_opc() == buffer1_sig_opc_0 and
	t_end(o) ##0 buffer2_sig_abort() == buffer2_sig_abort_0 and
	t_end(o) ##0 buffer2_sig_addr() == buffer2_sig_addr_0 and
	t_end(o) ##0 buffer2_sig_data() == buffer2_sig_data_0 and
	t_end(o) ##0 buffer2_sig_opc() == buffer2_sig_opc_0 and
	t_end(o) ##0 buffer2_var_abort() == tmp_buffer_abort_0 and
	t_end(o) ##0 buffer2_var_addr() == tmp_buffer_addr_0 and
	t_end(o) ##0 buffer2_var_data() == tmp_buffer_data_0 and
	t_end(o) ##0 buffer2_var_opc() == tmp_buffer_opc_0 and
	t_end(o) ##0 buffer3_sig_abort() == buffer3_sig_abort_0 and
	t_end(o) ##0 buffer3_sig_addr() == buffer3_sig_addr_0 and
	t_end(o) ##0 buffer3_sig_data() == buffer3_sig_data_0 and
	t_end(o) ##0 buffer3_sig_opc() == buffer3_sig_opc_0 and
	t_end(o) ##0 buffer3_var_abort() == buffer3_var_abort_0 and
	t_end(o) ##0 buffer3_var_addr() == buffer3_var_addr_0 and
	t_end(o) ##0 buffer3_var_data() == buffer3_var_data_0 and
	t_end(o) ##0 buffer3_var_opc() == buffer3_var_opc_0 and
	t_end(o) ##0 req_o_sig() == req_o_sig_0 and
	t_end(o) ##0 status1_sig() == status1_sig_0 and
	t_end(o) ##0 status1_var() == data_staus and
	t_end(o) ##0 status2_sig() == status2_sig_0 and
	t_end(o) ##0 status2_var() == req_status and
	t_end(o) ##0 status3_sig() == status3_sig_0 and
	t_end(o) ##0 status3_var() == status3_var_0 and
	t_end(o) ##0 tmp_buffer_abort() == tmp_buffer_abort_0 and
	t_end(o) ##0 tmp_buffer_addr() == tmp_buffer_addr_0 and
	t_end(o) ##0 tmp_buffer_data() == tmp_buffer_data_0 and
	t_end(o) ##0 tmp_buffer_opc() == tmp_buffer_opc_0;
endproperty;
NON_EMPTY_2_read_13_a: assert property (disable iff (reset) NON_EMPTY_2_read_13_p(1));// ASSIGN t_end offset here

property NON_EMPTY_2_read_14_p(o);
bool buffer2_var_abort_0;
int buffer2_var_addr_0;
int buffer2_var_data_0;
opc_t buffer2_var_opc_0;
bool tmp_buffer_abort_0;
int tmp_buffer_addr_0;
int tmp_buffer_data_0;
opc_t tmp_buffer_opc_0;
req_status_t status2_var_0;
bool buffer3_sig_abort_0;
int buffer3_sig_addr_0;
int buffer3_sig_data_0;
opc_t buffer3_sig_opc_0;
bool req_o_sig_0;
req_status_t status1_sig_0;
req_status_t status2_sig_0;
req_status_t status3_sig_0;
bool buffer1_sig_abort_0;
int buffer1_sig_addr_0;
int buffer1_sig_data_0;
opc_t buffer1_sig_opc_0;
bool buffer2_sig_abort_0;
int buffer2_sig_addr_0;
int buffer2_sig_data_0;
opc_t buffer2_sig_opc_0;
// hold
	t ##0 hold(buffer2_var_abort_0, buffer2_var_abort()) and
	t ##0 hold(buffer2_var_addr_0, buffer2_var_addr()) and
	t ##0 hold(buffer2_var_data_0, buffer2_var_data()) and
	t ##0 hold(buffer2_var_opc_0, buffer2_var_opc()) and
	t ##0 hold(tmp_buffer_abort_0, tmp_buffer_abort()) and
	t ##0 hold(tmp_buffer_addr_0, tmp_buffer_addr()) and
	t ##0 hold(tmp_buffer_data_0, tmp_buffer_data()) and
	t ##0 hold(tmp_buffer_opc_0, tmp_buffer_opc()) and
	t ##0 hold(status2_var_0, status2_var()) and
	t ##0 hold(buffer3_sig_abort_0, buffer3_sig_abort()) and
	t ##0 hold(buffer3_sig_addr_0, buffer3_sig_addr()) and
	t ##0 hold(buffer3_sig_data_0, buffer3_sig_data()) and
	t ##0 hold(buffer3_sig_opc_0, buffer3_sig_opc()) and
	t ##0 hold(req_o_sig_0, req_o_sig()) and
	t ##0 hold(status1_sig_0, status1_sig()) and
	t ##0 hold(status2_sig_0, status2_sig()) and
	t ##0 hold(status3_sig_0, status3_sig()) and
	t ##0 hold(buffer1_sig_abort_0, buffer1_sig_abort()) and
	t ##0 hold(buffer1_sig_addr_0, buffer1_sig_addr()) and
	t ##0 hold(buffer1_sig_data_0, buffer1_sig_data()) and
	t ##0 hold(buffer1_sig_opc_0, buffer1_sig_opc()) and
	t ##0 hold(buffer2_sig_abort_0, buffer2_sig_abort()) and
	t ##0 hold(buffer2_sig_addr_0, buffer2_sig_addr()) and
	t ##0 hold(buffer2_sig_data_0, buffer2_sig_data()) and
	t ##0 hold(buffer2_sig_opc_0, buffer2_sig_opc()) and
// Conceptual State
	t ##0 NON_EMPTY_2() and
// trigger
	t ##0 updateQ_i_sync() and
	t ##0 (updateQ_i_sig() == nxt_phase_q) and
	t ##0 (status1_var() == addr_status) and
	t ##0 !((status3_var() == empty_status)) and
	t ##0 !((status2_var() == empty_status)) and
	t ##0 updateQ_i_sync()
implies
	t_end(o) ##0 NON_EMPTY_2() and
	t_end(o) ##0 buffer1_sig_abort() == buffer1_sig_abort_0 and
	t_end(o) ##0 buffer1_sig_addr() == buffer1_sig_addr_0 and
	t_end(o) ##0 buffer1_sig_data() == buffer1_sig_data_0 and
	t_end(o) ##0 buffer1_sig_opc() == buffer1_sig_opc_0 and
	t_end(o) ##0 buffer2_sig_abort() == buffer2_sig_abort_0 and
	t_end(o) ##0 buffer2_sig_addr() == buffer2_sig_addr_0 and
	t_end(o) ##0 buffer2_sig_data() == buffer2_sig_data_0 and
	t_end(o) ##0 buffer2_sig_opc() == buffer2_sig_opc_0 and
	t_end(o) ##0 buffer2_var_abort() == buffer2_var_abort_0 and
	t_end(o) ##0 buffer2_var_addr() == buffer2_var_addr_0 and
	t_end(o) ##0 buffer2_var_data() == buffer2_var_data_0 and
	t_end(o) ##0 buffer2_var_opc() == buffer2_var_opc_0 and
	t_end(o) ##0 buffer3_sig_abort() == buffer3_sig_abort_0 and
	t_end(o) ##0 buffer3_sig_addr() == buffer3_sig_addr_0 and
	t_end(o) ##0 buffer3_sig_data() == buffer3_sig_data_0 and
	t_end(o) ##0 buffer3_sig_opc() == buffer3_sig_opc_0 and
	t_end(o) ##0 buffer3_var_abort() == tmp_buffer_abort_0 and
	t_end(o) ##0 buffer3_var_addr() == tmp_buffer_addr_0 and
	t_end(o) ##0 buffer3_var_data() == tmp_buffer_data_0 and
	t_end(o) ##0 buffer3_var_opc() == tmp_buffer_opc_0 and
	t_end(o) ##0 req_o_sig() == req_o_sig_0 and
	t_end(o) ##0 status1_sig() == status1_sig_0 and
	t_end(o) ##0 status1_var() == data_staus and
	t_end(o) ##0 status2_sig() == status2_sig_0 and
	t_end(o) ##0 status2_var() == status2_var_0 and
	t_end(o) ##0 status3_sig() == status3_sig_0 and
	t_end(o) ##0 status3_var() == req_status and
	t_end(o) ##0 tmp_buffer_abort() == tmp_buffer_abort_0 and
	t_end(o) ##0 tmp_buffer_addr() == tmp_buffer_addr_0 and
	t_end(o) ##0 tmp_buffer_data() == tmp_buffer_data_0 and
	t_end(o) ##0 tmp_buffer_opc() == tmp_buffer_opc_0;
endproperty;
NON_EMPTY_2_read_14_a: assert property (disable iff (reset) NON_EMPTY_2_read_14_p(1));// ASSIGN t_end offset here

property NON_EMPTY_2_read_15_p(o);
bool tmp_buffer_abort_0;
int tmp_buffer_addr_0;
int tmp_buffer_data_0;
opc_t tmp_buffer_opc_0;
bool buffer3_var_abort_0;
int buffer3_var_addr_0;
int buffer3_var_data_0;
opc_t buffer3_var_opc_0;
req_status_t status3_var_0;
bool buffer3_sig_abort_0;
int buffer3_sig_addr_0;
int buffer3_sig_data_0;
opc_t buffer3_sig_opc_0;
bool req_o_sig_0;
req_status_t status1_sig_0;
req_status_t status2_sig_0;
req_status_t status3_sig_0;
bool buffer1_sig_abort_0;
int buffer1_sig_addr_0;
int buffer1_sig_data_0;
opc_t buffer1_sig_opc_0;
bool buffer2_sig_abort_0;
int buffer2_sig_addr_0;
int buffer2_sig_data_0;
opc_t buffer2_sig_opc_0;
// hold
	t ##0 hold(tmp_buffer_abort_0, tmp_buffer_abort()) and
	t ##0 hold(tmp_buffer_addr_0, tmp_buffer_addr()) and
	t ##0 hold(tmp_buffer_data_0, tmp_buffer_data()) and
	t ##0 hold(tmp_buffer_opc_0, tmp_buffer_opc()) and
	t ##0 hold(buffer3_var_abort_0, buffer3_var_abort()) and
	t ##0 hold(buffer3_var_addr_0, buffer3_var_addr()) and
	t ##0 hold(buffer3_var_data_0, buffer3_var_data()) and
	t ##0 hold(buffer3_var_opc_0, buffer3_var_opc()) and
	t ##0 hold(status3_var_0, status3_var()) and
	t ##0 hold(buffer3_sig_abort_0, buffer3_sig_abort()) and
	t ##0 hold(buffer3_sig_addr_0, buffer3_sig_addr()) and
	t ##0 hold(buffer3_sig_data_0, buffer3_sig_data()) and
	t ##0 hold(buffer3_sig_opc_0, buffer3_sig_opc()) and
	t ##0 hold(req_o_sig_0, req_o_sig()) and
	t ##0 hold(status1_sig_0, status1_sig()) and
	t ##0 hold(status2_sig_0, status2_sig()) and
	t ##0 hold(status3_sig_0, status3_sig()) and
	t ##0 hold(buffer1_sig_abort_0, buffer1_sig_abort()) and
	t ##0 hold(buffer1_sig_addr_0, buffer1_sig_addr()) and
	t ##0 hold(buffer1_sig_data_0, buffer1_sig_data()) and
	t ##0 hold(buffer1_sig_opc_0, buffer1_sig_opc()) and
	t ##0 hold(buffer2_sig_abort_0, buffer2_sig_abort()) and
	t ##0 hold(buffer2_sig_addr_0, buffer2_sig_addr()) and
	t ##0 hold(buffer2_sig_data_0, buffer2_sig_data()) and
	t ##0 hold(buffer2_sig_opc_0, buffer2_sig_opc()) and
// Conceptual State
	t ##0 NON_EMPTY_2() and
// trigger
	t ##0 updateQ_i_sync() and
	t ##0 !((updateQ_i_sig() == nxt_grant_q)) and
	t ##0 !((updateQ_i_sig() == nxt_phase_q)) and
	t ##0 !((updateQ_i_sig() == nxt_btr_q)) and
	t ##0 !((status3_var() == empty_status)) and
	t ##0 (status2_var() == empty_status) and
	t ##0 updateQ_i_sync()
implies
	t_end(o) ##0 NON_EMPTY_2() and
	t_end(o) ##0 buffer1_sig_abort() == buffer1_sig_abort_0 and
	t_end(o) ##0 buffer1_sig_addr() == buffer1_sig_addr_0 and
	t_end(o) ##0 buffer1_sig_data() == buffer1_sig_data_0 and
	t_end(o) ##0 buffer1_sig_opc() == buffer1_sig_opc_0 and
	t_end(o) ##0 buffer2_sig_abort() == buffer2_sig_abort_0 and
	t_end(o) ##0 buffer2_sig_addr() == buffer2_sig_addr_0 and
	t_end(o) ##0 buffer2_sig_data() == buffer2_sig_data_0 and
	t_end(o) ##0 buffer2_sig_opc() == buffer2_sig_opc_0 and
	t_end(o) ##0 buffer2_var_abort() == tmp_buffer_abort_0 and
	t_end(o) ##0 buffer2_var_addr() == tmp_buffer_addr_0 and
	t_end(o) ##0 buffer2_var_data() == tmp_buffer_data_0 and
	t_end(o) ##0 buffer2_var_opc() == tmp_buffer_opc_0 and
	t_end(o) ##0 buffer3_sig_abort() == buffer3_sig_abort_0 and
	t_end(o) ##0 buffer3_sig_addr() == buffer3_sig_addr_0 and
	t_end(o) ##0 buffer3_sig_data() == buffer3_sig_data_0 and
	t_end(o) ##0 buffer3_sig_opc() == buffer3_sig_opc_0 and
	t_end(o) ##0 buffer3_var_abort() == buffer3_var_abort_0 and
	t_end(o) ##0 buffer3_var_addr() == buffer3_var_addr_0 and
	t_end(o) ##0 buffer3_var_data() == buffer3_var_data_0 and
	t_end(o) ##0 buffer3_var_opc() == buffer3_var_opc_0 and
	t_end(o) ##0 req_o_sig() == req_o_sig_0 and
	t_end(o) ##0 status1_sig() == status1_sig_0 and
	t_end(o) ##0 status1_var() == req_status and
	t_end(o) ##0 status2_sig() == status2_sig_0 and
	t_end(o) ##0 status2_var() == req_status and
	t_end(o) ##0 status3_sig() == status3_sig_0 and
	t_end(o) ##0 status3_var() == status3_var_0 and
	t_end(o) ##0 tmp_buffer_abort() == tmp_buffer_abort_0 and
	t_end(o) ##0 tmp_buffer_addr() == tmp_buffer_addr_0 and
	t_end(o) ##0 tmp_buffer_data() == tmp_buffer_data_0 and
	t_end(o) ##0 tmp_buffer_opc() == tmp_buffer_opc_0;
endproperty;
NON_EMPTY_2_read_15_a: assert property (disable iff (reset) NON_EMPTY_2_read_15_p(1));// ASSIGN t_end offset here

property NON_EMPTY_2_read_16_p(o);
bool buffer2_var_abort_0;
int buffer2_var_addr_0;
int buffer2_var_data_0;
opc_t buffer2_var_opc_0;
bool tmp_buffer_abort_0;
int tmp_buffer_addr_0;
int tmp_buffer_data_0;
opc_t tmp_buffer_opc_0;
req_status_t status2_var_0;
bool buffer3_sig_abort_0;
int buffer3_sig_addr_0;
int buffer3_sig_data_0;
opc_t buffer3_sig_opc_0;
bool req_o_sig_0;
req_status_t status1_sig_0;
req_status_t status2_sig_0;
req_status_t status3_sig_0;
bool buffer1_sig_abort_0;
int buffer1_sig_addr_0;
int buffer1_sig_data_0;
opc_t buffer1_sig_opc_0;
bool buffer2_sig_abort_0;
int buffer2_sig_addr_0;
int buffer2_sig_data_0;
opc_t buffer2_sig_opc_0;
// hold
	t ##0 hold(buffer2_var_abort_0, buffer2_var_abort()) and
	t ##0 hold(buffer2_var_addr_0, buffer2_var_addr()) and
	t ##0 hold(buffer2_var_data_0, buffer2_var_data()) and
	t ##0 hold(buffer2_var_opc_0, buffer2_var_opc()) and
	t ##0 hold(tmp_buffer_abort_0, tmp_buffer_abort()) and
	t ##0 hold(tmp_buffer_addr_0, tmp_buffer_addr()) and
	t ##0 hold(tmp_buffer_data_0, tmp_buffer_data()) and
	t ##0 hold(tmp_buffer_opc_0, tmp_buffer_opc()) and
	t ##0 hold(status2_var_0, status2_var()) and
	t ##0 hold(buffer3_sig_abort_0, buffer3_sig_abort()) and
	t ##0 hold(buffer3_sig_addr_0, buffer3_sig_addr()) and
	t ##0 hold(buffer3_sig_data_0, buffer3_sig_data()) and
	t ##0 hold(buffer3_sig_opc_0, buffer3_sig_opc()) and
	t ##0 hold(req_o_sig_0, req_o_sig()) and
	t ##0 hold(status1_sig_0, status1_sig()) and
	t ##0 hold(status2_sig_0, status2_sig()) and
	t ##0 hold(status3_sig_0, status3_sig()) and
	t ##0 hold(buffer1_sig_abort_0, buffer1_sig_abort()) and
	t ##0 hold(buffer1_sig_addr_0, buffer1_sig_addr()) and
	t ##0 hold(buffer1_sig_data_0, buffer1_sig_data()) and
	t ##0 hold(buffer1_sig_opc_0, buffer1_sig_opc()) and
	t ##0 hold(buffer2_sig_abort_0, buffer2_sig_abort()) and
	t ##0 hold(buffer2_sig_addr_0, buffer2_sig_addr()) and
	t ##0 hold(buffer2_sig_data_0, buffer2_sig_data()) and
	t ##0 hold(buffer2_sig_opc_0, buffer2_sig_opc()) and
// Conceptual State
	t ##0 NON_EMPTY_2() and
// trigger
	t ##0 updateQ_i_sync() and
	t ##0 !((updateQ_i_sig() == nxt_grant_q)) and
	t ##0 !((updateQ_i_sig() == nxt_phase_q)) and
	t ##0 !((updateQ_i_sig() == nxt_btr_q)) and
	t ##0 !((status2_var() == addr_status)) and
	t ##0 !((status3_var() == empty_status)) and
	t ##0 !((status2_var() == empty_status)) and
	t ##0 updateQ_i_sync()
implies
	t_end(o) ##0 NON_EMPTY_2() and
	t_end(o) ##0 buffer1_sig_abort() == buffer1_sig_abort_0 and
	t_end(o) ##0 buffer1_sig_addr() == buffer1_sig_addr_0 and
	t_end(o) ##0 buffer1_sig_data() == buffer1_sig_data_0 and
	t_end(o) ##0 buffer1_sig_opc() == buffer1_sig_opc_0 and
	t_end(o) ##0 buffer2_sig_abort() == buffer2_sig_abort_0 and
	t_end(o) ##0 buffer2_sig_addr() == buffer2_sig_addr_0 and
	t_end(o) ##0 buffer2_sig_data() == buffer2_sig_data_0 and
	t_end(o) ##0 buffer2_sig_opc() == buffer2_sig_opc_0 and
	t_end(o) ##0 buffer2_var_abort() == buffer2_var_abort_0 and
	t_end(o) ##0 buffer2_var_addr() == buffer2_var_addr_0 and
	t_end(o) ##0 buffer2_var_data() == buffer2_var_data_0 and
	t_end(o) ##0 buffer2_var_opc() == buffer2_var_opc_0 and
	t_end(o) ##0 buffer3_sig_abort() == buffer3_sig_abort_0 and
	t_end(o) ##0 buffer3_sig_addr() == buffer3_sig_addr_0 and
	t_end(o) ##0 buffer3_sig_data() == buffer3_sig_data_0 and
	t_end(o) ##0 buffer3_sig_opc() == buffer3_sig_opc_0 and
	t_end(o) ##0 buffer3_var_abort() == tmp_buffer_abort_0 and
	t_end(o) ##0 buffer3_var_addr() == tmp_buffer_addr_0 and
	t_end(o) ##0 buffer3_var_data() == tmp_buffer_data_0 and
	t_end(o) ##0 buffer3_var_opc() == tmp_buffer_opc_0 and
	t_end(o) ##0 req_o_sig() == req_o_sig_0 and
	t_end(o) ##0 status1_sig() == status1_sig_0 and
	t_end(o) ##0 status1_var() == req_status and
	t_end(o) ##0 status2_sig() == status2_sig_0 and
	t_end(o) ##0 status2_var() == status2_var_0 and
	t_end(o) ##0 status3_sig() == status3_sig_0 and
	t_end(o) ##0 status3_var() == req_status and
	t_end(o) ##0 tmp_buffer_abort() == tmp_buffer_abort_0 and
	t_end(o) ##0 tmp_buffer_addr() == tmp_buffer_addr_0 and
	t_end(o) ##0 tmp_buffer_data() == tmp_buffer_data_0 and
	t_end(o) ##0 tmp_buffer_opc() == tmp_buffer_opc_0;
endproperty;
NON_EMPTY_2_read_16_a: assert property (disable iff (reset) NON_EMPTY_2_read_16_p(1));// ASSIGN t_end offset here

property NON_EMPTY_2_read_17_p(o);
bool buffer2_var_abort_0;
int buffer2_var_addr_0;
int buffer2_var_data_0;
opc_t buffer2_var_opc_0;
bool tmp_buffer_abort_0;
int tmp_buffer_addr_0;
int tmp_buffer_data_0;
opc_t tmp_buffer_opc_0;
bool buffer3_sig_abort_0;
int buffer3_sig_addr_0;
int buffer3_sig_data_0;
opc_t buffer3_sig_opc_0;
bool req_o_sig_0;
req_status_t status1_sig_0;
req_status_t status2_sig_0;
req_status_t status3_sig_0;
bool buffer1_sig_abort_0;
int buffer1_sig_addr_0;
int buffer1_sig_data_0;
opc_t buffer1_sig_opc_0;
bool buffer2_sig_abort_0;
int buffer2_sig_addr_0;
int buffer2_sig_data_0;
opc_t buffer2_sig_opc_0;
// hold
	t ##0 hold(buffer2_var_abort_0, buffer2_var_abort()) and
	t ##0 hold(buffer2_var_addr_0, buffer2_var_addr()) and
	t ##0 hold(buffer2_var_data_0, buffer2_var_data()) and
	t ##0 hold(buffer2_var_opc_0, buffer2_var_opc()) and
	t ##0 hold(tmp_buffer_abort_0, tmp_buffer_abort()) and
	t ##0 hold(tmp_buffer_addr_0, tmp_buffer_addr()) and
	t ##0 hold(tmp_buffer_data_0, tmp_buffer_data()) and
	t ##0 hold(tmp_buffer_opc_0, tmp_buffer_opc()) and
	t ##0 hold(buffer3_sig_abort_0, buffer3_sig_abort()) and
	t ##0 hold(buffer3_sig_addr_0, buffer3_sig_addr()) and
	t ##0 hold(buffer3_sig_data_0, buffer3_sig_data()) and
	t ##0 hold(buffer3_sig_opc_0, buffer3_sig_opc()) and
	t ##0 hold(req_o_sig_0, req_o_sig()) and
	t ##0 hold(status1_sig_0, status1_sig()) and
	t ##0 hold(status2_sig_0, status2_sig()) and
	t ##0 hold(status3_sig_0, status3_sig()) and
	t ##0 hold(buffer1_sig_abort_0, buffer1_sig_abort()) and
	t ##0 hold(buffer1_sig_addr_0, buffer1_sig_addr()) and
	t ##0 hold(buffer1_sig_data_0, buffer1_sig_data()) and
	t ##0 hold(buffer1_sig_opc_0, buffer1_sig_opc()) and
	t ##0 hold(buffer2_sig_abort_0, buffer2_sig_abort()) and
	t ##0 hold(buffer2_sig_addr_0, buffer2_sig_addr()) and
	t ##0 hold(buffer2_sig_data_0, buffer2_sig_data()) and
	t ##0 hold(buffer2_sig_opc_0, buffer2_sig_opc()) and
// Conceptual State
	t ##0 NON_EMPTY_2() and
// trigger
	t ##0 updateQ_i_sync() and
	t ##0 (updateQ_i_sig() == nxt_grant_q) and
	t ##0 !((status1_var() == req_status)) and
	t ##0 (status2_var() == req_status) and
	t ##0 !((status1_var() == data_staus)) and
	t ##0 !((status3_var() == empty_status)) and
	t ##0 updateQ_i_sync()
implies
	t_end(o) ##0 NON_EMPTY_2() and
	t_end(o) ##0 buffer1_sig_abort() == buffer1_sig_abort_0 and
	t_end(o) ##0 buffer1_sig_addr() == buffer1_sig_addr_0 and
	t_end(o) ##0 buffer1_sig_data() == buffer1_sig_data_0 and
	t_end(o) ##0 buffer1_sig_opc() == buffer1_sig_opc_0 and
	t_end(o) ##0 buffer2_sig_abort() == buffer2_sig_abort_0 and
	t_end(o) ##0 buffer2_sig_addr() == buffer2_sig_addr_0 and
	t_end(o) ##0 buffer2_sig_data() == buffer2_sig_data_0 and
	t_end(o) ##0 buffer2_sig_opc() == buffer2_sig_opc_0 and
	t_end(o) ##0 buffer2_var_abort() == buffer2_var_abort_0 and
	t_end(o) ##0 buffer2_var_addr() == buffer2_var_addr_0 and
	t_end(o) ##0 buffer2_var_data() == buffer2_var_data_0 and
	t_end(o) ##0 buffer2_var_opc() == buffer2_var_opc_0 and
	t_end(o) ##0 buffer3_sig_abort() == buffer3_sig_abort_0 and
	t_end(o) ##0 buffer3_sig_addr() == buffer3_sig_addr_0 and
	t_end(o) ##0 buffer3_sig_data() == buffer3_sig_data_0 and
	t_end(o) ##0 buffer3_sig_opc() == buffer3_sig_opc_0 and
	t_end(o) ##0 buffer3_var_abort() == tmp_buffer_abort_0 and
	t_end(o) ##0 buffer3_var_addr() == tmp_buffer_addr_0 and
	t_end(o) ##0 buffer3_var_data() == tmp_buffer_data_0 and
	t_end(o) ##0 buffer3_var_opc() == tmp_buffer_opc_0 and
	t_end(o) ##0 req_o_sig() == req_o_sig_0 and
	t_end(o) ##0 status1_sig() == status1_sig_0 and
	t_end(o) ##0 status1_var() == data_staus and
	t_end(o) ##0 status2_sig() == status2_sig_0 and
	t_end(o) ##0 status2_var() == addr_status and
	t_end(o) ##0 status3_sig() == status3_sig_0 and
	t_end(o) ##0 status3_var() == req_status and
	t_end(o) ##0 tmp_buffer_abort() == tmp_buffer_abort_0 and
	t_end(o) ##0 tmp_buffer_addr() == tmp_buffer_addr_0 and
	t_end(o) ##0 tmp_buffer_data() == tmp_buffer_data_0 and
	t_end(o) ##0 tmp_buffer_opc() == tmp_buffer_opc_0;
endproperty;
NON_EMPTY_2_read_17_a: assert property (disable iff (reset) NON_EMPTY_2_read_17_p(1));// ASSIGN t_end offset here

property NON_EMPTY_2_read_18_p(o);
bool buffer2_var_abort_0;
int buffer2_var_addr_0;
int buffer2_var_data_0;
opc_t buffer2_var_opc_0;
bool tmp_buffer_abort_0;
int tmp_buffer_addr_0;
int tmp_buffer_data_0;
opc_t tmp_buffer_opc_0;
bool buffer3_sig_abort_0;
int buffer3_sig_addr_0;
int buffer3_sig_data_0;
opc_t buffer3_sig_opc_0;
bool req_o_sig_0;
req_status_t status1_sig_0;
req_status_t status2_sig_0;
req_status_t status3_sig_0;
bool buffer1_sig_abort_0;
int buffer1_sig_addr_0;
int buffer1_sig_data_0;
opc_t buffer1_sig_opc_0;
bool buffer2_sig_abort_0;
int buffer2_sig_addr_0;
int buffer2_sig_data_0;
opc_t buffer2_sig_opc_0;
// hold
	t ##0 hold(buffer2_var_abort_0, buffer2_var_abort()) and
	t ##0 hold(buffer2_var_addr_0, buffer2_var_addr()) and
	t ##0 hold(buffer2_var_data_0, buffer2_var_data()) and
	t ##0 hold(buffer2_var_opc_0, buffer2_var_opc()) and
	t ##0 hold(tmp_buffer_abort_0, tmp_buffer_abort()) and
	t ##0 hold(tmp_buffer_addr_0, tmp_buffer_addr()) and
	t ##0 hold(tmp_buffer_data_0, tmp_buffer_data()) and
	t ##0 hold(tmp_buffer_opc_0, tmp_buffer_opc()) and
	t ##0 hold(buffer3_sig_abort_0, buffer3_sig_abort()) and
	t ##0 hold(buffer3_sig_addr_0, buffer3_sig_addr()) and
	t ##0 hold(buffer3_sig_data_0, buffer3_sig_data()) and
	t ##0 hold(buffer3_sig_opc_0, buffer3_sig_opc()) and
	t ##0 hold(req_o_sig_0, req_o_sig()) and
	t ##0 hold(status1_sig_0, status1_sig()) and
	t ##0 hold(status2_sig_0, status2_sig()) and
	t ##0 hold(status3_sig_0, status3_sig()) and
	t ##0 hold(buffer1_sig_abort_0, buffer1_sig_abort()) and
	t ##0 hold(buffer1_sig_addr_0, buffer1_sig_addr()) and
	t ##0 hold(buffer1_sig_data_0, buffer1_sig_data()) and
	t ##0 hold(buffer1_sig_opc_0, buffer1_sig_opc()) and
	t ##0 hold(buffer2_sig_abort_0, buffer2_sig_abort()) and
	t ##0 hold(buffer2_sig_addr_0, buffer2_sig_addr()) and
	t ##0 hold(buffer2_sig_data_0, buffer2_sig_data()) and
	t ##0 hold(buffer2_sig_opc_0, buffer2_sig_opc()) and
// Conceptual State
	t ##0 NON_EMPTY_2() and
// trigger
	t ##0 updateQ_i_sync() and
	t ##0 !((updateQ_i_sig() == nxt_grant_q)) and
	t ##0 !((updateQ_i_sig() == nxt_phase_q)) and
	t ##0 !((updateQ_i_sig() == nxt_btr_q)) and
	t ##0 (status2_var() == addr_status) and
	t ##0 !((status3_var() == empty_status)) and
	t ##0 updateQ_i_sync()
implies
	t_end(o) ##0 NON_EMPTY_2() and
	t_end(o) ##0 buffer1_sig_abort() == buffer1_sig_abort_0 and
	t_end(o) ##0 buffer1_sig_addr() == buffer1_sig_addr_0 and
	t_end(o) ##0 buffer1_sig_data() == buffer1_sig_data_0 and
	t_end(o) ##0 buffer1_sig_opc() == buffer1_sig_opc_0 and
	t_end(o) ##0 buffer2_sig_abort() == buffer2_sig_abort_0 and
	t_end(o) ##0 buffer2_sig_addr() == buffer2_sig_addr_0 and
	t_end(o) ##0 buffer2_sig_data() == buffer2_sig_data_0 and
	t_end(o) ##0 buffer2_sig_opc() == buffer2_sig_opc_0 and
	t_end(o) ##0 buffer2_var_abort() == buffer2_var_abort_0 and
	t_end(o) ##0 buffer2_var_addr() == buffer2_var_addr_0 and
	t_end(o) ##0 buffer2_var_data() == buffer2_var_data_0 and
	t_end(o) ##0 buffer2_var_opc() == buffer2_var_opc_0 and
	t_end(o) ##0 buffer3_sig_abort() == buffer3_sig_abort_0 and
	t_end(o) ##0 buffer3_sig_addr() == buffer3_sig_addr_0 and
	t_end(o) ##0 buffer3_sig_data() == buffer3_sig_data_0 and
	t_end(o) ##0 buffer3_sig_opc() == buffer3_sig_opc_0 and
	t_end(o) ##0 buffer3_var_abort() == tmp_buffer_abort_0 and
	t_end(o) ##0 buffer3_var_addr() == tmp_buffer_addr_0 and
	t_end(o) ##0 buffer3_var_data() == tmp_buffer_data_0 and
	t_end(o) ##0 buffer3_var_opc() == tmp_buffer_opc_0 and
	t_end(o) ##0 req_o_sig() == req_o_sig_0 and
	t_end(o) ##0 status1_sig() == status1_sig_0 and
	t_end(o) ##0 status1_var() == req_status and
	t_end(o) ##0 status2_sig() == status2_sig_0 and
	t_end(o) ##0 status2_var() == req_status and
	t_end(o) ##0 status3_sig() == status3_sig_0 and
	t_end(o) ##0 status3_var() == req_status and
	t_end(o) ##0 tmp_buffer_abort() == tmp_buffer_abort_0 and
	t_end(o) ##0 tmp_buffer_addr() == tmp_buffer_addr_0 and
	t_end(o) ##0 tmp_buffer_data() == tmp_buffer_data_0 and
	t_end(o) ##0 tmp_buffer_opc() == tmp_buffer_opc_0;
endproperty;
NON_EMPTY_2_read_18_a: assert property (disable iff (reset) NON_EMPTY_2_read_18_p(1));// ASSIGN t_end offset here

property NON_EMPTY_2_read_19_p(o);
bool buffer2_var_abort_0;
int buffer2_var_addr_0;
int buffer2_var_data_0;
opc_t buffer2_var_opc_0;
bool buffer3_var_abort_0;
int buffer3_var_addr_0;
int buffer3_var_data_0;
opc_t buffer3_var_opc_0;
req_status_t status2_var_0;
req_status_t status3_var_0;
bool peripheral_request_i_sig_abort_0;
int peripheral_request_i_sig_addr_0;
int peripheral_request_i_sig_data_0;
opc_t peripheral_request_i_sig_opc_0;
bool buffer3_sig_abort_0;
int buffer3_sig_addr_0;
int buffer3_sig_data_0;
opc_t buffer3_sig_opc_0;
bool req_o_sig_0;
req_status_t status1_sig_0;
req_status_t status2_sig_0;
req_status_t status3_sig_0;
bool buffer1_sig_abort_0;
int buffer1_sig_addr_0;
int buffer1_sig_data_0;
opc_t buffer1_sig_opc_0;
bool buffer2_sig_abort_0;
int buffer2_sig_addr_0;
int buffer2_sig_data_0;
opc_t buffer2_sig_opc_0;
// hold
	t ##0 hold(buffer2_var_abort_0, buffer2_var_abort()) and
	t ##0 hold(buffer2_var_addr_0, buffer2_var_addr()) and
	t ##0 hold(buffer2_var_data_0, buffer2_var_data()) and
	t ##0 hold(buffer2_var_opc_0, buffer2_var_opc()) and
	t ##0 hold(buffer3_var_abort_0, buffer3_var_abort()) and
	t ##0 hold(buffer3_var_addr_0, buffer3_var_addr()) and
	t ##0 hold(buffer3_var_data_0, buffer3_var_data()) and
	t ##0 hold(buffer3_var_opc_0, buffer3_var_opc()) and
	t ##0 hold(status2_var_0, status2_var()) and
	t ##0 hold(status3_var_0, status3_var()) and
	t ##0 hold(peripheral_request_i_sig_abort_0, peripheral_request_i_sig_abort()) and
	t ##0 hold(peripheral_request_i_sig_addr_0, peripheral_request_i_sig_addr()) and
	t ##0 hold(peripheral_request_i_sig_data_0, peripheral_request_i_sig_data()) and
	t ##0 hold(peripheral_request_i_sig_opc_0, peripheral_request_i_sig_opc()) and
	t ##0 hold(buffer3_sig_abort_0, buffer3_sig_abort()) and
	t ##0 hold(buffer3_sig_addr_0, buffer3_sig_addr()) and
	t ##0 hold(buffer3_sig_data_0, buffer3_sig_data()) and
	t ##0 hold(buffer3_sig_opc_0, buffer3_sig_opc()) and
	t ##0 hold(req_o_sig_0, req_o_sig()) and
	t ##0 hold(status1_sig_0, status1_sig()) and
	t ##0 hold(status2_sig_0, status2_sig()) and
	t ##0 hold(status3_sig_0, status3_sig()) and
	t ##0 hold(buffer1_sig_abort_0, buffer1_sig_abort()) and
	t ##0 hold(buffer1_sig_addr_0, buffer1_sig_addr()) and
	t ##0 hold(buffer1_sig_data_0, buffer1_sig_data()) and
	t ##0 hold(buffer1_sig_opc_0, buffer1_sig_opc()) and
	t ##0 hold(buffer2_sig_abort_0, buffer2_sig_abort()) and
	t ##0 hold(buffer2_sig_addr_0, buffer2_sig_addr()) and
	t ##0 hold(buffer2_sig_data_0, buffer2_sig_data()) and
	t ##0 hold(buffer2_sig_opc_0, buffer2_sig_opc()) and
// Conceptual State
	t ##0 NON_EMPTY_2() and
// trigger
	t ##0 (status3_var() == empty_status) and
	t ##0 (status1_var() == empty_status) and
	t ##0 !(updateQ_i_sync())
implies
	t_end(o) ##0 NON_EMPTY_2() and
	t_end(o) ##0 buffer1_sig_abort() == buffer1_sig_abort_0 and
	t_end(o) ##0 buffer1_sig_addr() == buffer1_sig_addr_0 and
	t_end(o) ##0 buffer1_sig_data() == buffer1_sig_data_0 and
	t_end(o) ##0 buffer1_sig_opc() == buffer1_sig_opc_0 and
	t_end(o) ##0 buffer2_sig_abort() == buffer2_sig_abort_0 and
	t_end(o) ##0 buffer2_sig_addr() == buffer2_sig_addr_0 and
	t_end(o) ##0 buffer2_sig_data() == buffer2_sig_data_0 and
	t_end(o) ##0 buffer2_sig_opc() == buffer2_sig_opc_0 and
	t_end(o) ##0 buffer2_var_abort() == buffer2_var_abort_0 and
	t_end(o) ##0 buffer2_var_addr() == buffer2_var_addr_0 and
	t_end(o) ##0 buffer2_var_data() == buffer2_var_data_0 and
	t_end(o) ##0 buffer2_var_opc() == buffer2_var_opc_0 and
	t_end(o) ##0 buffer3_sig_abort() == buffer3_sig_abort_0 and
	t_end(o) ##0 buffer3_sig_addr() == buffer3_sig_addr_0 and
	t_end(o) ##0 buffer3_sig_data() == buffer3_sig_data_0 and
	t_end(o) ##0 buffer3_sig_opc() == buffer3_sig_opc_0 and
	t_end(o) ##0 buffer3_var_abort() == buffer3_var_abort_0 and
	t_end(o) ##0 buffer3_var_addr() == buffer3_var_addr_0 and
	t_end(o) ##0 buffer3_var_data() == buffer3_var_data_0 and
	t_end(o) ##0 buffer3_var_opc() == buffer3_var_opc_0 and
	t_end(o) ##0 req_o_sig() == req_o_sig_0 and
	t_end(o) ##0 status1_sig() == status1_sig_0 and
	t_end(o) ##0 status1_var() == req_status and
	t_end(o) ##0 status2_sig() == status2_sig_0 and
	t_end(o) ##0 status2_var() == status2_var_0 and
	t_end(o) ##0 status3_sig() == status3_sig_0 and
	t_end(o) ##0 status3_var() == status3_var_0 and
	t_end(o) ##0 tmp_buffer_abort() == peripheral_request_i_sig_abort_0 and
	t_end(o) ##0 tmp_buffer_addr() == peripheral_request_i_sig_addr_0 and
	t_end(o) ##0 tmp_buffer_data() == peripheral_request_i_sig_data_0 and
	t_end(o) ##0 tmp_buffer_opc() == peripheral_request_i_sig_opc_0;
endproperty;
NON_EMPTY_2_read_19_a: assert property (disable iff (reset) NON_EMPTY_2_read_19_p(1));// ASSIGN t_end offset here

property NON_EMPTY_2_read_20_p(o);
bool buffer3_var_abort_0;
int buffer3_var_addr_0;
int buffer3_var_data_0;
opc_t buffer3_var_opc_0;
req_status_t status1_var_0;
req_status_t status3_var_0;
bool peripheral_request_i_sig_abort_0;
int peripheral_request_i_sig_addr_0;
int peripheral_request_i_sig_data_0;
opc_t peripheral_request_i_sig_opc_0;
bool buffer3_sig_abort_0;
int buffer3_sig_addr_0;
int buffer3_sig_data_0;
opc_t buffer3_sig_opc_0;
bool req_o_sig_0;
req_status_t status1_sig_0;
req_status_t status2_sig_0;
req_status_t status3_sig_0;
bool buffer1_sig_abort_0;
int buffer1_sig_addr_0;
int buffer1_sig_data_0;
opc_t buffer1_sig_opc_0;
bool buffer2_sig_abort_0;
int buffer2_sig_addr_0;
int buffer2_sig_data_0;
opc_t buffer2_sig_opc_0;
// hold
	t ##0 hold(buffer3_var_abort_0, buffer3_var_abort()) and
	t ##0 hold(buffer3_var_addr_0, buffer3_var_addr()) and
	t ##0 hold(buffer3_var_data_0, buffer3_var_data()) and
	t ##0 hold(buffer3_var_opc_0, buffer3_var_opc()) and
	t ##0 hold(status1_var_0, status1_var()) and
	t ##0 hold(status3_var_0, status3_var()) and
	t ##0 hold(peripheral_request_i_sig_abort_0, peripheral_request_i_sig_abort()) and
	t ##0 hold(peripheral_request_i_sig_addr_0, peripheral_request_i_sig_addr()) and
	t ##0 hold(peripheral_request_i_sig_data_0, peripheral_request_i_sig_data()) and
	t ##0 hold(peripheral_request_i_sig_opc_0, peripheral_request_i_sig_opc()) and
	t ##0 hold(buffer3_sig_abort_0, buffer3_sig_abort()) and
	t ##0 hold(buffer3_sig_addr_0, buffer3_sig_addr()) and
	t ##0 hold(buffer3_sig_data_0, buffer3_sig_data()) and
	t ##0 hold(buffer3_sig_opc_0, buffer3_sig_opc()) and
	t ##0 hold(req_o_sig_0, req_o_sig()) and
	t ##0 hold(status1_sig_0, status1_sig()) and
	t ##0 hold(status2_sig_0, status2_sig()) and
	t ##0 hold(status3_sig_0, status3_sig()) and
	t ##0 hold(buffer1_sig_abort_0, buffer1_sig_abort()) and
	t ##0 hold(buffer1_sig_addr_0, buffer1_sig_addr()) and
	t ##0 hold(buffer1_sig_data_0, buffer1_sig_data()) and
	t ##0 hold(buffer1_sig_opc_0, buffer1_sig_opc()) and
	t ##0 hold(buffer2_sig_abort_0, buffer2_sig_abort()) and
	t ##0 hold(buffer2_sig_addr_0, buffer2_sig_addr()) and
	t ##0 hold(buffer2_sig_data_0, buffer2_sig_data()) and
	t ##0 hold(buffer2_sig_opc_0, buffer2_sig_opc()) and
// Conceptual State
	t ##0 NON_EMPTY_2() and
// trigger
	t ##0 (status3_var() == empty_status) and
	t ##0 !((status1_var() == empty_status)) and
	t ##0 (status2_var() == empty_status) and
	t ##0 !(updateQ_i_sync())
implies
	t_end(o) ##0 NON_EMPTY_2() and
	t_end(o) ##0 buffer1_sig_abort() == buffer1_sig_abort_0 and
	t_end(o) ##0 buffer1_sig_addr() == buffer1_sig_addr_0 and
	t_end(o) ##0 buffer1_sig_data() == buffer1_sig_data_0 and
	t_end(o) ##0 buffer1_sig_opc() == buffer1_sig_opc_0 and
	t_end(o) ##0 buffer2_sig_abort() == buffer2_sig_abort_0 and
	t_end(o) ##0 buffer2_sig_addr() == buffer2_sig_addr_0 and
	t_end(o) ##0 buffer2_sig_data() == buffer2_sig_data_0 and
	t_end(o) ##0 buffer2_sig_opc() == buffer2_sig_opc_0 and
	t_end(o) ##0 buffer2_var_abort() == peripheral_request_i_sig_abort_0 and
	t_end(o) ##0 buffer2_var_addr() == peripheral_request_i_sig_addr_0 and
	t_end(o) ##0 buffer2_var_data() == peripheral_request_i_sig_data_0 and
	t_end(o) ##0 buffer2_var_opc() == peripheral_request_i_sig_opc_0 and
	t_end(o) ##0 buffer3_sig_abort() == buffer3_sig_abort_0 and
	t_end(o) ##0 buffer3_sig_addr() == buffer3_sig_addr_0 and
	t_end(o) ##0 buffer3_sig_data() == buffer3_sig_data_0 and
	t_end(o) ##0 buffer3_sig_opc() == buffer3_sig_opc_0 and
	t_end(o) ##0 buffer3_var_abort() == buffer3_var_abort_0 and
	t_end(o) ##0 buffer3_var_addr() == buffer3_var_addr_0 and
	t_end(o) ##0 buffer3_var_data() == buffer3_var_data_0 and
	t_end(o) ##0 buffer3_var_opc() == buffer3_var_opc_0 and
	t_end(o) ##0 req_o_sig() == req_o_sig_0 and
	t_end(o) ##0 status1_sig() == status1_sig_0 and
	t_end(o) ##0 status1_var() == status1_var_0 and
	t_end(o) ##0 status2_sig() == status2_sig_0 and
	t_end(o) ##0 status2_var() == req_status and
	t_end(o) ##0 status3_sig() == status3_sig_0 and
	t_end(o) ##0 status3_var() == status3_var_0 and
	t_end(o) ##0 tmp_buffer_abort() == peripheral_request_i_sig_abort_0 and
	t_end(o) ##0 tmp_buffer_addr() == peripheral_request_i_sig_addr_0 and
	t_end(o) ##0 tmp_buffer_data() == peripheral_request_i_sig_data_0 and
	t_end(o) ##0 tmp_buffer_opc() == peripheral_request_i_sig_opc_0;
endproperty;
NON_EMPTY_2_read_20_a: assert property (disable iff (reset) NON_EMPTY_2_read_20_p(1));// ASSIGN t_end offset here

property NON_EMPTY_2_read_21_p(o);
bool buffer2_var_abort_0;
int buffer2_var_addr_0;
int buffer2_var_data_0;
opc_t buffer2_var_opc_0;
req_status_t status1_var_0;
req_status_t status2_var_0;
bool peripheral_request_i_sig_abort_0;
int peripheral_request_i_sig_addr_0;
int peripheral_request_i_sig_data_0;
opc_t peripheral_request_i_sig_opc_0;
bool buffer3_sig_abort_0;
int buffer3_sig_addr_0;
int buffer3_sig_data_0;
opc_t buffer3_sig_opc_0;
bool req_o_sig_0;
req_status_t status1_sig_0;
req_status_t status2_sig_0;
req_status_t status3_sig_0;
bool buffer1_sig_abort_0;
int buffer1_sig_addr_0;
int buffer1_sig_data_0;
opc_t buffer1_sig_opc_0;
bool buffer2_sig_abort_0;
int buffer2_sig_addr_0;
int buffer2_sig_data_0;
opc_t buffer2_sig_opc_0;
// hold
	t ##0 hold(buffer2_var_abort_0, buffer2_var_abort()) and
	t ##0 hold(buffer2_var_addr_0, buffer2_var_addr()) and
	t ##0 hold(buffer2_var_data_0, buffer2_var_data()) and
	t ##0 hold(buffer2_var_opc_0, buffer2_var_opc()) and
	t ##0 hold(status1_var_0, status1_var()) and
	t ##0 hold(status2_var_0, status2_var()) and
	t ##0 hold(peripheral_request_i_sig_abort_0, peripheral_request_i_sig_abort()) and
	t ##0 hold(peripheral_request_i_sig_addr_0, peripheral_request_i_sig_addr()) and
	t ##0 hold(peripheral_request_i_sig_data_0, peripheral_request_i_sig_data()) and
	t ##0 hold(peripheral_request_i_sig_opc_0, peripheral_request_i_sig_opc()) and
	t ##0 hold(buffer3_sig_abort_0, buffer3_sig_abort()) and
	t ##0 hold(buffer3_sig_addr_0, buffer3_sig_addr()) and
	t ##0 hold(buffer3_sig_data_0, buffer3_sig_data()) and
	t ##0 hold(buffer3_sig_opc_0, buffer3_sig_opc()) and
	t ##0 hold(req_o_sig_0, req_o_sig()) and
	t ##0 hold(status1_sig_0, status1_sig()) and
	t ##0 hold(status2_sig_0, status2_sig()) and
	t ##0 hold(status3_sig_0, status3_sig()) and
	t ##0 hold(buffer1_sig_abort_0, buffer1_sig_abort()) and
	t ##0 hold(buffer1_sig_addr_0, buffer1_sig_addr()) and
	t ##0 hold(buffer1_sig_data_0, buffer1_sig_data()) and
	t ##0 hold(buffer1_sig_opc_0, buffer1_sig_opc()) and
	t ##0 hold(buffer2_sig_abort_0, buffer2_sig_abort()) and
	t ##0 hold(buffer2_sig_addr_0, buffer2_sig_addr()) and
	t ##0 hold(buffer2_sig_data_0, buffer2_sig_data()) and
	t ##0 hold(buffer2_sig_opc_0, buffer2_sig_opc()) and
// Conceptual State
	t ##0 NON_EMPTY_2() and
// trigger
	t ##0 (status3_var() == empty_status) and
	t ##0 !((status1_var() == empty_status)) and
	t ##0 !((status2_var() == empty_status)) and
	t ##0 !(updateQ_i_sync())
implies
	t_end(o) ##0 NON_EMPTY_2() and
	t_end(o) ##0 buffer1_sig_abort() == buffer1_sig_abort_0 and
	t_end(o) ##0 buffer1_sig_addr() == buffer1_sig_addr_0 and
	t_end(o) ##0 buffer1_sig_data() == buffer1_sig_data_0 and
	t_end(o) ##0 buffer1_sig_opc() == buffer1_sig_opc_0 and
	t_end(o) ##0 buffer2_sig_abort() == buffer2_sig_abort_0 and
	t_end(o) ##0 buffer2_sig_addr() == buffer2_sig_addr_0 and
	t_end(o) ##0 buffer2_sig_data() == buffer2_sig_data_0 and
	t_end(o) ##0 buffer2_sig_opc() == buffer2_sig_opc_0 and
	t_end(o) ##0 buffer2_var_abort() == buffer2_var_abort_0 and
	t_end(o) ##0 buffer2_var_addr() == buffer2_var_addr_0 and
	t_end(o) ##0 buffer2_var_data() == buffer2_var_data_0 and
	t_end(o) ##0 buffer2_var_opc() == buffer2_var_opc_0 and
	t_end(o) ##0 buffer3_sig_abort() == buffer3_sig_abort_0 and
	t_end(o) ##0 buffer3_sig_addr() == buffer3_sig_addr_0 and
	t_end(o) ##0 buffer3_sig_data() == buffer3_sig_data_0 and
	t_end(o) ##0 buffer3_sig_opc() == buffer3_sig_opc_0 and
	t_end(o) ##0 buffer3_var_abort() == peripheral_request_i_sig_abort_0 and
	t_end(o) ##0 buffer3_var_addr() == peripheral_request_i_sig_addr_0 and
	t_end(o) ##0 buffer3_var_data() == peripheral_request_i_sig_data_0 and
	t_end(o) ##0 buffer3_var_opc() == peripheral_request_i_sig_opc_0 and
	t_end(o) ##0 req_o_sig() == req_o_sig_0 and
	t_end(o) ##0 status1_sig() == status1_sig_0 and
	t_end(o) ##0 status1_var() == status1_var_0 and
	t_end(o) ##0 status2_sig() == status2_sig_0 and
	t_end(o) ##0 status2_var() == status2_var_0 and
	t_end(o) ##0 status3_sig() == status3_sig_0 and
	t_end(o) ##0 status3_var() == req_status and
	t_end(o) ##0 tmp_buffer_abort() == peripheral_request_i_sig_abort_0 and
	t_end(o) ##0 tmp_buffer_addr() == peripheral_request_i_sig_addr_0 and
	t_end(o) ##0 tmp_buffer_data() == peripheral_request_i_sig_data_0 and
	t_end(o) ##0 tmp_buffer_opc() == peripheral_request_i_sig_opc_0;
endproperty;
NON_EMPTY_2_read_21_a: assert property (disable iff (reset) NON_EMPTY_2_read_21_p(1));// ASSIGN t_end offset here

property NON_EMPTY_2_read_22_p(o);
bool buffer3_var_abort_0;
int buffer3_var_addr_0;
int buffer3_var_data_0;
opc_t buffer3_var_opc_0;
req_status_t status3_var_0;
bool peripheral_request_i_sig_abort_0;
int peripheral_request_i_sig_addr_0;
int peripheral_request_i_sig_data_0;
opc_t peripheral_request_i_sig_opc_0;
bool buffer3_sig_abort_0;
int buffer3_sig_addr_0;
int buffer3_sig_data_0;
opc_t buffer3_sig_opc_0;
bool req_o_sig_0;
req_status_t status1_sig_0;
req_status_t status2_sig_0;
req_status_t status3_sig_0;
bool buffer1_sig_abort_0;
int buffer1_sig_addr_0;
int buffer1_sig_data_0;
opc_t buffer1_sig_opc_0;
bool buffer2_sig_abort_0;
int buffer2_sig_addr_0;
int buffer2_sig_data_0;
opc_t buffer2_sig_opc_0;
// hold
	t ##0 hold(buffer3_var_abort_0, buffer3_var_abort()) and
	t ##0 hold(buffer3_var_addr_0, buffer3_var_addr()) and
	t ##0 hold(buffer3_var_data_0, buffer3_var_data()) and
	t ##0 hold(buffer3_var_opc_0, buffer3_var_opc()) and
	t ##0 hold(status3_var_0, status3_var()) and
	t ##0 hold(peripheral_request_i_sig_abort_0, peripheral_request_i_sig_abort()) and
	t ##0 hold(peripheral_request_i_sig_addr_0, peripheral_request_i_sig_addr()) and
	t ##0 hold(peripheral_request_i_sig_data_0, peripheral_request_i_sig_data()) and
	t ##0 hold(peripheral_request_i_sig_opc_0, peripheral_request_i_sig_opc()) and
	t ##0 hold(buffer3_sig_abort_0, buffer3_sig_abort()) and
	t ##0 hold(buffer3_sig_addr_0, buffer3_sig_addr()) and
	t ##0 hold(buffer3_sig_data_0, buffer3_sig_data()) and
	t ##0 hold(buffer3_sig_opc_0, buffer3_sig_opc()) and
	t ##0 hold(req_o_sig_0, req_o_sig()) and
	t ##0 hold(status1_sig_0, status1_sig()) and
	t ##0 hold(status2_sig_0, status2_sig()) and
	t ##0 hold(status3_sig_0, status3_sig()) and
	t ##0 hold(buffer1_sig_abort_0, buffer1_sig_abort()) and
	t ##0 hold(buffer1_sig_addr_0, buffer1_sig_addr()) and
	t ##0 hold(buffer1_sig_data_0, buffer1_sig_data()) and
	t ##0 hold(buffer1_sig_opc_0, buffer1_sig_opc()) and
	t ##0 hold(buffer2_sig_abort_0, buffer2_sig_abort()) and
	t ##0 hold(buffer2_sig_addr_0, buffer2_sig_addr()) and
	t ##0 hold(buffer2_sig_data_0, buffer2_sig_data()) and
	t ##0 hold(buffer2_sig_opc_0, buffer2_sig_opc()) and
// Conceptual State
	t ##0 NON_EMPTY_2() and
// trigger
	t ##0 updateQ_i_sync() and
	t ##0 (updateQ_i_sig() == nxt_grant_q) and
	t ##0 (status1_var() == req_status) and
	t ##0 (status3_var() == empty_status) and
	t ##0 (status2_var() == empty_status) and
	t ##0 updateQ_i_sync()
implies
	t_end(o) ##0 NON_EMPTY_2() and
	t_end(o) ##0 buffer1_sig_abort() == buffer1_sig_abort_0 and
	t_end(o) ##0 buffer1_sig_addr() == buffer1_sig_addr_0 and
	t_end(o) ##0 buffer1_sig_data() == buffer1_sig_data_0 and
	t_end(o) ##0 buffer1_sig_opc() == buffer1_sig_opc_0 and
	t_end(o) ##0 buffer2_sig_abort() == buffer2_sig_abort_0 and
	t_end(o) ##0 buffer2_sig_addr() == buffer2_sig_addr_0 and
	t_end(o) ##0 buffer2_sig_data() == buffer2_sig_data_0 and
	t_end(o) ##0 buffer2_sig_opc() == buffer2_sig_opc_0 and
	t_end(o) ##0 buffer2_var_abort() == peripheral_request_i_sig_abort_0 and
	t_end(o) ##0 buffer2_var_addr() == peripheral_request_i_sig_addr_0 and
	t_end(o) ##0 buffer2_var_data() == peripheral_request_i_sig_data_0 and
	t_end(o) ##0 buffer2_var_opc() == peripheral_request_i_sig_opc_0 and
	t_end(o) ##0 buffer3_sig_abort() == buffer3_sig_abort_0 and
	t_end(o) ##0 buffer3_sig_addr() == buffer3_sig_addr_0 and
	t_end(o) ##0 buffer3_sig_data() == buffer3_sig_data_0 and
	t_end(o) ##0 buffer3_sig_opc() == buffer3_sig_opc_0 and
	t_end(o) ##0 buffer3_var_abort() == buffer3_var_abort_0 and
	t_end(o) ##0 buffer3_var_addr() == buffer3_var_addr_0 and
	t_end(o) ##0 buffer3_var_data() == buffer3_var_data_0 and
	t_end(o) ##0 buffer3_var_opc() == buffer3_var_opc_0 and
	t_end(o) ##0 req_o_sig() == req_o_sig_0 and
	t_end(o) ##0 status1_sig() == status1_sig_0 and
	t_end(o) ##0 status1_var() == addr_status and
	t_end(o) ##0 status2_sig() == status2_sig_0 and
	t_end(o) ##0 status2_var() == req_status and
	t_end(o) ##0 status3_sig() == status3_sig_0 and
	t_end(o) ##0 status3_var() == status3_var_0 and
	t_end(o) ##0 tmp_buffer_abort() == peripheral_request_i_sig_abort_0 and
	t_end(o) ##0 tmp_buffer_addr() == peripheral_request_i_sig_addr_0 and
	t_end(o) ##0 tmp_buffer_data() == peripheral_request_i_sig_data_0 and
	t_end(o) ##0 tmp_buffer_opc() == peripheral_request_i_sig_opc_0;
endproperty;
NON_EMPTY_2_read_22_a: assert property (disable iff (reset) NON_EMPTY_2_read_22_p(1));// ASSIGN t_end offset here

property NON_EMPTY_2_read_23_p(o);
bool buffer2_var_abort_0;
int buffer2_var_addr_0;
int buffer2_var_data_0;
opc_t buffer2_var_opc_0;
req_status_t status2_var_0;
bool peripheral_request_i_sig_abort_0;
int peripheral_request_i_sig_addr_0;
int peripheral_request_i_sig_data_0;
opc_t peripheral_request_i_sig_opc_0;
bool buffer3_sig_abort_0;
int buffer3_sig_addr_0;
int buffer3_sig_data_0;
opc_t buffer3_sig_opc_0;
bool req_o_sig_0;
req_status_t status1_sig_0;
req_status_t status2_sig_0;
req_status_t status3_sig_0;
bool buffer1_sig_abort_0;
int buffer1_sig_addr_0;
int buffer1_sig_data_0;
opc_t buffer1_sig_opc_0;
bool buffer2_sig_abort_0;
int buffer2_sig_addr_0;
int buffer2_sig_data_0;
opc_t buffer2_sig_opc_0;
// hold
	t ##0 hold(buffer2_var_abort_0, buffer2_var_abort()) and
	t ##0 hold(buffer2_var_addr_0, buffer2_var_addr()) and
	t ##0 hold(buffer2_var_data_0, buffer2_var_data()) and
	t ##0 hold(buffer2_var_opc_0, buffer2_var_opc()) and
	t ##0 hold(status2_var_0, status2_var()) and
	t ##0 hold(peripheral_request_i_sig_abort_0, peripheral_request_i_sig_abort()) and
	t ##0 hold(peripheral_request_i_sig_addr_0, peripheral_request_i_sig_addr()) and
	t ##0 hold(peripheral_request_i_sig_data_0, peripheral_request_i_sig_data()) and
	t ##0 hold(peripheral_request_i_sig_opc_0, peripheral_request_i_sig_opc()) and
	t ##0 hold(buffer3_sig_abort_0, buffer3_sig_abort()) and
	t ##0 hold(buffer3_sig_addr_0, buffer3_sig_addr()) and
	t ##0 hold(buffer3_sig_data_0, buffer3_sig_data()) and
	t ##0 hold(buffer3_sig_opc_0, buffer3_sig_opc()) and
	t ##0 hold(req_o_sig_0, req_o_sig()) and
	t ##0 hold(status1_sig_0, status1_sig()) and
	t ##0 hold(status2_sig_0, status2_sig()) and
	t ##0 hold(status3_sig_0, status3_sig()) and
	t ##0 hold(buffer1_sig_abort_0, buffer1_sig_abort()) and
	t ##0 hold(buffer1_sig_addr_0, buffer1_sig_addr()) and
	t ##0 hold(buffer1_sig_data_0, buffer1_sig_data()) and
	t ##0 hold(buffer1_sig_opc_0, buffer1_sig_opc()) and
	t ##0 hold(buffer2_sig_abort_0, buffer2_sig_abort()) and
	t ##0 hold(buffer2_sig_addr_0, buffer2_sig_addr()) and
	t ##0 hold(buffer2_sig_data_0, buffer2_sig_data()) and
	t ##0 hold(buffer2_sig_opc_0, buffer2_sig_opc()) and
// Conceptual State
	t ##0 NON_EMPTY_2() and
// trigger
	t ##0 updateQ_i_sync() and
	t ##0 (updateQ_i_sig() == nxt_grant_q) and
	t ##0 (status1_var() == req_status) and
	t ##0 (status3_var() == empty_status) and
	t ##0 !((status2_var() == empty_status)) and
	t ##0 updateQ_i_sync()
implies
	t_end(o) ##0 NON_EMPTY_2() and
	t_end(o) ##0 buffer1_sig_abort() == buffer1_sig_abort_0 and
	t_end(o) ##0 buffer1_sig_addr() == buffer1_sig_addr_0 and
	t_end(o) ##0 buffer1_sig_data() == buffer1_sig_data_0 and
	t_end(o) ##0 buffer1_sig_opc() == buffer1_sig_opc_0 and
	t_end(o) ##0 buffer2_sig_abort() == buffer2_sig_abort_0 and
	t_end(o) ##0 buffer2_sig_addr() == buffer2_sig_addr_0 and
	t_end(o) ##0 buffer2_sig_data() == buffer2_sig_data_0 and
	t_end(o) ##0 buffer2_sig_opc() == buffer2_sig_opc_0 and
	t_end(o) ##0 buffer2_var_abort() == buffer2_var_abort_0 and
	t_end(o) ##0 buffer2_var_addr() == buffer2_var_addr_0 and
	t_end(o) ##0 buffer2_var_data() == buffer2_var_data_0 and
	t_end(o) ##0 buffer2_var_opc() == buffer2_var_opc_0 and
	t_end(o) ##0 buffer3_sig_abort() == buffer3_sig_abort_0 and
	t_end(o) ##0 buffer3_sig_addr() == buffer3_sig_addr_0 and
	t_end(o) ##0 buffer3_sig_data() == buffer3_sig_data_0 and
	t_end(o) ##0 buffer3_sig_opc() == buffer3_sig_opc_0 and
	t_end(o) ##0 buffer3_var_abort() == peripheral_request_i_sig_abort_0 and
	t_end(o) ##0 buffer3_var_addr() == peripheral_request_i_sig_addr_0 and
	t_end(o) ##0 buffer3_var_data() == peripheral_request_i_sig_data_0 and
	t_end(o) ##0 buffer3_var_opc() == peripheral_request_i_sig_opc_0 and
	t_end(o) ##0 req_o_sig() == req_o_sig_0 and
	t_end(o) ##0 status1_sig() == status1_sig_0 and
	t_end(o) ##0 status1_var() == addr_status and
	t_end(o) ##0 status2_sig() == status2_sig_0 and
	t_end(o) ##0 status2_var() == status2_var_0 and
	t_end(o) ##0 status3_sig() == status3_sig_0 and
	t_end(o) ##0 status3_var() == req_status and
	t_end(o) ##0 tmp_buffer_abort() == peripheral_request_i_sig_abort_0 and
	t_end(o) ##0 tmp_buffer_addr() == peripheral_request_i_sig_addr_0 and
	t_end(o) ##0 tmp_buffer_data() == peripheral_request_i_sig_data_0 and
	t_end(o) ##0 tmp_buffer_opc() == peripheral_request_i_sig_opc_0;
endproperty;
NON_EMPTY_2_read_23_a: assert property (disable iff (reset) NON_EMPTY_2_read_23_p(1));// ASSIGN t_end offset here

property NON_EMPTY_2_read_24_p(o);
bool buffer2_var_abort_0;
int buffer2_var_addr_0;
int buffer2_var_data_0;
opc_t buffer2_var_opc_0;
bool buffer3_var_abort_0;
int buffer3_var_addr_0;
int buffer3_var_data_0;
opc_t buffer3_var_opc_0;
req_status_t status2_var_0;
req_status_t status3_var_0;
bool peripheral_request_i_sig_abort_0;
int peripheral_request_i_sig_addr_0;
int peripheral_request_i_sig_data_0;
opc_t peripheral_request_i_sig_opc_0;
bool buffer3_sig_abort_0;
int buffer3_sig_addr_0;
int buffer3_sig_data_0;
opc_t buffer3_sig_opc_0;
bool req_o_sig_0;
req_status_t status1_sig_0;
req_status_t status2_sig_0;
req_status_t status3_sig_0;
bool buffer1_sig_abort_0;
int buffer1_sig_addr_0;
int buffer1_sig_data_0;
opc_t buffer1_sig_opc_0;
bool buffer2_sig_abort_0;
int buffer2_sig_addr_0;
int buffer2_sig_data_0;
opc_t buffer2_sig_opc_0;
// hold
	t ##0 hold(buffer2_var_abort_0, buffer2_var_abort()) and
	t ##0 hold(buffer2_var_addr_0, buffer2_var_addr()) and
	t ##0 hold(buffer2_var_data_0, buffer2_var_data()) and
	t ##0 hold(buffer2_var_opc_0, buffer2_var_opc()) and
	t ##0 hold(buffer3_var_abort_0, buffer3_var_abort()) and
	t ##0 hold(buffer3_var_addr_0, buffer3_var_addr()) and
	t ##0 hold(buffer3_var_data_0, buffer3_var_data()) and
	t ##0 hold(buffer3_var_opc_0, buffer3_var_opc()) and
	t ##0 hold(status2_var_0, status2_var()) and
	t ##0 hold(status3_var_0, status3_var()) and
	t ##0 hold(peripheral_request_i_sig_abort_0, peripheral_request_i_sig_abort()) and
	t ##0 hold(peripheral_request_i_sig_addr_0, peripheral_request_i_sig_addr()) and
	t ##0 hold(peripheral_request_i_sig_data_0, peripheral_request_i_sig_data()) and
	t ##0 hold(peripheral_request_i_sig_opc_0, peripheral_request_i_sig_opc()) and
	t ##0 hold(buffer3_sig_abort_0, buffer3_sig_abort()) and
	t ##0 hold(buffer3_sig_addr_0, buffer3_sig_addr()) and
	t ##0 hold(buffer3_sig_data_0, buffer3_sig_data()) and
	t ##0 hold(buffer3_sig_opc_0, buffer3_sig_opc()) and
	t ##0 hold(req_o_sig_0, req_o_sig()) and
	t ##0 hold(status1_sig_0, status1_sig()) and
	t ##0 hold(status2_sig_0, status2_sig()) and
	t ##0 hold(status3_sig_0, status3_sig()) and
	t ##0 hold(buffer1_sig_abort_0, buffer1_sig_abort()) and
	t ##0 hold(buffer1_sig_addr_0, buffer1_sig_addr()) and
	t ##0 hold(buffer1_sig_data_0, buffer1_sig_data()) and
	t ##0 hold(buffer1_sig_opc_0, buffer1_sig_opc()) and
	t ##0 hold(buffer2_sig_abort_0, buffer2_sig_abort()) and
	t ##0 hold(buffer2_sig_addr_0, buffer2_sig_addr()) and
	t ##0 hold(buffer2_sig_data_0, buffer2_sig_data()) and
	t ##0 hold(buffer2_sig_opc_0, buffer2_sig_opc()) and
// Conceptual State
	t ##0 NON_EMPTY_2() and
// trigger
	t ##0 updateQ_i_sync() and
	t ##0 (updateQ_i_sig() == nxt_phase_q) and
	t ##0 (status3_var() == empty_status) and
	t ##0 (status1_var() == empty_status) and
	t ##0 updateQ_i_sync()
implies
	t_end(o) ##0 NON_EMPTY_2() and
	t_end(o) ##0 buffer1_sig_abort() == buffer1_sig_abort_0 and
	t_end(o) ##0 buffer1_sig_addr() == buffer1_sig_addr_0 and
	t_end(o) ##0 buffer1_sig_data() == buffer1_sig_data_0 and
	t_end(o) ##0 buffer1_sig_opc() == buffer1_sig_opc_0 and
	t_end(o) ##0 buffer2_sig_abort() == buffer2_sig_abort_0 and
	t_end(o) ##0 buffer2_sig_addr() == buffer2_sig_addr_0 and
	t_end(o) ##0 buffer2_sig_data() == buffer2_sig_data_0 and
	t_end(o) ##0 buffer2_sig_opc() == buffer2_sig_opc_0 and
	t_end(o) ##0 buffer2_var_abort() == buffer2_var_abort_0 and
	t_end(o) ##0 buffer2_var_addr() == buffer2_var_addr_0 and
	t_end(o) ##0 buffer2_var_data() == buffer2_var_data_0 and
	t_end(o) ##0 buffer2_var_opc() == buffer2_var_opc_0 and
	t_end(o) ##0 buffer3_sig_abort() == buffer3_sig_abort_0 and
	t_end(o) ##0 buffer3_sig_addr() == buffer3_sig_addr_0 and
	t_end(o) ##0 buffer3_sig_data() == buffer3_sig_data_0 and
	t_end(o) ##0 buffer3_sig_opc() == buffer3_sig_opc_0 and
	t_end(o) ##0 buffer3_var_abort() == buffer3_var_abort_0 and
	t_end(o) ##0 buffer3_var_addr() == buffer3_var_addr_0 and
	t_end(o) ##0 buffer3_var_data() == buffer3_var_data_0 and
	t_end(o) ##0 buffer3_var_opc() == buffer3_var_opc_0 and
	t_end(o) ##0 req_o_sig() == req_o_sig_0 and
	t_end(o) ##0 status1_sig() == status1_sig_0 and
	t_end(o) ##0 status1_var() == req_status and
	t_end(o) ##0 status2_sig() == status2_sig_0 and
	t_end(o) ##0 status2_var() == status2_var_0 and
	t_end(o) ##0 status3_sig() == status3_sig_0 and
	t_end(o) ##0 status3_var() == status3_var_0 and
	t_end(o) ##0 tmp_buffer_abort() == peripheral_request_i_sig_abort_0 and
	t_end(o) ##0 tmp_buffer_addr() == peripheral_request_i_sig_addr_0 and
	t_end(o) ##0 tmp_buffer_data() == peripheral_request_i_sig_data_0 and
	t_end(o) ##0 tmp_buffer_opc() == peripheral_request_i_sig_opc_0;
endproperty;
NON_EMPTY_2_read_24_a: assert property (disable iff (reset) NON_EMPTY_2_read_24_p(1));// ASSIGN t_end offset here

property NON_EMPTY_2_read_25_p(o);
bool buffer3_var_abort_0;
int buffer3_var_addr_0;
int buffer3_var_data_0;
opc_t buffer3_var_opc_0;
req_status_t status1_var_0;
req_status_t status3_var_0;
bool peripheral_request_i_sig_abort_0;
int peripheral_request_i_sig_addr_0;
int peripheral_request_i_sig_data_0;
opc_t peripheral_request_i_sig_opc_0;
bool buffer3_sig_abort_0;
int buffer3_sig_addr_0;
int buffer3_sig_data_0;
opc_t buffer3_sig_opc_0;
bool req_o_sig_0;
req_status_t status1_sig_0;
req_status_t status2_sig_0;
req_status_t status3_sig_0;
bool buffer1_sig_abort_0;
int buffer1_sig_addr_0;
int buffer1_sig_data_0;
opc_t buffer1_sig_opc_0;
bool buffer2_sig_abort_0;
int buffer2_sig_addr_0;
int buffer2_sig_data_0;
opc_t buffer2_sig_opc_0;
// hold
	t ##0 hold(buffer3_var_abort_0, buffer3_var_abort()) and
	t ##0 hold(buffer3_var_addr_0, buffer3_var_addr()) and
	t ##0 hold(buffer3_var_data_0, buffer3_var_data()) and
	t ##0 hold(buffer3_var_opc_0, buffer3_var_opc()) and
	t ##0 hold(status1_var_0, status1_var()) and
	t ##0 hold(status3_var_0, status3_var()) and
	t ##0 hold(peripheral_request_i_sig_abort_0, peripheral_request_i_sig_abort()) and
	t ##0 hold(peripheral_request_i_sig_addr_0, peripheral_request_i_sig_addr()) and
	t ##0 hold(peripheral_request_i_sig_data_0, peripheral_request_i_sig_data()) and
	t ##0 hold(peripheral_request_i_sig_opc_0, peripheral_request_i_sig_opc()) and
	t ##0 hold(buffer3_sig_abort_0, buffer3_sig_abort()) and
	t ##0 hold(buffer3_sig_addr_0, buffer3_sig_addr()) and
	t ##0 hold(buffer3_sig_data_0, buffer3_sig_data()) and
	t ##0 hold(buffer3_sig_opc_0, buffer3_sig_opc()) and
	t ##0 hold(req_o_sig_0, req_o_sig()) and
	t ##0 hold(status1_sig_0, status1_sig()) and
	t ##0 hold(status2_sig_0, status2_sig()) and
	t ##0 hold(status3_sig_0, status3_sig()) and
	t ##0 hold(buffer1_sig_abort_0, buffer1_sig_abort()) and
	t ##0 hold(buffer1_sig_addr_0, buffer1_sig_addr()) and
	t ##0 hold(buffer1_sig_data_0, buffer1_sig_data()) and
	t ##0 hold(buffer1_sig_opc_0, buffer1_sig_opc()) and
	t ##0 hold(buffer2_sig_abort_0, buffer2_sig_abort()) and
	t ##0 hold(buffer2_sig_addr_0, buffer2_sig_addr()) and
	t ##0 hold(buffer2_sig_data_0, buffer2_sig_data()) and
	t ##0 hold(buffer2_sig_opc_0, buffer2_sig_opc()) and
// Conceptual State
	t ##0 NON_EMPTY_2() and
// trigger
	t ##0 updateQ_i_sync() and
	t ##0 (updateQ_i_sig() == nxt_phase_q) and
	t ##0 !((status1_var() == data_staus)) and
	t ##0 !((status1_var() == addr_status)) and
	t ##0 (status3_var() == empty_status) and
	t ##0 !((status1_var() == empty_status)) and
	t ##0 (status2_var() == empty_status) and
	t ##0 updateQ_i_sync()
implies
	t_end(o) ##0 NON_EMPTY_2() and
	t_end(o) ##0 buffer1_sig_abort() == buffer1_sig_abort_0 and
	t_end(o) ##0 buffer1_sig_addr() == buffer1_sig_addr_0 and
	t_end(o) ##0 buffer1_sig_data() == buffer1_sig_data_0 and
	t_end(o) ##0 buffer1_sig_opc() == buffer1_sig_opc_0 and
	t_end(o) ##0 buffer2_sig_abort() == buffer2_sig_abort_0 and
	t_end(o) ##0 buffer2_sig_addr() == buffer2_sig_addr_0 and
	t_end(o) ##0 buffer2_sig_data() == buffer2_sig_data_0 and
	t_end(o) ##0 buffer2_sig_opc() == buffer2_sig_opc_0 and
	t_end(o) ##0 buffer2_var_abort() == peripheral_request_i_sig_abort_0 and
	t_end(o) ##0 buffer2_var_addr() == peripheral_request_i_sig_addr_0 and
	t_end(o) ##0 buffer2_var_data() == peripheral_request_i_sig_data_0 and
	t_end(o) ##0 buffer2_var_opc() == peripheral_request_i_sig_opc_0 and
	t_end(o) ##0 buffer3_sig_abort() == buffer3_sig_abort_0 and
	t_end(o) ##0 buffer3_sig_addr() == buffer3_sig_addr_0 and
	t_end(o) ##0 buffer3_sig_data() == buffer3_sig_data_0 and
	t_end(o) ##0 buffer3_sig_opc() == buffer3_sig_opc_0 and
	t_end(o) ##0 buffer3_var_abort() == buffer3_var_abort_0 and
	t_end(o) ##0 buffer3_var_addr() == buffer3_var_addr_0 and
	t_end(o) ##0 buffer3_var_data() == buffer3_var_data_0 and
	t_end(o) ##0 buffer3_var_opc() == buffer3_var_opc_0 and
	t_end(o) ##0 req_o_sig() == req_o_sig_0 and
	t_end(o) ##0 status1_sig() == status1_sig_0 and
	t_end(o) ##0 status1_var() == status1_var_0 and
	t_end(o) ##0 status2_sig() == status2_sig_0 and
	t_end(o) ##0 status2_var() == req_status and
	t_end(o) ##0 status3_sig() == status3_sig_0 and
	t_end(o) ##0 status3_var() == status3_var_0 and
	t_end(o) ##0 tmp_buffer_abort() == peripheral_request_i_sig_abort_0 and
	t_end(o) ##0 tmp_buffer_addr() == peripheral_request_i_sig_addr_0 and
	t_end(o) ##0 tmp_buffer_data() == peripheral_request_i_sig_data_0 and
	t_end(o) ##0 tmp_buffer_opc() == peripheral_request_i_sig_opc_0;
endproperty;
NON_EMPTY_2_read_25_a: assert property (disable iff (reset) NON_EMPTY_2_read_25_p(1));// ASSIGN t_end offset here

property NON_EMPTY_2_read_26_p(o);
bool buffer2_var_abort_0;
int buffer2_var_addr_0;
int buffer2_var_data_0;
opc_t buffer2_var_opc_0;
req_status_t status1_var_0;
req_status_t status2_var_0;
bool peripheral_request_i_sig_abort_0;
int peripheral_request_i_sig_addr_0;
int peripheral_request_i_sig_data_0;
opc_t peripheral_request_i_sig_opc_0;
bool buffer3_sig_abort_0;
int buffer3_sig_addr_0;
int buffer3_sig_data_0;
opc_t buffer3_sig_opc_0;
bool req_o_sig_0;
req_status_t status1_sig_0;
req_status_t status2_sig_0;
req_status_t status3_sig_0;
bool buffer1_sig_abort_0;
int buffer1_sig_addr_0;
int buffer1_sig_data_0;
opc_t buffer1_sig_opc_0;
bool buffer2_sig_abort_0;
int buffer2_sig_addr_0;
int buffer2_sig_data_0;
opc_t buffer2_sig_opc_0;
// hold
	t ##0 hold(buffer2_var_abort_0, buffer2_var_abort()) and
	t ##0 hold(buffer2_var_addr_0, buffer2_var_addr()) and
	t ##0 hold(buffer2_var_data_0, buffer2_var_data()) and
	t ##0 hold(buffer2_var_opc_0, buffer2_var_opc()) and
	t ##0 hold(status1_var_0, status1_var()) and
	t ##0 hold(status2_var_0, status2_var()) and
	t ##0 hold(peripheral_request_i_sig_abort_0, peripheral_request_i_sig_abort()) and
	t ##0 hold(peripheral_request_i_sig_addr_0, peripheral_request_i_sig_addr()) and
	t ##0 hold(peripheral_request_i_sig_data_0, peripheral_request_i_sig_data()) and
	t ##0 hold(peripheral_request_i_sig_opc_0, peripheral_request_i_sig_opc()) and
	t ##0 hold(buffer3_sig_abort_0, buffer3_sig_abort()) and
	t ##0 hold(buffer3_sig_addr_0, buffer3_sig_addr()) and
	t ##0 hold(buffer3_sig_data_0, buffer3_sig_data()) and
	t ##0 hold(buffer3_sig_opc_0, buffer3_sig_opc()) and
	t ##0 hold(req_o_sig_0, req_o_sig()) and
	t ##0 hold(status1_sig_0, status1_sig()) and
	t ##0 hold(status2_sig_0, status2_sig()) and
	t ##0 hold(status3_sig_0, status3_sig()) and
	t ##0 hold(buffer1_sig_abort_0, buffer1_sig_abort()) and
	t ##0 hold(buffer1_sig_addr_0, buffer1_sig_addr()) and
	t ##0 hold(buffer1_sig_data_0, buffer1_sig_data()) and
	t ##0 hold(buffer1_sig_opc_0, buffer1_sig_opc()) and
	t ##0 hold(buffer2_sig_abort_0, buffer2_sig_abort()) and
	t ##0 hold(buffer2_sig_addr_0, buffer2_sig_addr()) and
	t ##0 hold(buffer2_sig_data_0, buffer2_sig_data()) and
	t ##0 hold(buffer2_sig_opc_0, buffer2_sig_opc()) and
// Conceptual State
	t ##0 NON_EMPTY_2() and
// trigger
	t ##0 updateQ_i_sync() and
	t ##0 (updateQ_i_sig() == nxt_phase_q) and
	t ##0 !((status1_var() == data_staus)) and
	t ##0 !((status1_var() == addr_status)) and
	t ##0 (status3_var() == empty_status) and
	t ##0 !((status1_var() == empty_status)) and
	t ##0 !((status2_var() == empty_status)) and
	t ##0 updateQ_i_sync()
implies
	t_end(o) ##0 NON_EMPTY_2() and
	t_end(o) ##0 buffer1_sig_abort() == buffer1_sig_abort_0 and
	t_end(o) ##0 buffer1_sig_addr() == buffer1_sig_addr_0 and
	t_end(o) ##0 buffer1_sig_data() == buffer1_sig_data_0 and
	t_end(o) ##0 buffer1_sig_opc() == buffer1_sig_opc_0 and
	t_end(o) ##0 buffer2_sig_abort() == buffer2_sig_abort_0 and
	t_end(o) ##0 buffer2_sig_addr() == buffer2_sig_addr_0 and
	t_end(o) ##0 buffer2_sig_data() == buffer2_sig_data_0 and
	t_end(o) ##0 buffer2_sig_opc() == buffer2_sig_opc_0 and
	t_end(o) ##0 buffer2_var_abort() == buffer2_var_abort_0 and
	t_end(o) ##0 buffer2_var_addr() == buffer2_var_addr_0 and
	t_end(o) ##0 buffer2_var_data() == buffer2_var_data_0 and
	t_end(o) ##0 buffer2_var_opc() == buffer2_var_opc_0 and
	t_end(o) ##0 buffer3_sig_abort() == buffer3_sig_abort_0 and
	t_end(o) ##0 buffer3_sig_addr() == buffer3_sig_addr_0 and
	t_end(o) ##0 buffer3_sig_data() == buffer3_sig_data_0 and
	t_end(o) ##0 buffer3_sig_opc() == buffer3_sig_opc_0 and
	t_end(o) ##0 buffer3_var_abort() == peripheral_request_i_sig_abort_0 and
	t_end(o) ##0 buffer3_var_addr() == peripheral_request_i_sig_addr_0 and
	t_end(o) ##0 buffer3_var_data() == peripheral_request_i_sig_data_0 and
	t_end(o) ##0 buffer3_var_opc() == peripheral_request_i_sig_opc_0 and
	t_end(o) ##0 req_o_sig() == req_o_sig_0 and
	t_end(o) ##0 status1_sig() == status1_sig_0 and
	t_end(o) ##0 status1_var() == status1_var_0 and
	t_end(o) ##0 status2_sig() == status2_sig_0 and
	t_end(o) ##0 status2_var() == status2_var_0 and
	t_end(o) ##0 status3_sig() == status3_sig_0 and
	t_end(o) ##0 status3_var() == req_status and
	t_end(o) ##0 tmp_buffer_abort() == peripheral_request_i_sig_abort_0 and
	t_end(o) ##0 tmp_buffer_addr() == peripheral_request_i_sig_addr_0 and
	t_end(o) ##0 tmp_buffer_data() == peripheral_request_i_sig_data_0 and
	t_end(o) ##0 tmp_buffer_opc() == peripheral_request_i_sig_opc_0;
endproperty;
NON_EMPTY_2_read_26_a: assert property (disable iff (reset) NON_EMPTY_2_read_26_p(1));// ASSIGN t_end offset here

property NON_EMPTY_2_read_27_p(o);
bool buffer2_var_abort_0;
int buffer2_var_addr_0;
int buffer2_var_data_0;
opc_t buffer2_var_opc_0;
bool buffer3_var_abort_0;
int buffer3_var_addr_0;
int buffer3_var_data_0;
opc_t buffer3_var_opc_0;
req_status_t status2_var_0;
req_status_t status3_var_0;
bool peripheral_request_i_sig_abort_0;
int peripheral_request_i_sig_addr_0;
int peripheral_request_i_sig_data_0;
opc_t peripheral_request_i_sig_opc_0;
bool buffer3_sig_abort_0;
int buffer3_sig_addr_0;
int buffer3_sig_data_0;
opc_t buffer3_sig_opc_0;
bool req_o_sig_0;
req_status_t status1_sig_0;
req_status_t status2_sig_0;
req_status_t status3_sig_0;
bool buffer1_sig_abort_0;
int buffer1_sig_addr_0;
int buffer1_sig_data_0;
opc_t buffer1_sig_opc_0;
bool buffer2_sig_abort_0;
int buffer2_sig_addr_0;
int buffer2_sig_data_0;
opc_t buffer2_sig_opc_0;
// hold
	t ##0 hold(buffer2_var_abort_0, buffer2_var_abort()) and
	t ##0 hold(buffer2_var_addr_0, buffer2_var_addr()) and
	t ##0 hold(buffer2_var_data_0, buffer2_var_data()) and
	t ##0 hold(buffer2_var_opc_0, buffer2_var_opc()) and
	t ##0 hold(buffer3_var_abort_0, buffer3_var_abort()) and
	t ##0 hold(buffer3_var_addr_0, buffer3_var_addr()) and
	t ##0 hold(buffer3_var_data_0, buffer3_var_data()) and
	t ##0 hold(buffer3_var_opc_0, buffer3_var_opc()) and
	t ##0 hold(status2_var_0, status2_var()) and
	t ##0 hold(status3_var_0, status3_var()) and
	t ##0 hold(peripheral_request_i_sig_abort_0, peripheral_request_i_sig_abort()) and
	t ##0 hold(peripheral_request_i_sig_addr_0, peripheral_request_i_sig_addr()) and
	t ##0 hold(peripheral_request_i_sig_data_0, peripheral_request_i_sig_data()) and
	t ##0 hold(peripheral_request_i_sig_opc_0, peripheral_request_i_sig_opc()) and
	t ##0 hold(buffer3_sig_abort_0, buffer3_sig_abort()) and
	t ##0 hold(buffer3_sig_addr_0, buffer3_sig_addr()) and
	t ##0 hold(buffer3_sig_data_0, buffer3_sig_data()) and
	t ##0 hold(buffer3_sig_opc_0, buffer3_sig_opc()) and
	t ##0 hold(req_o_sig_0, req_o_sig()) and
	t ##0 hold(status1_sig_0, status1_sig()) and
	t ##0 hold(status2_sig_0, status2_sig()) and
	t ##0 hold(status3_sig_0, status3_sig()) and
	t ##0 hold(buffer1_sig_abort_0, buffer1_sig_abort()) and
	t ##0 hold(buffer1_sig_addr_0, buffer1_sig_addr()) and
	t ##0 hold(buffer1_sig_data_0, buffer1_sig_data()) and
	t ##0 hold(buffer1_sig_opc_0, buffer1_sig_opc()) and
	t ##0 hold(buffer2_sig_abort_0, buffer2_sig_abort()) and
	t ##0 hold(buffer2_sig_addr_0, buffer2_sig_addr()) and
	t ##0 hold(buffer2_sig_data_0, buffer2_sig_data()) and
	t ##0 hold(buffer2_sig_opc_0, buffer2_sig_opc()) and
// Conceptual State
	t ##0 NON_EMPTY_2() and
// trigger
	t ##0 updateQ_i_sync() and
	t ##0 (updateQ_i_sig() == nxt_btr_q) and
	t ##0 (status3_var() == empty_status) and
	t ##0 (status1_var() == empty_status) and
	t ##0 updateQ_i_sync()
implies
	t_end(o) ##0 NON_EMPTY_2() and
	t_end(o) ##0 buffer1_sig_abort() == buffer1_sig_abort_0 and
	t_end(o) ##0 buffer1_sig_addr() == buffer1_sig_addr_0 and
	t_end(o) ##0 buffer1_sig_data() == buffer1_sig_data_0 and
	t_end(o) ##0 buffer1_sig_opc() == buffer1_sig_opc_0 and
	t_end(o) ##0 buffer2_sig_abort() == buffer2_sig_abort_0 and
	t_end(o) ##0 buffer2_sig_addr() == buffer2_sig_addr_0 and
	t_end(o) ##0 buffer2_sig_data() == buffer2_sig_data_0 and
	t_end(o) ##0 buffer2_sig_opc() == buffer2_sig_opc_0 and
	t_end(o) ##0 buffer2_var_abort() == buffer2_var_abort_0 and
	t_end(o) ##0 buffer2_var_addr() == buffer2_var_addr_0 and
	t_end(o) ##0 buffer2_var_data() == buffer2_var_data_0 and
	t_end(o) ##0 buffer2_var_opc() == buffer2_var_opc_0 and
	t_end(o) ##0 buffer3_sig_abort() == buffer3_sig_abort_0 and
	t_end(o) ##0 buffer3_sig_addr() == buffer3_sig_addr_0 and
	t_end(o) ##0 buffer3_sig_data() == buffer3_sig_data_0 and
	t_end(o) ##0 buffer3_sig_opc() == buffer3_sig_opc_0 and
	t_end(o) ##0 buffer3_var_abort() == buffer3_var_abort_0 and
	t_end(o) ##0 buffer3_var_addr() == buffer3_var_addr_0 and
	t_end(o) ##0 buffer3_var_data() == buffer3_var_data_0 and
	t_end(o) ##0 buffer3_var_opc() == buffer3_var_opc_0 and
	t_end(o) ##0 req_o_sig() == req_o_sig_0 and
	t_end(o) ##0 status1_sig() == status1_sig_0 and
	t_end(o) ##0 status1_var() == req_status and
	t_end(o) ##0 status2_sig() == status2_sig_0 and
	t_end(o) ##0 status2_var() == status2_var_0 and
	t_end(o) ##0 status3_sig() == status3_sig_0 and
	t_end(o) ##0 status3_var() == status3_var_0 and
	t_end(o) ##0 tmp_buffer_abort() == peripheral_request_i_sig_abort_0 and
	t_end(o) ##0 tmp_buffer_addr() == peripheral_request_i_sig_addr_0 and
	t_end(o) ##0 tmp_buffer_data() == peripheral_request_i_sig_data_0 and
	t_end(o) ##0 tmp_buffer_opc() == peripheral_request_i_sig_opc_0;
endproperty;
NON_EMPTY_2_read_27_a: assert property (disable iff (reset) NON_EMPTY_2_read_27_p(1));// ASSIGN t_end offset here

property NON_EMPTY_2_read_28_p(o);
bool buffer3_var_abort_0;
int buffer3_var_addr_0;
int buffer3_var_data_0;
opc_t buffer3_var_opc_0;
req_status_t status1_var_0;
req_status_t status3_var_0;
bool peripheral_request_i_sig_abort_0;
int peripheral_request_i_sig_addr_0;
int peripheral_request_i_sig_data_0;
opc_t peripheral_request_i_sig_opc_0;
bool buffer3_sig_abort_0;
int buffer3_sig_addr_0;
int buffer3_sig_data_0;
opc_t buffer3_sig_opc_0;
bool req_o_sig_0;
req_status_t status1_sig_0;
req_status_t status2_sig_0;
req_status_t status3_sig_0;
bool buffer1_sig_abort_0;
int buffer1_sig_addr_0;
int buffer1_sig_data_0;
opc_t buffer1_sig_opc_0;
bool buffer2_sig_abort_0;
int buffer2_sig_addr_0;
int buffer2_sig_data_0;
opc_t buffer2_sig_opc_0;
// hold
	t ##0 hold(buffer3_var_abort_0, buffer3_var_abort()) and
	t ##0 hold(buffer3_var_addr_0, buffer3_var_addr()) and
	t ##0 hold(buffer3_var_data_0, buffer3_var_data()) and
	t ##0 hold(buffer3_var_opc_0, buffer3_var_opc()) and
	t ##0 hold(status1_var_0, status1_var()) and
	t ##0 hold(status3_var_0, status3_var()) and
	t ##0 hold(peripheral_request_i_sig_abort_0, peripheral_request_i_sig_abort()) and
	t ##0 hold(peripheral_request_i_sig_addr_0, peripheral_request_i_sig_addr()) and
	t ##0 hold(peripheral_request_i_sig_data_0, peripheral_request_i_sig_data()) and
	t ##0 hold(peripheral_request_i_sig_opc_0, peripheral_request_i_sig_opc()) and
	t ##0 hold(buffer3_sig_abort_0, buffer3_sig_abort()) and
	t ##0 hold(buffer3_sig_addr_0, buffer3_sig_addr()) and
	t ##0 hold(buffer3_sig_data_0, buffer3_sig_data()) and
	t ##0 hold(buffer3_sig_opc_0, buffer3_sig_opc()) and
	t ##0 hold(req_o_sig_0, req_o_sig()) and
	t ##0 hold(status1_sig_0, status1_sig()) and
	t ##0 hold(status2_sig_0, status2_sig()) and
	t ##0 hold(status3_sig_0, status3_sig()) and
	t ##0 hold(buffer1_sig_abort_0, buffer1_sig_abort()) and
	t ##0 hold(buffer1_sig_addr_0, buffer1_sig_addr()) and
	t ##0 hold(buffer1_sig_data_0, buffer1_sig_data()) and
	t ##0 hold(buffer1_sig_opc_0, buffer1_sig_opc()) and
	t ##0 hold(buffer2_sig_abort_0, buffer2_sig_abort()) and
	t ##0 hold(buffer2_sig_addr_0, buffer2_sig_addr()) and
	t ##0 hold(buffer2_sig_data_0, buffer2_sig_data()) and
	t ##0 hold(buffer2_sig_opc_0, buffer2_sig_opc()) and
// Conceptual State
	t ##0 NON_EMPTY_2() and
// trigger
	t ##0 updateQ_i_sync() and
	t ##0 (updateQ_i_sig() == nxt_btr_q) and
	t ##0 !((status1_var() == data_staus)) and
	t ##0 (status3_var() == empty_status) and
	t ##0 !((status1_var() == empty_status)) and
	t ##0 (status2_var() == empty_status) and
	t ##0 updateQ_i_sync()
implies
	t_end(o) ##0 NON_EMPTY_2() and
	t_end(o) ##0 buffer1_sig_abort() == buffer1_sig_abort_0 and
	t_end(o) ##0 buffer1_sig_addr() == buffer1_sig_addr_0 and
	t_end(o) ##0 buffer1_sig_data() == buffer1_sig_data_0 and
	t_end(o) ##0 buffer1_sig_opc() == buffer1_sig_opc_0 and
	t_end(o) ##0 buffer2_sig_abort() == buffer2_sig_abort_0 and
	t_end(o) ##0 buffer2_sig_addr() == buffer2_sig_addr_0 and
	t_end(o) ##0 buffer2_sig_data() == buffer2_sig_data_0 and
	t_end(o) ##0 buffer2_sig_opc() == buffer2_sig_opc_0 and
	t_end(o) ##0 buffer2_var_abort() == peripheral_request_i_sig_abort_0 and
	t_end(o) ##0 buffer2_var_addr() == peripheral_request_i_sig_addr_0 and
	t_end(o) ##0 buffer2_var_data() == peripheral_request_i_sig_data_0 and
	t_end(o) ##0 buffer2_var_opc() == peripheral_request_i_sig_opc_0 and
	t_end(o) ##0 buffer3_sig_abort() == buffer3_sig_abort_0 and
	t_end(o) ##0 buffer3_sig_addr() == buffer3_sig_addr_0 and
	t_end(o) ##0 buffer3_sig_data() == buffer3_sig_data_0 and
	t_end(o) ##0 buffer3_sig_opc() == buffer3_sig_opc_0 and
	t_end(o) ##0 buffer3_var_abort() == buffer3_var_abort_0 and
	t_end(o) ##0 buffer3_var_addr() == buffer3_var_addr_0 and
	t_end(o) ##0 buffer3_var_data() == buffer3_var_data_0 and
	t_end(o) ##0 buffer3_var_opc() == buffer3_var_opc_0 and
	t_end(o) ##0 req_o_sig() == req_o_sig_0 and
	t_end(o) ##0 status1_sig() == status1_sig_0 and
	t_end(o) ##0 status1_var() == status1_var_0 and
	t_end(o) ##0 status2_sig() == status2_sig_0 and
	t_end(o) ##0 status2_var() == req_status and
	t_end(o) ##0 status3_sig() == status3_sig_0 and
	t_end(o) ##0 status3_var() == status3_var_0 and
	t_end(o) ##0 tmp_buffer_abort() == peripheral_request_i_sig_abort_0 and
	t_end(o) ##0 tmp_buffer_addr() == peripheral_request_i_sig_addr_0 and
	t_end(o) ##0 tmp_buffer_data() == peripheral_request_i_sig_data_0 and
	t_end(o) ##0 tmp_buffer_opc() == peripheral_request_i_sig_opc_0;
endproperty;
NON_EMPTY_2_read_28_a: assert property (disable iff (reset) NON_EMPTY_2_read_28_p(1));// ASSIGN t_end offset here

property NON_EMPTY_2_read_29_p(o);
bool buffer2_var_abort_0;
int buffer2_var_addr_0;
int buffer2_var_data_0;
opc_t buffer2_var_opc_0;
req_status_t status1_var_0;
req_status_t status2_var_0;
bool peripheral_request_i_sig_abort_0;
int peripheral_request_i_sig_addr_0;
int peripheral_request_i_sig_data_0;
opc_t peripheral_request_i_sig_opc_0;
bool buffer3_sig_abort_0;
int buffer3_sig_addr_0;
int buffer3_sig_data_0;
opc_t buffer3_sig_opc_0;
bool req_o_sig_0;
req_status_t status1_sig_0;
req_status_t status2_sig_0;
req_status_t status3_sig_0;
bool buffer1_sig_abort_0;
int buffer1_sig_addr_0;
int buffer1_sig_data_0;
opc_t buffer1_sig_opc_0;
bool buffer2_sig_abort_0;
int buffer2_sig_addr_0;
int buffer2_sig_data_0;
opc_t buffer2_sig_opc_0;
// hold
	t ##0 hold(buffer2_var_abort_0, buffer2_var_abort()) and
	t ##0 hold(buffer2_var_addr_0, buffer2_var_addr()) and
	t ##0 hold(buffer2_var_data_0, buffer2_var_data()) and
	t ##0 hold(buffer2_var_opc_0, buffer2_var_opc()) and
	t ##0 hold(status1_var_0, status1_var()) and
	t ##0 hold(status2_var_0, status2_var()) and
	t ##0 hold(peripheral_request_i_sig_abort_0, peripheral_request_i_sig_abort()) and
	t ##0 hold(peripheral_request_i_sig_addr_0, peripheral_request_i_sig_addr()) and
	t ##0 hold(peripheral_request_i_sig_data_0, peripheral_request_i_sig_data()) and
	t ##0 hold(peripheral_request_i_sig_opc_0, peripheral_request_i_sig_opc()) and
	t ##0 hold(buffer3_sig_abort_0, buffer3_sig_abort()) and
	t ##0 hold(buffer3_sig_addr_0, buffer3_sig_addr()) and
	t ##0 hold(buffer3_sig_data_0, buffer3_sig_data()) and
	t ##0 hold(buffer3_sig_opc_0, buffer3_sig_opc()) and
	t ##0 hold(req_o_sig_0, req_o_sig()) and
	t ##0 hold(status1_sig_0, status1_sig()) and
	t ##0 hold(status2_sig_0, status2_sig()) and
	t ##0 hold(status3_sig_0, status3_sig()) and
	t ##0 hold(buffer1_sig_abort_0, buffer1_sig_abort()) and
	t ##0 hold(buffer1_sig_addr_0, buffer1_sig_addr()) and
	t ##0 hold(buffer1_sig_data_0, buffer1_sig_data()) and
	t ##0 hold(buffer1_sig_opc_0, buffer1_sig_opc()) and
	t ##0 hold(buffer2_sig_abort_0, buffer2_sig_abort()) and
	t ##0 hold(buffer2_sig_addr_0, buffer2_sig_addr()) and
	t ##0 hold(buffer2_sig_data_0, buffer2_sig_data()) and
	t ##0 hold(buffer2_sig_opc_0, buffer2_sig_opc()) and
// Conceptual State
	t ##0 NON_EMPTY_2() and
// trigger
	t ##0 updateQ_i_sync() and
	t ##0 (updateQ_i_sig() == nxt_btr_q) and
	t ##0 !((status1_var() == data_staus)) and
	t ##0 (status3_var() == empty_status) and
	t ##0 !((status1_var() == empty_status)) and
	t ##0 !((status2_var() == empty_status)) and
	t ##0 updateQ_i_sync()
implies
	t_end(o) ##0 NON_EMPTY_2() and
	t_end(o) ##0 buffer1_sig_abort() == buffer1_sig_abort_0 and
	t_end(o) ##0 buffer1_sig_addr() == buffer1_sig_addr_0 and
	t_end(o) ##0 buffer1_sig_data() == buffer1_sig_data_0 and
	t_end(o) ##0 buffer1_sig_opc() == buffer1_sig_opc_0 and
	t_end(o) ##0 buffer2_sig_abort() == buffer2_sig_abort_0 and
	t_end(o) ##0 buffer2_sig_addr() == buffer2_sig_addr_0 and
	t_end(o) ##0 buffer2_sig_data() == buffer2_sig_data_0 and
	t_end(o) ##0 buffer2_sig_opc() == buffer2_sig_opc_0 and
	t_end(o) ##0 buffer2_var_abort() == buffer2_var_abort_0 and
	t_end(o) ##0 buffer2_var_addr() == buffer2_var_addr_0 and
	t_end(o) ##0 buffer2_var_data() == buffer2_var_data_0 and
	t_end(o) ##0 buffer2_var_opc() == buffer2_var_opc_0 and
	t_end(o) ##0 buffer3_sig_abort() == buffer3_sig_abort_0 and
	t_end(o) ##0 buffer3_sig_addr() == buffer3_sig_addr_0 and
	t_end(o) ##0 buffer3_sig_data() == buffer3_sig_data_0 and
	t_end(o) ##0 buffer3_sig_opc() == buffer3_sig_opc_0 and
	t_end(o) ##0 buffer3_var_abort() == peripheral_request_i_sig_abort_0 and
	t_end(o) ##0 buffer3_var_addr() == peripheral_request_i_sig_addr_0 and
	t_end(o) ##0 buffer3_var_data() == peripheral_request_i_sig_data_0 and
	t_end(o) ##0 buffer3_var_opc() == peripheral_request_i_sig_opc_0 and
	t_end(o) ##0 req_o_sig() == req_o_sig_0 and
	t_end(o) ##0 status1_sig() == status1_sig_0 and
	t_end(o) ##0 status1_var() == status1_var_0 and
	t_end(o) ##0 status2_sig() == status2_sig_0 and
	t_end(o) ##0 status2_var() == status2_var_0 and
	t_end(o) ##0 status3_sig() == status3_sig_0 and
	t_end(o) ##0 status3_var() == req_status and
	t_end(o) ##0 tmp_buffer_abort() == peripheral_request_i_sig_abort_0 and
	t_end(o) ##0 tmp_buffer_addr() == peripheral_request_i_sig_addr_0 and
	t_end(o) ##0 tmp_buffer_data() == peripheral_request_i_sig_data_0 and
	t_end(o) ##0 tmp_buffer_opc() == peripheral_request_i_sig_opc_0;
endproperty;
NON_EMPTY_2_read_29_a: assert property (disable iff (reset) NON_EMPTY_2_read_29_p(1));// ASSIGN t_end offset here

property NON_EMPTY_2_read_30_p(o);
bool buffer3_var_abort_0;
int buffer3_var_addr_0;
int buffer3_var_data_0;
opc_t buffer3_var_opc_0;
req_status_t status3_var_0;
bool peripheral_request_i_sig_abort_0;
int peripheral_request_i_sig_addr_0;
int peripheral_request_i_sig_data_0;
opc_t peripheral_request_i_sig_opc_0;
bool buffer3_sig_abort_0;
int buffer3_sig_addr_0;
int buffer3_sig_data_0;
opc_t buffer3_sig_opc_0;
bool req_o_sig_0;
req_status_t status1_sig_0;
req_status_t status2_sig_0;
req_status_t status3_sig_0;
bool buffer1_sig_abort_0;
int buffer1_sig_addr_0;
int buffer1_sig_data_0;
opc_t buffer1_sig_opc_0;
bool buffer2_sig_abort_0;
int buffer2_sig_addr_0;
int buffer2_sig_data_0;
opc_t buffer2_sig_opc_0;
// hold
	t ##0 hold(buffer3_var_abort_0, buffer3_var_abort()) and
	t ##0 hold(buffer3_var_addr_0, buffer3_var_addr()) and
	t ##0 hold(buffer3_var_data_0, buffer3_var_data()) and
	t ##0 hold(buffer3_var_opc_0, buffer3_var_opc()) and
	t ##0 hold(status3_var_0, status3_var()) and
	t ##0 hold(peripheral_request_i_sig_abort_0, peripheral_request_i_sig_abort()) and
	t ##0 hold(peripheral_request_i_sig_addr_0, peripheral_request_i_sig_addr()) and
	t ##0 hold(peripheral_request_i_sig_data_0, peripheral_request_i_sig_data()) and
	t ##0 hold(peripheral_request_i_sig_opc_0, peripheral_request_i_sig_opc()) and
	t ##0 hold(buffer3_sig_abort_0, buffer3_sig_abort()) and
	t ##0 hold(buffer3_sig_addr_0, buffer3_sig_addr()) and
	t ##0 hold(buffer3_sig_data_0, buffer3_sig_data()) and
	t ##0 hold(buffer3_sig_opc_0, buffer3_sig_opc()) and
	t ##0 hold(req_o_sig_0, req_o_sig()) and
	t ##0 hold(status1_sig_0, status1_sig()) and
	t ##0 hold(status2_sig_0, status2_sig()) and
	t ##0 hold(status3_sig_0, status3_sig()) and
	t ##0 hold(buffer1_sig_abort_0, buffer1_sig_abort()) and
	t ##0 hold(buffer1_sig_addr_0, buffer1_sig_addr()) and
	t ##0 hold(buffer1_sig_data_0, buffer1_sig_data()) and
	t ##0 hold(buffer1_sig_opc_0, buffer1_sig_opc()) and
	t ##0 hold(buffer2_sig_abort_0, buffer2_sig_abort()) and
	t ##0 hold(buffer2_sig_addr_0, buffer2_sig_addr()) and
	t ##0 hold(buffer2_sig_data_0, buffer2_sig_data()) and
	t ##0 hold(buffer2_sig_opc_0, buffer2_sig_opc()) and
// Conceptual State
	t ##0 NON_EMPTY_2() and
// trigger
	t ##0 updateQ_i_sync() and
	t ##0 (updateQ_i_sig() == nxt_phase_q) and
	t ##0 (status1_var() == addr_status) and
	t ##0 (status3_var() == empty_status) and
	t ##0 (status2_var() == empty_status) and
	t ##0 updateQ_i_sync()
implies
	t_end(o) ##0 NON_EMPTY_2() and
	t_end(o) ##0 buffer1_sig_abort() == buffer1_sig_abort_0 and
	t_end(o) ##0 buffer1_sig_addr() == buffer1_sig_addr_0 and
	t_end(o) ##0 buffer1_sig_data() == buffer1_sig_data_0 and
	t_end(o) ##0 buffer1_sig_opc() == buffer1_sig_opc_0 and
	t_end(o) ##0 buffer2_sig_abort() == buffer2_sig_abort_0 and
	t_end(o) ##0 buffer2_sig_addr() == buffer2_sig_addr_0 and
	t_end(o) ##0 buffer2_sig_data() == buffer2_sig_data_0 and
	t_end(o) ##0 buffer2_sig_opc() == buffer2_sig_opc_0 and
	t_end(o) ##0 buffer2_var_abort() == peripheral_request_i_sig_abort_0 and
	t_end(o) ##0 buffer2_var_addr() == peripheral_request_i_sig_addr_0 and
	t_end(o) ##0 buffer2_var_data() == peripheral_request_i_sig_data_0 and
	t_end(o) ##0 buffer2_var_opc() == peripheral_request_i_sig_opc_0 and
	t_end(o) ##0 buffer3_sig_abort() == buffer3_sig_abort_0 and
	t_end(o) ##0 buffer3_sig_addr() == buffer3_sig_addr_0 and
	t_end(o) ##0 buffer3_sig_data() == buffer3_sig_data_0 and
	t_end(o) ##0 buffer3_sig_opc() == buffer3_sig_opc_0 and
	t_end(o) ##0 buffer3_var_abort() == buffer3_var_abort_0 and
	t_end(o) ##0 buffer3_var_addr() == buffer3_var_addr_0 and
	t_end(o) ##0 buffer3_var_data() == buffer3_var_data_0 and
	t_end(o) ##0 buffer3_var_opc() == buffer3_var_opc_0 and
	t_end(o) ##0 req_o_sig() == req_o_sig_0 and
	t_end(o) ##0 status1_sig() == status1_sig_0 and
	t_end(o) ##0 status1_var() == data_staus and
	t_end(o) ##0 status2_sig() == status2_sig_0 and
	t_end(o) ##0 status2_var() == req_status and
	t_end(o) ##0 status3_sig() == status3_sig_0 and
	t_end(o) ##0 status3_var() == status3_var_0 and
	t_end(o) ##0 tmp_buffer_abort() == peripheral_request_i_sig_abort_0 and
	t_end(o) ##0 tmp_buffer_addr() == peripheral_request_i_sig_addr_0 and
	t_end(o) ##0 tmp_buffer_data() == peripheral_request_i_sig_data_0 and
	t_end(o) ##0 tmp_buffer_opc() == peripheral_request_i_sig_opc_0;
endproperty;
NON_EMPTY_2_read_30_a: assert property (disable iff (reset) NON_EMPTY_2_read_30_p(1));// ASSIGN t_end offset here

property NON_EMPTY_2_read_31_p(o);
bool buffer2_var_abort_0;
int buffer2_var_addr_0;
int buffer2_var_data_0;
opc_t buffer2_var_opc_0;
req_status_t status2_var_0;
bool peripheral_request_i_sig_abort_0;
int peripheral_request_i_sig_addr_0;
int peripheral_request_i_sig_data_0;
opc_t peripheral_request_i_sig_opc_0;
bool buffer3_sig_abort_0;
int buffer3_sig_addr_0;
int buffer3_sig_data_0;
opc_t buffer3_sig_opc_0;
bool req_o_sig_0;
req_status_t status1_sig_0;
req_status_t status2_sig_0;
req_status_t status3_sig_0;
bool buffer1_sig_abort_0;
int buffer1_sig_addr_0;
int buffer1_sig_data_0;
opc_t buffer1_sig_opc_0;
bool buffer2_sig_abort_0;
int buffer2_sig_addr_0;
int buffer2_sig_data_0;
opc_t buffer2_sig_opc_0;
// hold
	t ##0 hold(buffer2_var_abort_0, buffer2_var_abort()) and
	t ##0 hold(buffer2_var_addr_0, buffer2_var_addr()) and
	t ##0 hold(buffer2_var_data_0, buffer2_var_data()) and
	t ##0 hold(buffer2_var_opc_0, buffer2_var_opc()) and
	t ##0 hold(status2_var_0, status2_var()) and
	t ##0 hold(peripheral_request_i_sig_abort_0, peripheral_request_i_sig_abort()) and
	t ##0 hold(peripheral_request_i_sig_addr_0, peripheral_request_i_sig_addr()) and
	t ##0 hold(peripheral_request_i_sig_data_0, peripheral_request_i_sig_data()) and
	t ##0 hold(peripheral_request_i_sig_opc_0, peripheral_request_i_sig_opc()) and
	t ##0 hold(buffer3_sig_abort_0, buffer3_sig_abort()) and
	t ##0 hold(buffer3_sig_addr_0, buffer3_sig_addr()) and
	t ##0 hold(buffer3_sig_data_0, buffer3_sig_data()) and
	t ##0 hold(buffer3_sig_opc_0, buffer3_sig_opc()) and
	t ##0 hold(req_o_sig_0, req_o_sig()) and
	t ##0 hold(status1_sig_0, status1_sig()) and
	t ##0 hold(status2_sig_0, status2_sig()) and
	t ##0 hold(status3_sig_0, status3_sig()) and
	t ##0 hold(buffer1_sig_abort_0, buffer1_sig_abort()) and
	t ##0 hold(buffer1_sig_addr_0, buffer1_sig_addr()) and
	t ##0 hold(buffer1_sig_data_0, buffer1_sig_data()) and
	t ##0 hold(buffer1_sig_opc_0, buffer1_sig_opc()) and
	t ##0 hold(buffer2_sig_abort_0, buffer2_sig_abort()) and
	t ##0 hold(buffer2_sig_addr_0, buffer2_sig_addr()) and
	t ##0 hold(buffer2_sig_data_0, buffer2_sig_data()) and
	t ##0 hold(buffer2_sig_opc_0, buffer2_sig_opc()) and
// Conceptual State
	t ##0 NON_EMPTY_2() and
// trigger
	t ##0 updateQ_i_sync() and
	t ##0 (updateQ_i_sig() == nxt_phase_q) and
	t ##0 (status1_var() == addr_status) and
	t ##0 (status3_var() == empty_status) and
	t ##0 !((status2_var() == empty_status)) and
	t ##0 updateQ_i_sync()
implies
	t_end(o) ##0 NON_EMPTY_2() and
	t_end(o) ##0 buffer1_sig_abort() == buffer1_sig_abort_0 and
	t_end(o) ##0 buffer1_sig_addr() == buffer1_sig_addr_0 and
	t_end(o) ##0 buffer1_sig_data() == buffer1_sig_data_0 and
	t_end(o) ##0 buffer1_sig_opc() == buffer1_sig_opc_0 and
	t_end(o) ##0 buffer2_sig_abort() == buffer2_sig_abort_0 and
	t_end(o) ##0 buffer2_sig_addr() == buffer2_sig_addr_0 and
	t_end(o) ##0 buffer2_sig_data() == buffer2_sig_data_0 and
	t_end(o) ##0 buffer2_sig_opc() == buffer2_sig_opc_0 and
	t_end(o) ##0 buffer2_var_abort() == buffer2_var_abort_0 and
	t_end(o) ##0 buffer2_var_addr() == buffer2_var_addr_0 and
	t_end(o) ##0 buffer2_var_data() == buffer2_var_data_0 and
	t_end(o) ##0 buffer2_var_opc() == buffer2_var_opc_0 and
	t_end(o) ##0 buffer3_sig_abort() == buffer3_sig_abort_0 and
	t_end(o) ##0 buffer3_sig_addr() == buffer3_sig_addr_0 and
	t_end(o) ##0 buffer3_sig_data() == buffer3_sig_data_0 and
	t_end(o) ##0 buffer3_sig_opc() == buffer3_sig_opc_0 and
	t_end(o) ##0 buffer3_var_abort() == peripheral_request_i_sig_abort_0 and
	t_end(o) ##0 buffer3_var_addr() == peripheral_request_i_sig_addr_0 and
	t_end(o) ##0 buffer3_var_data() == peripheral_request_i_sig_data_0 and
	t_end(o) ##0 buffer3_var_opc() == peripheral_request_i_sig_opc_0 and
	t_end(o) ##0 req_o_sig() == req_o_sig_0 and
	t_end(o) ##0 status1_sig() == status1_sig_0 and
	t_end(o) ##0 status1_var() == data_staus and
	t_end(o) ##0 status2_sig() == status2_sig_0 and
	t_end(o) ##0 status2_var() == status2_var_0 and
	t_end(o) ##0 status3_sig() == status3_sig_0 and
	t_end(o) ##0 status3_var() == req_status and
	t_end(o) ##0 tmp_buffer_abort() == peripheral_request_i_sig_abort_0 and
	t_end(o) ##0 tmp_buffer_addr() == peripheral_request_i_sig_addr_0 and
	t_end(o) ##0 tmp_buffer_data() == peripheral_request_i_sig_data_0 and
	t_end(o) ##0 tmp_buffer_opc() == peripheral_request_i_sig_opc_0;
endproperty;
NON_EMPTY_2_read_31_a: assert property (disable iff (reset) NON_EMPTY_2_read_31_p(1));// ASSIGN t_end offset here

property NON_EMPTY_2_read_32_p(o);
bool buffer3_var_abort_0;
int buffer3_var_addr_0;
int buffer3_var_data_0;
opc_t buffer3_var_opc_0;
req_status_t status3_var_0;
bool peripheral_request_i_sig_abort_0;
int peripheral_request_i_sig_addr_0;
int peripheral_request_i_sig_data_0;
opc_t peripheral_request_i_sig_opc_0;
bool buffer3_sig_abort_0;
int buffer3_sig_addr_0;
int buffer3_sig_data_0;
opc_t buffer3_sig_opc_0;
bool req_o_sig_0;
req_status_t status1_sig_0;
req_status_t status2_sig_0;
req_status_t status3_sig_0;
bool buffer1_sig_abort_0;
int buffer1_sig_addr_0;
int buffer1_sig_data_0;
opc_t buffer1_sig_opc_0;
bool buffer2_sig_abort_0;
int buffer2_sig_addr_0;
int buffer2_sig_data_0;
opc_t buffer2_sig_opc_0;
// hold
	t ##0 hold(buffer3_var_abort_0, buffer3_var_abort()) and
	t ##0 hold(buffer3_var_addr_0, buffer3_var_addr()) and
	t ##0 hold(buffer3_var_data_0, buffer3_var_data()) and
	t ##0 hold(buffer3_var_opc_0, buffer3_var_opc()) and
	t ##0 hold(status3_var_0, status3_var()) and
	t ##0 hold(peripheral_request_i_sig_abort_0, peripheral_request_i_sig_abort()) and
	t ##0 hold(peripheral_request_i_sig_addr_0, peripheral_request_i_sig_addr()) and
	t ##0 hold(peripheral_request_i_sig_data_0, peripheral_request_i_sig_data()) and
	t ##0 hold(peripheral_request_i_sig_opc_0, peripheral_request_i_sig_opc()) and
	t ##0 hold(buffer3_sig_abort_0, buffer3_sig_abort()) and
	t ##0 hold(buffer3_sig_addr_0, buffer3_sig_addr()) and
	t ##0 hold(buffer3_sig_data_0, buffer3_sig_data()) and
	t ##0 hold(buffer3_sig_opc_0, buffer3_sig_opc()) and
	t ##0 hold(req_o_sig_0, req_o_sig()) and
	t ##0 hold(status1_sig_0, status1_sig()) and
	t ##0 hold(status2_sig_0, status2_sig()) and
	t ##0 hold(status3_sig_0, status3_sig()) and
	t ##0 hold(buffer1_sig_abort_0, buffer1_sig_abort()) and
	t ##0 hold(buffer1_sig_addr_0, buffer1_sig_addr()) and
	t ##0 hold(buffer1_sig_data_0, buffer1_sig_data()) and
	t ##0 hold(buffer1_sig_opc_0, buffer1_sig_opc()) and
	t ##0 hold(buffer2_sig_abort_0, buffer2_sig_abort()) and
	t ##0 hold(buffer2_sig_addr_0, buffer2_sig_addr()) and
	t ##0 hold(buffer2_sig_data_0, buffer2_sig_data()) and
	t ##0 hold(buffer2_sig_opc_0, buffer2_sig_opc()) and
// Conceptual State
	t ##0 NON_EMPTY_2() and
// trigger
	t ##0 updateQ_i_sync() and
	t ##0 !((updateQ_i_sig() == nxt_grant_q)) and
	t ##0 !((updateQ_i_sig() == nxt_phase_q)) and
	t ##0 !((updateQ_i_sig() == nxt_btr_q)) and
	t ##0 (status3_var() == empty_status) and
	t ##0 (status2_var() == empty_status) and
	t ##0 updateQ_i_sync()
implies
	t_end(o) ##0 NON_EMPTY_2() and
	t_end(o) ##0 buffer1_sig_abort() == buffer1_sig_abort_0 and
	t_end(o) ##0 buffer1_sig_addr() == buffer1_sig_addr_0 and
	t_end(o) ##0 buffer1_sig_data() == buffer1_sig_data_0 and
	t_end(o) ##0 buffer1_sig_opc() == buffer1_sig_opc_0 and
	t_end(o) ##0 buffer2_sig_abort() == buffer2_sig_abort_0 and
	t_end(o) ##0 buffer2_sig_addr() == buffer2_sig_addr_0 and
	t_end(o) ##0 buffer2_sig_data() == buffer2_sig_data_0 and
	t_end(o) ##0 buffer2_sig_opc() == buffer2_sig_opc_0 and
	t_end(o) ##0 buffer2_var_abort() == peripheral_request_i_sig_abort_0 and
	t_end(o) ##0 buffer2_var_addr() == peripheral_request_i_sig_addr_0 and
	t_end(o) ##0 buffer2_var_data() == peripheral_request_i_sig_data_0 and
	t_end(o) ##0 buffer2_var_opc() == peripheral_request_i_sig_opc_0 and
	t_end(o) ##0 buffer3_sig_abort() == buffer3_sig_abort_0 and
	t_end(o) ##0 buffer3_sig_addr() == buffer3_sig_addr_0 and
	t_end(o) ##0 buffer3_sig_data() == buffer3_sig_data_0 and
	t_end(o) ##0 buffer3_sig_opc() == buffer3_sig_opc_0 and
	t_end(o) ##0 buffer3_var_abort() == buffer3_var_abort_0 and
	t_end(o) ##0 buffer3_var_addr() == buffer3_var_addr_0 and
	t_end(o) ##0 buffer3_var_data() == buffer3_var_data_0 and
	t_end(o) ##0 buffer3_var_opc() == buffer3_var_opc_0 and
	t_end(o) ##0 req_o_sig() == req_o_sig_0 and
	t_end(o) ##0 status1_sig() == status1_sig_0 and
	t_end(o) ##0 status1_var() == req_status and
	t_end(o) ##0 status2_sig() == status2_sig_0 and
	t_end(o) ##0 status2_var() == req_status and
	t_end(o) ##0 status3_sig() == status3_sig_0 and
	t_end(o) ##0 status3_var() == status3_var_0 and
	t_end(o) ##0 tmp_buffer_abort() == peripheral_request_i_sig_abort_0 and
	t_end(o) ##0 tmp_buffer_addr() == peripheral_request_i_sig_addr_0 and
	t_end(o) ##0 tmp_buffer_data() == peripheral_request_i_sig_data_0 and
	t_end(o) ##0 tmp_buffer_opc() == peripheral_request_i_sig_opc_0;
endproperty;
NON_EMPTY_2_read_32_a: assert property (disable iff (reset) NON_EMPTY_2_read_32_p(1));// ASSIGN t_end offset here

property NON_EMPTY_2_read_33_p(o);
bool buffer2_var_abort_0;
int buffer2_var_addr_0;
int buffer2_var_data_0;
opc_t buffer2_var_opc_0;
req_status_t status2_var_0;
bool peripheral_request_i_sig_abort_0;
int peripheral_request_i_sig_addr_0;
int peripheral_request_i_sig_data_0;
opc_t peripheral_request_i_sig_opc_0;
bool buffer3_sig_abort_0;
int buffer3_sig_addr_0;
int buffer3_sig_data_0;
opc_t buffer3_sig_opc_0;
bool req_o_sig_0;
req_status_t status1_sig_0;
req_status_t status2_sig_0;
req_status_t status3_sig_0;
bool buffer1_sig_abort_0;
int buffer1_sig_addr_0;
int buffer1_sig_data_0;
opc_t buffer1_sig_opc_0;
bool buffer2_sig_abort_0;
int buffer2_sig_addr_0;
int buffer2_sig_data_0;
opc_t buffer2_sig_opc_0;
// hold
	t ##0 hold(buffer2_var_abort_0, buffer2_var_abort()) and
	t ##0 hold(buffer2_var_addr_0, buffer2_var_addr()) and
	t ##0 hold(buffer2_var_data_0, buffer2_var_data()) and
	t ##0 hold(buffer2_var_opc_0, buffer2_var_opc()) and
	t ##0 hold(status2_var_0, status2_var()) and
	t ##0 hold(peripheral_request_i_sig_abort_0, peripheral_request_i_sig_abort()) and
	t ##0 hold(peripheral_request_i_sig_addr_0, peripheral_request_i_sig_addr()) and
	t ##0 hold(peripheral_request_i_sig_data_0, peripheral_request_i_sig_data()) and
	t ##0 hold(peripheral_request_i_sig_opc_0, peripheral_request_i_sig_opc()) and
	t ##0 hold(buffer3_sig_abort_0, buffer3_sig_abort()) and
	t ##0 hold(buffer3_sig_addr_0, buffer3_sig_addr()) and
	t ##0 hold(buffer3_sig_data_0, buffer3_sig_data()) and
	t ##0 hold(buffer3_sig_opc_0, buffer3_sig_opc()) and
	t ##0 hold(req_o_sig_0, req_o_sig()) and
	t ##0 hold(status1_sig_0, status1_sig()) and
	t ##0 hold(status2_sig_0, status2_sig()) and
	t ##0 hold(status3_sig_0, status3_sig()) and
	t ##0 hold(buffer1_sig_abort_0, buffer1_sig_abort()) and
	t ##0 hold(buffer1_sig_addr_0, buffer1_sig_addr()) and
	t ##0 hold(buffer1_sig_data_0, buffer1_sig_data()) and
	t ##0 hold(buffer1_sig_opc_0, buffer1_sig_opc()) and
	t ##0 hold(buffer2_sig_abort_0, buffer2_sig_abort()) and
	t ##0 hold(buffer2_sig_addr_0, buffer2_sig_addr()) and
	t ##0 hold(buffer2_sig_data_0, buffer2_sig_data()) and
	t ##0 hold(buffer2_sig_opc_0, buffer2_sig_opc()) and
// Conceptual State
	t ##0 NON_EMPTY_2() and
// trigger
	t ##0 updateQ_i_sync() and
	t ##0 !((updateQ_i_sig() == nxt_grant_q)) and
	t ##0 !((updateQ_i_sig() == nxt_phase_q)) and
	t ##0 !((updateQ_i_sig() == nxt_btr_q)) and
	t ##0 !((status2_var() == addr_status)) and
	t ##0 (status3_var() == empty_status) and
	t ##0 !((status2_var() == empty_status)) and
	t ##0 updateQ_i_sync()
implies
	t_end(o) ##0 NON_EMPTY_2() and
	t_end(o) ##0 buffer1_sig_abort() == buffer1_sig_abort_0 and
	t_end(o) ##0 buffer1_sig_addr() == buffer1_sig_addr_0 and
	t_end(o) ##0 buffer1_sig_data() == buffer1_sig_data_0 and
	t_end(o) ##0 buffer1_sig_opc() == buffer1_sig_opc_0 and
	t_end(o) ##0 buffer2_sig_abort() == buffer2_sig_abort_0 and
	t_end(o) ##0 buffer2_sig_addr() == buffer2_sig_addr_0 and
	t_end(o) ##0 buffer2_sig_data() == buffer2_sig_data_0 and
	t_end(o) ##0 buffer2_sig_opc() == buffer2_sig_opc_0 and
	t_end(o) ##0 buffer2_var_abort() == buffer2_var_abort_0 and
	t_end(o) ##0 buffer2_var_addr() == buffer2_var_addr_0 and
	t_end(o) ##0 buffer2_var_data() == buffer2_var_data_0 and
	t_end(o) ##0 buffer2_var_opc() == buffer2_var_opc_0 and
	t_end(o) ##0 buffer3_sig_abort() == buffer3_sig_abort_0 and
	t_end(o) ##0 buffer3_sig_addr() == buffer3_sig_addr_0 and
	t_end(o) ##0 buffer3_sig_data() == buffer3_sig_data_0 and
	t_end(o) ##0 buffer3_sig_opc() == buffer3_sig_opc_0 and
	t_end(o) ##0 buffer3_var_abort() == peripheral_request_i_sig_abort_0 and
	t_end(o) ##0 buffer3_var_addr() == peripheral_request_i_sig_addr_0 and
	t_end(o) ##0 buffer3_var_data() == peripheral_request_i_sig_data_0 and
	t_end(o) ##0 buffer3_var_opc() == peripheral_request_i_sig_opc_0 and
	t_end(o) ##0 req_o_sig() == req_o_sig_0 and
	t_end(o) ##0 status1_sig() == status1_sig_0 and
	t_end(o) ##0 status1_var() == req_status and
	t_end(o) ##0 status2_sig() == status2_sig_0 and
	t_end(o) ##0 status2_var() == status2_var_0 and
	t_end(o) ##0 status3_sig() == status3_sig_0 and
	t_end(o) ##0 status3_var() == req_status and
	t_end(o) ##0 tmp_buffer_abort() == peripheral_request_i_sig_abort_0 and
	t_end(o) ##0 tmp_buffer_addr() == peripheral_request_i_sig_addr_0 and
	t_end(o) ##0 tmp_buffer_data() == peripheral_request_i_sig_data_0 and
	t_end(o) ##0 tmp_buffer_opc() == peripheral_request_i_sig_opc_0;
endproperty;
NON_EMPTY_2_read_33_a: assert property (disable iff (reset) NON_EMPTY_2_read_33_p(1));// ASSIGN t_end offset here

property NON_EMPTY_2_read_34_p(o);
bool buffer2_var_abort_0;
int buffer2_var_addr_0;
int buffer2_var_data_0;
opc_t buffer2_var_opc_0;
bool peripheral_request_i_sig_abort_0;
int peripheral_request_i_sig_addr_0;
int peripheral_request_i_sig_data_0;
opc_t peripheral_request_i_sig_opc_0;
bool buffer3_sig_abort_0;
int buffer3_sig_addr_0;
int buffer3_sig_data_0;
opc_t buffer3_sig_opc_0;
bool req_o_sig_0;
req_status_t status1_sig_0;
req_status_t status2_sig_0;
req_status_t status3_sig_0;
bool buffer1_sig_abort_0;
int buffer1_sig_addr_0;
int buffer1_sig_data_0;
opc_t buffer1_sig_opc_0;
bool buffer2_sig_abort_0;
int buffer2_sig_addr_0;
int buffer2_sig_data_0;
opc_t buffer2_sig_opc_0;
// hold
	t ##0 hold(buffer2_var_abort_0, buffer2_var_abort()) and
	t ##0 hold(buffer2_var_addr_0, buffer2_var_addr()) and
	t ##0 hold(buffer2_var_data_0, buffer2_var_data()) and
	t ##0 hold(buffer2_var_opc_0, buffer2_var_opc()) and
	t ##0 hold(peripheral_request_i_sig_abort_0, peripheral_request_i_sig_abort()) and
	t ##0 hold(peripheral_request_i_sig_addr_0, peripheral_request_i_sig_addr()) and
	t ##0 hold(peripheral_request_i_sig_data_0, peripheral_request_i_sig_data()) and
	t ##0 hold(peripheral_request_i_sig_opc_0, peripheral_request_i_sig_opc()) and
	t ##0 hold(buffer3_sig_abort_0, buffer3_sig_abort()) and
	t ##0 hold(buffer3_sig_addr_0, buffer3_sig_addr()) and
	t ##0 hold(buffer3_sig_data_0, buffer3_sig_data()) and
	t ##0 hold(buffer3_sig_opc_0, buffer3_sig_opc()) and
	t ##0 hold(req_o_sig_0, req_o_sig()) and
	t ##0 hold(status1_sig_0, status1_sig()) and
	t ##0 hold(status2_sig_0, status2_sig()) and
	t ##0 hold(status3_sig_0, status3_sig()) and
	t ##0 hold(buffer1_sig_abort_0, buffer1_sig_abort()) and
	t ##0 hold(buffer1_sig_addr_0, buffer1_sig_addr()) and
	t ##0 hold(buffer1_sig_data_0, buffer1_sig_data()) and
	t ##0 hold(buffer1_sig_opc_0, buffer1_sig_opc()) and
	t ##0 hold(buffer2_sig_abort_0, buffer2_sig_abort()) and
	t ##0 hold(buffer2_sig_addr_0, buffer2_sig_addr()) and
	t ##0 hold(buffer2_sig_data_0, buffer2_sig_data()) and
	t ##0 hold(buffer2_sig_opc_0, buffer2_sig_opc()) and
// Conceptual State
	t ##0 NON_EMPTY_2() and
// trigger
	t ##0 updateQ_i_sync() and
	t ##0 (updateQ_i_sig() == nxt_grant_q) and
	t ##0 !((status1_var() == req_status)) and
	t ##0 (status2_var() == req_status) and
	t ##0 !((status1_var() == data_staus)) and
	t ##0 (status3_var() == empty_status) and
	t ##0 updateQ_i_sync()
implies
	t_end(o) ##0 NON_EMPTY_2() and
	t_end(o) ##0 buffer1_sig_abort() == buffer1_sig_abort_0 and
	t_end(o) ##0 buffer1_sig_addr() == buffer1_sig_addr_0 and
	t_end(o) ##0 buffer1_sig_data() == buffer1_sig_data_0 and
	t_end(o) ##0 buffer1_sig_opc() == buffer1_sig_opc_0 and
	t_end(o) ##0 buffer2_sig_abort() == buffer2_sig_abort_0 and
	t_end(o) ##0 buffer2_sig_addr() == buffer2_sig_addr_0 and
	t_end(o) ##0 buffer2_sig_data() == buffer2_sig_data_0 and
	t_end(o) ##0 buffer2_sig_opc() == buffer2_sig_opc_0 and
	t_end(o) ##0 buffer2_var_abort() == buffer2_var_abort_0 and
	t_end(o) ##0 buffer2_var_addr() == buffer2_var_addr_0 and
	t_end(o) ##0 buffer2_var_data() == buffer2_var_data_0 and
	t_end(o) ##0 buffer2_var_opc() == buffer2_var_opc_0 and
	t_end(o) ##0 buffer3_sig_abort() == buffer3_sig_abort_0 and
	t_end(o) ##0 buffer3_sig_addr() == buffer3_sig_addr_0 and
	t_end(o) ##0 buffer3_sig_data() == buffer3_sig_data_0 and
	t_end(o) ##0 buffer3_sig_opc() == buffer3_sig_opc_0 and
	t_end(o) ##0 buffer3_var_abort() == peripheral_request_i_sig_abort_0 and
	t_end(o) ##0 buffer3_var_addr() == peripheral_request_i_sig_addr_0 and
	t_end(o) ##0 buffer3_var_data() == peripheral_request_i_sig_data_0 and
	t_end(o) ##0 buffer3_var_opc() == peripheral_request_i_sig_opc_0 and
	t_end(o) ##0 req_o_sig() == req_o_sig_0 and
	t_end(o) ##0 status1_sig() == status1_sig_0 and
	t_end(o) ##0 status1_var() == data_staus and
	t_end(o) ##0 status2_sig() == status2_sig_0 and
	t_end(o) ##0 status2_var() == addr_status and
	t_end(o) ##0 status3_sig() == status3_sig_0 and
	t_end(o) ##0 status3_var() == req_status and
	t_end(o) ##0 tmp_buffer_abort() == peripheral_request_i_sig_abort_0 and
	t_end(o) ##0 tmp_buffer_addr() == peripheral_request_i_sig_addr_0 and
	t_end(o) ##0 tmp_buffer_data() == peripheral_request_i_sig_data_0 and
	t_end(o) ##0 tmp_buffer_opc() == peripheral_request_i_sig_opc_0;
endproperty;
NON_EMPTY_2_read_34_a: assert property (disable iff (reset) NON_EMPTY_2_read_34_p(1));// ASSIGN t_end offset here

property NON_EMPTY_2_read_35_p(o);
bool buffer3_var_abort_0;
int buffer3_var_addr_0;
int buffer3_var_data_0;
opc_t buffer3_var_opc_0;
req_status_t status2_var_0;
bool peripheral_request_i_sig_abort_0;
int peripheral_request_i_sig_addr_0;
int peripheral_request_i_sig_data_0;
opc_t peripheral_request_i_sig_opc_0;
bool buffer3_sig_abort_0;
int buffer3_sig_addr_0;
int buffer3_sig_data_0;
opc_t buffer3_sig_opc_0;
bool req_o_sig_0;
req_status_t status1_sig_0;
req_status_t status2_sig_0;
req_status_t status3_sig_0;
bool buffer1_sig_abort_0;
int buffer1_sig_addr_0;
int buffer1_sig_data_0;
opc_t buffer1_sig_opc_0;
bool buffer2_sig_abort_0;
int buffer2_sig_addr_0;
int buffer2_sig_data_0;
opc_t buffer2_sig_opc_0;
// hold
	t ##0 hold(buffer3_var_abort_0, buffer3_var_abort()) and
	t ##0 hold(buffer3_var_addr_0, buffer3_var_addr()) and
	t ##0 hold(buffer3_var_data_0, buffer3_var_data()) and
	t ##0 hold(buffer3_var_opc_0, buffer3_var_opc()) and
	t ##0 hold(status2_var_0, status2_var()) and
	t ##0 hold(peripheral_request_i_sig_abort_0, peripheral_request_i_sig_abort()) and
	t ##0 hold(peripheral_request_i_sig_addr_0, peripheral_request_i_sig_addr()) and
	t ##0 hold(peripheral_request_i_sig_data_0, peripheral_request_i_sig_data()) and
	t ##0 hold(peripheral_request_i_sig_opc_0, peripheral_request_i_sig_opc()) and
	t ##0 hold(buffer3_sig_abort_0, buffer3_sig_abort()) and
	t ##0 hold(buffer3_sig_addr_0, buffer3_sig_addr()) and
	t ##0 hold(buffer3_sig_data_0, buffer3_sig_data()) and
	t ##0 hold(buffer3_sig_opc_0, buffer3_sig_opc()) and
	t ##0 hold(req_o_sig_0, req_o_sig()) and
	t ##0 hold(status1_sig_0, status1_sig()) and
	t ##0 hold(status2_sig_0, status2_sig()) and
	t ##0 hold(status3_sig_0, status3_sig()) and
	t ##0 hold(buffer1_sig_abort_0, buffer1_sig_abort()) and
	t ##0 hold(buffer1_sig_addr_0, buffer1_sig_addr()) and
	t ##0 hold(buffer1_sig_data_0, buffer1_sig_data()) and
	t ##0 hold(buffer1_sig_opc_0, buffer1_sig_opc()) and
	t ##0 hold(buffer2_sig_abort_0, buffer2_sig_abort()) and
	t ##0 hold(buffer2_sig_addr_0, buffer2_sig_addr()) and
	t ##0 hold(buffer2_sig_data_0, buffer2_sig_data()) and
	t ##0 hold(buffer2_sig_opc_0, buffer2_sig_opc()) and
// Conceptual State
	t ##0 NON_EMPTY_2() and
// trigger
	t ##0 updateQ_i_sync() and
	t ##0 (updateQ_i_sig() == nxt_grant_q) and
	t ##0 !((status2_var() == req_status)) and
	t ##0 (status1_var() == empty_status) and
	t ##0 updateQ_i_sync()
implies
	t_end(o) ##0 NON_EMPTY_2() and
	t_end(o) ##0 buffer1_sig_abort() == buffer1_sig_abort_0 and
	t_end(o) ##0 buffer1_sig_addr() == buffer1_sig_addr_0 and
	t_end(o) ##0 buffer1_sig_data() == buffer1_sig_data_0 and
	t_end(o) ##0 buffer1_sig_opc() == buffer1_sig_opc_0 and
	t_end(o) ##0 buffer2_sig_abort() == buffer2_sig_abort_0 and
	t_end(o) ##0 buffer2_sig_addr() == buffer2_sig_addr_0 and
	t_end(o) ##0 buffer2_sig_data() == buffer2_sig_data_0 and
	t_end(o) ##0 buffer2_sig_opc() == buffer2_sig_opc_0 and
	t_end(o) ##0 buffer2_var_abort() == buffer3_var_abort_0 and
	t_end(o) ##0 buffer2_var_addr() == buffer3_var_addr_0 and
	t_end(o) ##0 buffer2_var_data() == buffer3_var_data_0 and
	t_end(o) ##0 buffer2_var_opc() == buffer3_var_opc_0 and
	t_end(o) ##0 buffer3_sig_abort() == buffer3_sig_abort_0 and
	t_end(o) ##0 buffer3_sig_addr() == buffer3_sig_addr_0 and
	t_end(o) ##0 buffer3_sig_data() == buffer3_sig_data_0 and
	t_end(o) ##0 buffer3_sig_opc() == buffer3_sig_opc_0 and
	t_end(o) ##0 buffer3_var_abort() == buffer3_var_abort_0 and
	t_end(o) ##0 buffer3_var_addr() == buffer3_var_addr_0 and
	t_end(o) ##0 buffer3_var_data() == buffer3_var_data_0 and
	t_end(o) ##0 buffer3_var_opc() == buffer3_var_opc_0 and
	t_end(o) ##0 req_o_sig() == req_o_sig_0 and
	t_end(o) ##0 status1_sig() == status1_sig_0 and
	t_end(o) ##0 status1_var() == req_status and
	t_end(o) ##0 status2_sig() == status2_sig_0 and
	t_end(o) ##0 status2_var() == status2_var_0 and
	t_end(o) ##0 status3_sig() == status3_sig_0 and
	t_end(o) ##0 status3_var() == empty_status and
	t_end(o) ##0 tmp_buffer_abort() == peripheral_request_i_sig_abort_0 and
	t_end(o) ##0 tmp_buffer_addr() == peripheral_request_i_sig_addr_0 and
	t_end(o) ##0 tmp_buffer_data() == peripheral_request_i_sig_data_0 and
	t_end(o) ##0 tmp_buffer_opc() == peripheral_request_i_sig_opc_0;
endproperty;
NON_EMPTY_2_read_35_a: assert property (disable iff (reset) NON_EMPTY_2_read_35_p(1));// ASSIGN t_end offset here

property NON_EMPTY_2_read_36_p(o);
bool buffer3_var_abort_0;
int buffer3_var_addr_0;
int buffer3_var_data_0;
opc_t buffer3_var_opc_0;
req_status_t status1_var_0;
bool peripheral_request_i_sig_abort_0;
int peripheral_request_i_sig_addr_0;
int peripheral_request_i_sig_data_0;
opc_t peripheral_request_i_sig_opc_0;
bool buffer3_sig_abort_0;
int buffer3_sig_addr_0;
int buffer3_sig_data_0;
opc_t buffer3_sig_opc_0;
bool req_o_sig_0;
req_status_t status1_sig_0;
req_status_t status2_sig_0;
req_status_t status3_sig_0;
bool buffer1_sig_abort_0;
int buffer1_sig_addr_0;
int buffer1_sig_data_0;
opc_t buffer1_sig_opc_0;
bool buffer2_sig_abort_0;
int buffer2_sig_addr_0;
int buffer2_sig_data_0;
opc_t buffer2_sig_opc_0;
// hold
	t ##0 hold(buffer3_var_abort_0, buffer3_var_abort()) and
	t ##0 hold(buffer3_var_addr_0, buffer3_var_addr()) and
	t ##0 hold(buffer3_var_data_0, buffer3_var_data()) and
	t ##0 hold(buffer3_var_opc_0, buffer3_var_opc()) and
	t ##0 hold(status1_var_0, status1_var()) and
	t ##0 hold(peripheral_request_i_sig_abort_0, peripheral_request_i_sig_abort()) and
	t ##0 hold(peripheral_request_i_sig_addr_0, peripheral_request_i_sig_addr()) and
	t ##0 hold(peripheral_request_i_sig_data_0, peripheral_request_i_sig_data()) and
	t ##0 hold(peripheral_request_i_sig_opc_0, peripheral_request_i_sig_opc()) and
	t ##0 hold(buffer3_sig_abort_0, buffer3_sig_abort()) and
	t ##0 hold(buffer3_sig_addr_0, buffer3_sig_addr()) and
	t ##0 hold(buffer3_sig_data_0, buffer3_sig_data()) and
	t ##0 hold(buffer3_sig_opc_0, buffer3_sig_opc()) and
	t ##0 hold(req_o_sig_0, req_o_sig()) and
	t ##0 hold(status1_sig_0, status1_sig()) and
	t ##0 hold(status2_sig_0, status2_sig()) and
	t ##0 hold(status3_sig_0, status3_sig()) and
	t ##0 hold(buffer1_sig_abort_0, buffer1_sig_abort()) and
	t ##0 hold(buffer1_sig_addr_0, buffer1_sig_addr()) and
	t ##0 hold(buffer1_sig_data_0, buffer1_sig_data()) and
	t ##0 hold(buffer1_sig_opc_0, buffer1_sig_opc()) and
	t ##0 hold(buffer2_sig_abort_0, buffer2_sig_abort()) and
	t ##0 hold(buffer2_sig_addr_0, buffer2_sig_addr()) and
	t ##0 hold(buffer2_sig_data_0, buffer2_sig_data()) and
	t ##0 hold(buffer2_sig_opc_0, buffer2_sig_opc()) and
// Conceptual State
	t ##0 NON_EMPTY_2() and
// trigger
	t ##0 updateQ_i_sync() and
	t ##0 (updateQ_i_sig() == nxt_grant_q) and
	t ##0 !((status1_var() == req_status)) and
	t ##0 !((status1_var() == empty_status)) and
	t ##0 (status2_var() == empty_status) and
	t ##0 updateQ_i_sync()
implies
	t_end(o) ##0 NON_EMPTY_2() and
	t_end(o) ##0 buffer1_sig_abort() == buffer1_sig_abort_0 and
	t_end(o) ##0 buffer1_sig_addr() == buffer1_sig_addr_0 and
	t_end(o) ##0 buffer1_sig_data() == buffer1_sig_data_0 and
	t_end(o) ##0 buffer1_sig_opc() == buffer1_sig_opc_0 and
	t_end(o) ##0 buffer2_sig_abort() == buffer2_sig_abort_0 and
	t_end(o) ##0 buffer2_sig_addr() == buffer2_sig_addr_0 and
	t_end(o) ##0 buffer2_sig_data() == buffer2_sig_data_0 and
	t_end(o) ##0 buffer2_sig_opc() == buffer2_sig_opc_0 and
	t_end(o) ##0 buffer2_var_abort() == peripheral_request_i_sig_abort_0 and
	t_end(o) ##0 buffer2_var_addr() == peripheral_request_i_sig_addr_0 and
	t_end(o) ##0 buffer2_var_data() == peripheral_request_i_sig_data_0 and
	t_end(o) ##0 buffer2_var_opc() == peripheral_request_i_sig_opc_0 and
	t_end(o) ##0 buffer3_sig_abort() == buffer3_sig_abort_0 and
	t_end(o) ##0 buffer3_sig_addr() == buffer3_sig_addr_0 and
	t_end(o) ##0 buffer3_sig_data() == buffer3_sig_data_0 and
	t_end(o) ##0 buffer3_sig_opc() == buffer3_sig_opc_0 and
	t_end(o) ##0 buffer3_var_abort() == buffer3_var_abort_0 and
	t_end(o) ##0 buffer3_var_addr() == buffer3_var_addr_0 and
	t_end(o) ##0 buffer3_var_data() == buffer3_var_data_0 and
	t_end(o) ##0 buffer3_var_opc() == buffer3_var_opc_0 and
	t_end(o) ##0 req_o_sig() == req_o_sig_0 and
	t_end(o) ##0 status1_sig() == status1_sig_0 and
	t_end(o) ##0 status1_var() == status1_var_0 and
	t_end(o) ##0 status2_sig() == status2_sig_0 and
	t_end(o) ##0 status2_var() == req_status and
	t_end(o) ##0 status3_sig() == status3_sig_0 and
	t_end(o) ##0 status3_var() == empty_status and
	t_end(o) ##0 tmp_buffer_abort() == peripheral_request_i_sig_abort_0 and
	t_end(o) ##0 tmp_buffer_addr() == peripheral_request_i_sig_addr_0 and
	t_end(o) ##0 tmp_buffer_data() == peripheral_request_i_sig_data_0 and
	t_end(o) ##0 tmp_buffer_opc() == peripheral_request_i_sig_opc_0;
endproperty;
NON_EMPTY_2_read_36_a: assert property (disable iff (reset) NON_EMPTY_2_read_36_p(1));// ASSIGN t_end offset here

property NON_EMPTY_2_read_37_p(o);
bool buffer3_var_abort_0;
int buffer3_var_addr_0;
int buffer3_var_data_0;
opc_t buffer3_var_opc_0;
req_status_t status1_var_0;
req_status_t status2_var_0;
bool peripheral_request_i_sig_abort_0;
int peripheral_request_i_sig_addr_0;
int peripheral_request_i_sig_data_0;
opc_t peripheral_request_i_sig_opc_0;
bool buffer3_sig_abort_0;
int buffer3_sig_addr_0;
int buffer3_sig_data_0;
opc_t buffer3_sig_opc_0;
bool req_o_sig_0;
req_status_t status1_sig_0;
req_status_t status2_sig_0;
req_status_t status3_sig_0;
bool buffer1_sig_abort_0;
int buffer1_sig_addr_0;
int buffer1_sig_data_0;
opc_t buffer1_sig_opc_0;
bool buffer2_sig_abort_0;
int buffer2_sig_addr_0;
int buffer2_sig_data_0;
opc_t buffer2_sig_opc_0;
// hold
	t ##0 hold(buffer3_var_abort_0, buffer3_var_abort()) and
	t ##0 hold(buffer3_var_addr_0, buffer3_var_addr()) and
	t ##0 hold(buffer3_var_data_0, buffer3_var_data()) and
	t ##0 hold(buffer3_var_opc_0, buffer3_var_opc()) and
	t ##0 hold(status1_var_0, status1_var()) and
	t ##0 hold(status2_var_0, status2_var()) and
	t ##0 hold(peripheral_request_i_sig_abort_0, peripheral_request_i_sig_abort()) and
	t ##0 hold(peripheral_request_i_sig_addr_0, peripheral_request_i_sig_addr()) and
	t ##0 hold(peripheral_request_i_sig_data_0, peripheral_request_i_sig_data()) and
	t ##0 hold(peripheral_request_i_sig_opc_0, peripheral_request_i_sig_opc()) and
	t ##0 hold(buffer3_sig_abort_0, buffer3_sig_abort()) and
	t ##0 hold(buffer3_sig_addr_0, buffer3_sig_addr()) and
	t ##0 hold(buffer3_sig_data_0, buffer3_sig_data()) and
	t ##0 hold(buffer3_sig_opc_0, buffer3_sig_opc()) and
	t ##0 hold(req_o_sig_0, req_o_sig()) and
	t ##0 hold(status1_sig_0, status1_sig()) and
	t ##0 hold(status2_sig_0, status2_sig()) and
	t ##0 hold(status3_sig_0, status3_sig()) and
	t ##0 hold(buffer1_sig_abort_0, buffer1_sig_abort()) and
	t ##0 hold(buffer1_sig_addr_0, buffer1_sig_addr()) and
	t ##0 hold(buffer1_sig_data_0, buffer1_sig_data()) and
	t ##0 hold(buffer1_sig_opc_0, buffer1_sig_opc()) and
	t ##0 hold(buffer2_sig_abort_0, buffer2_sig_abort()) and
	t ##0 hold(buffer2_sig_addr_0, buffer2_sig_addr()) and
	t ##0 hold(buffer2_sig_data_0, buffer2_sig_data()) and
	t ##0 hold(buffer2_sig_opc_0, buffer2_sig_opc()) and
// Conceptual State
	t ##0 NON_EMPTY_2() and
// trigger
	t ##0 updateQ_i_sync() and
	t ##0 (updateQ_i_sig() == nxt_grant_q) and
	t ##0 !((status1_var() == req_status)) and
	t ##0 !((status2_var() == req_status)) and
	t ##0 !((status1_var() == empty_status)) and
	t ##0 !((status2_var() == empty_status)) and
	t ##0 updateQ_i_sync()
implies
	t_end(o) ##0 NON_EMPTY_2() and
	t_end(o) ##0 buffer1_sig_abort() == buffer1_sig_abort_0 and
	t_end(o) ##0 buffer1_sig_addr() == buffer1_sig_addr_0 and
	t_end(o) ##0 buffer1_sig_data() == buffer1_sig_data_0 and
	t_end(o) ##0 buffer1_sig_opc() == buffer1_sig_opc_0 and
	t_end(o) ##0 buffer2_sig_abort() == buffer2_sig_abort_0 and
	t_end(o) ##0 buffer2_sig_addr() == buffer2_sig_addr_0 and
	t_end(o) ##0 buffer2_sig_data() == buffer2_sig_data_0 and
	t_end(o) ##0 buffer2_sig_opc() == buffer2_sig_opc_0 and
	t_end(o) ##0 buffer2_var_abort() == buffer3_var_abort_0 and
	t_end(o) ##0 buffer2_var_addr() == buffer3_var_addr_0 and
	t_end(o) ##0 buffer2_var_data() == buffer3_var_data_0 and
	t_end(o) ##0 buffer2_var_opc() == buffer3_var_opc_0 and
	t_end(o) ##0 buffer3_sig_abort() == buffer3_sig_abort_0 and
	t_end(o) ##0 buffer3_sig_addr() == buffer3_sig_addr_0 and
	t_end(o) ##0 buffer3_sig_data() == buffer3_sig_data_0 and
	t_end(o) ##0 buffer3_sig_opc() == buffer3_sig_opc_0 and
	t_end(o) ##0 buffer3_var_abort() == peripheral_request_i_sig_abort_0 and
	t_end(o) ##0 buffer3_var_addr() == peripheral_request_i_sig_addr_0 and
	t_end(o) ##0 buffer3_var_data() == peripheral_request_i_sig_data_0 and
	t_end(o) ##0 buffer3_var_opc() == peripheral_request_i_sig_opc_0 and
	t_end(o) ##0 req_o_sig() == req_o_sig_0 and
	t_end(o) ##0 status1_sig() == status1_sig_0 and
	t_end(o) ##0 status1_var() == status1_var_0 and
	t_end(o) ##0 status2_sig() == status2_sig_0 and
	t_end(o) ##0 status2_var() == status2_var_0 and
	t_end(o) ##0 status3_sig() == status3_sig_0 and
	t_end(o) ##0 status3_var() == req_status and
	t_end(o) ##0 tmp_buffer_abort() == peripheral_request_i_sig_abort_0 and
	t_end(o) ##0 tmp_buffer_addr() == peripheral_request_i_sig_addr_0 and
	t_end(o) ##0 tmp_buffer_data() == peripheral_request_i_sig_data_0 and
	t_end(o) ##0 tmp_buffer_opc() == peripheral_request_i_sig_opc_0;
endproperty;
NON_EMPTY_2_read_37_a: assert property (disable iff (reset) NON_EMPTY_2_read_37_p(1));// ASSIGN t_end offset here

property NON_EMPTY_2_read_38_p(o);
bool buffer2_var_abort_0;
int buffer2_var_addr_0;
int buffer2_var_data_0;
opc_t buffer2_var_opc_0;
bool peripheral_request_i_sig_abort_0;
int peripheral_request_i_sig_addr_0;
int peripheral_request_i_sig_data_0;
opc_t peripheral_request_i_sig_opc_0;
bool buffer3_sig_abort_0;
int buffer3_sig_addr_0;
int buffer3_sig_data_0;
opc_t buffer3_sig_opc_0;
bool req_o_sig_0;
req_status_t status1_sig_0;
req_status_t status2_sig_0;
req_status_t status3_sig_0;
bool buffer1_sig_abort_0;
int buffer1_sig_addr_0;
int buffer1_sig_data_0;
opc_t buffer1_sig_opc_0;
bool buffer2_sig_abort_0;
int buffer2_sig_addr_0;
int buffer2_sig_data_0;
opc_t buffer2_sig_opc_0;
// hold
	t ##0 hold(buffer2_var_abort_0, buffer2_var_abort()) and
	t ##0 hold(buffer2_var_addr_0, buffer2_var_addr()) and
	t ##0 hold(buffer2_var_data_0, buffer2_var_data()) and
	t ##0 hold(buffer2_var_opc_0, buffer2_var_opc()) and
	t ##0 hold(peripheral_request_i_sig_abort_0, peripheral_request_i_sig_abort()) and
	t ##0 hold(peripheral_request_i_sig_addr_0, peripheral_request_i_sig_addr()) and
	t ##0 hold(peripheral_request_i_sig_data_0, peripheral_request_i_sig_data()) and
	t ##0 hold(peripheral_request_i_sig_opc_0, peripheral_request_i_sig_opc()) and
	t ##0 hold(buffer3_sig_abort_0, buffer3_sig_abort()) and
	t ##0 hold(buffer3_sig_addr_0, buffer3_sig_addr()) and
	t ##0 hold(buffer3_sig_data_0, buffer3_sig_data()) and
	t ##0 hold(buffer3_sig_opc_0, buffer3_sig_opc()) and
	t ##0 hold(req_o_sig_0, req_o_sig()) and
	t ##0 hold(status1_sig_0, status1_sig()) and
	t ##0 hold(status2_sig_0, status2_sig()) and
	t ##0 hold(status3_sig_0, status3_sig()) and
	t ##0 hold(buffer1_sig_abort_0, buffer1_sig_abort()) and
	t ##0 hold(buffer1_sig_addr_0, buffer1_sig_addr()) and
	t ##0 hold(buffer1_sig_data_0, buffer1_sig_data()) and
	t ##0 hold(buffer1_sig_opc_0, buffer1_sig_opc()) and
	t ##0 hold(buffer2_sig_abort_0, buffer2_sig_abort()) and
	t ##0 hold(buffer2_sig_addr_0, buffer2_sig_addr()) and
	t ##0 hold(buffer2_sig_data_0, buffer2_sig_data()) and
	t ##0 hold(buffer2_sig_opc_0, buffer2_sig_opc()) and
// Conceptual State
	t ##0 NON_EMPTY_2() and
// trigger
	t ##0 updateQ_i_sync() and
	t ##0 !((updateQ_i_sig() == nxt_grant_q)) and
	t ##0 !((updateQ_i_sig() == nxt_phase_q)) and
	t ##0 !((updateQ_i_sig() == nxt_btr_q)) and
	t ##0 (status2_var() == addr_status) and
	t ##0 (status3_var() == empty_status) and
	t ##0 updateQ_i_sync()
implies
	t_end(o) ##0 NON_EMPTY_2() and
	t_end(o) ##0 buffer1_sig_abort() == buffer1_sig_abort_0 and
	t_end(o) ##0 buffer1_sig_addr() == buffer1_sig_addr_0 and
	t_end(o) ##0 buffer1_sig_data() == buffer1_sig_data_0 and
	t_end(o) ##0 buffer1_sig_opc() == buffer1_sig_opc_0 and
	t_end(o) ##0 buffer2_sig_abort() == buffer2_sig_abort_0 and
	t_end(o) ##0 buffer2_sig_addr() == buffer2_sig_addr_0 and
	t_end(o) ##0 buffer2_sig_data() == buffer2_sig_data_0 and
	t_end(o) ##0 buffer2_sig_opc() == buffer2_sig_opc_0 and
	t_end(o) ##0 buffer2_var_abort() == buffer2_var_abort_0 and
	t_end(o) ##0 buffer2_var_addr() == buffer2_var_addr_0 and
	t_end(o) ##0 buffer2_var_data() == buffer2_var_data_0 and
	t_end(o) ##0 buffer2_var_opc() == buffer2_var_opc_0 and
	t_end(o) ##0 buffer3_sig_abort() == buffer3_sig_abort_0 and
	t_end(o) ##0 buffer3_sig_addr() == buffer3_sig_addr_0 and
	t_end(o) ##0 buffer3_sig_data() == buffer3_sig_data_0 and
	t_end(o) ##0 buffer3_sig_opc() == buffer3_sig_opc_0 and
	t_end(o) ##0 buffer3_var_abort() == peripheral_request_i_sig_abort_0 and
	t_end(o) ##0 buffer3_var_addr() == peripheral_request_i_sig_addr_0 and
	t_end(o) ##0 buffer3_var_data() == peripheral_request_i_sig_data_0 and
	t_end(o) ##0 buffer3_var_opc() == peripheral_request_i_sig_opc_0 and
	t_end(o) ##0 req_o_sig() == req_o_sig_0 and
	t_end(o) ##0 status1_sig() == status1_sig_0 and
	t_end(o) ##0 status1_var() == req_status and
	t_end(o) ##0 status2_sig() == status2_sig_0 and
	t_end(o) ##0 status2_var() == req_status and
	t_end(o) ##0 status3_sig() == status3_sig_0 and
	t_end(o) ##0 status3_var() == req_status and
	t_end(o) ##0 tmp_buffer_abort() == peripheral_request_i_sig_abort_0 and
	t_end(o) ##0 tmp_buffer_addr() == peripheral_request_i_sig_addr_0 and
	t_end(o) ##0 tmp_buffer_data() == peripheral_request_i_sig_data_0 and
	t_end(o) ##0 tmp_buffer_opc() == peripheral_request_i_sig_opc_0;
endproperty;
NON_EMPTY_2_read_38_a: assert property (disable iff (reset) NON_EMPTY_2_read_38_p(1));// ASSIGN t_end offset here

property NON_EMPTY_2_read_39_p(o);
bool buffer3_var_abort_0;
int buffer3_var_addr_0;
int buffer3_var_data_0;
opc_t buffer3_var_opc_0;
req_status_t status2_var_0;
bool peripheral_request_i_sig_abort_0;
int peripheral_request_i_sig_addr_0;
int peripheral_request_i_sig_data_0;
opc_t peripheral_request_i_sig_opc_0;
bool buffer3_sig_abort_0;
int buffer3_sig_addr_0;
int buffer3_sig_data_0;
opc_t buffer3_sig_opc_0;
bool req_o_sig_0;
req_status_t status1_sig_0;
req_status_t status2_sig_0;
req_status_t status3_sig_0;
bool buffer1_sig_abort_0;
int buffer1_sig_addr_0;
int buffer1_sig_data_0;
opc_t buffer1_sig_opc_0;
bool buffer2_sig_abort_0;
int buffer2_sig_addr_0;
int buffer2_sig_data_0;
opc_t buffer2_sig_opc_0;
// hold
	t ##0 hold(buffer3_var_abort_0, buffer3_var_abort()) and
	t ##0 hold(buffer3_var_addr_0, buffer3_var_addr()) and
	t ##0 hold(buffer3_var_data_0, buffer3_var_data()) and
	t ##0 hold(buffer3_var_opc_0, buffer3_var_opc()) and
	t ##0 hold(status2_var_0, status2_var()) and
	t ##0 hold(peripheral_request_i_sig_abort_0, peripheral_request_i_sig_abort()) and
	t ##0 hold(peripheral_request_i_sig_addr_0, peripheral_request_i_sig_addr()) and
	t ##0 hold(peripheral_request_i_sig_data_0, peripheral_request_i_sig_data()) and
	t ##0 hold(peripheral_request_i_sig_opc_0, peripheral_request_i_sig_opc()) and
	t ##0 hold(buffer3_sig_abort_0, buffer3_sig_abort()) and
	t ##0 hold(buffer3_sig_addr_0, buffer3_sig_addr()) and
	t ##0 hold(buffer3_sig_data_0, buffer3_sig_data()) and
	t ##0 hold(buffer3_sig_opc_0, buffer3_sig_opc()) and
	t ##0 hold(req_o_sig_0, req_o_sig()) and
	t ##0 hold(status1_sig_0, status1_sig()) and
	t ##0 hold(status2_sig_0, status2_sig()) and
	t ##0 hold(status3_sig_0, status3_sig()) and
	t ##0 hold(buffer1_sig_abort_0, buffer1_sig_abort()) and
	t ##0 hold(buffer1_sig_addr_0, buffer1_sig_addr()) and
	t ##0 hold(buffer1_sig_data_0, buffer1_sig_data()) and
	t ##0 hold(buffer1_sig_opc_0, buffer1_sig_opc()) and
	t ##0 hold(buffer2_sig_abort_0, buffer2_sig_abort()) and
	t ##0 hold(buffer2_sig_addr_0, buffer2_sig_addr()) and
	t ##0 hold(buffer2_sig_data_0, buffer2_sig_data()) and
	t ##0 hold(buffer2_sig_opc_0, buffer2_sig_opc()) and
// Conceptual State
	t ##0 NON_EMPTY_2() and
// trigger
	t ##0 updateQ_i_sync() and
	t ##0 (updateQ_i_sig() == nxt_phase_q) and
	t ##0 (status1_var() == data_staus) and
	t ##0 (status2_var() == addr_status) and
	t ##0 updateQ_i_sync()
implies
	t_end(o) ##0 NON_EMPTY_2() and
	t_end(o) ##0 buffer1_sig_abort() == buffer1_sig_abort_0 and
	t_end(o) ##0 buffer1_sig_addr() == buffer1_sig_addr_0 and
	t_end(o) ##0 buffer1_sig_data() == buffer1_sig_data_0 and
	t_end(o) ##0 buffer1_sig_opc() == buffer1_sig_opc_0 and
	t_end(o) ##0 buffer2_sig_abort() == buffer2_sig_abort_0 and
	t_end(o) ##0 buffer2_sig_addr() == buffer2_sig_addr_0 and
	t_end(o) ##0 buffer2_sig_data() == buffer2_sig_data_0 and
	t_end(o) ##0 buffer2_sig_opc() == buffer2_sig_opc_0 and
	t_end(o) ##0 buffer2_var_abort() == buffer3_var_abort_0 and
	t_end(o) ##0 buffer2_var_addr() == buffer3_var_addr_0 and
	t_end(o) ##0 buffer2_var_data() == buffer3_var_data_0 and
	t_end(o) ##0 buffer2_var_opc() == buffer3_var_opc_0 and
	t_end(o) ##0 buffer3_sig_abort() == buffer3_sig_abort_0 and
	t_end(o) ##0 buffer3_sig_addr() == buffer3_sig_addr_0 and
	t_end(o) ##0 buffer3_sig_data() == buffer3_sig_data_0 and
	t_end(o) ##0 buffer3_sig_opc() == buffer3_sig_opc_0 and
	t_end(o) ##0 buffer3_var_abort() == peripheral_request_i_sig_abort_0 and
	t_end(o) ##0 buffer3_var_addr() == peripheral_request_i_sig_addr_0 and
	t_end(o) ##0 buffer3_var_data() == peripheral_request_i_sig_data_0 and
	t_end(o) ##0 buffer3_var_opc() == peripheral_request_i_sig_opc_0 and
	t_end(o) ##0 req_o_sig() == req_o_sig_0 and
	t_end(o) ##0 status1_sig() == status1_sig_0 and
	t_end(o) ##0 status1_var() == data_staus and
	t_end(o) ##0 status2_sig() == status2_sig_0 and
	t_end(o) ##0 status2_var() == status2_var_0 and
	t_end(o) ##0 status3_sig() == status3_sig_0 and
	t_end(o) ##0 status3_var() == req_status and
	t_end(o) ##0 tmp_buffer_abort() == peripheral_request_i_sig_abort_0 and
	t_end(o) ##0 tmp_buffer_addr() == peripheral_request_i_sig_addr_0 and
	t_end(o) ##0 tmp_buffer_data() == peripheral_request_i_sig_data_0 and
	t_end(o) ##0 tmp_buffer_opc() == peripheral_request_i_sig_opc_0;
endproperty;
NON_EMPTY_2_read_39_a: assert property (disable iff (reset) NON_EMPTY_2_read_39_p(1));// ASSIGN t_end offset here

property NON_EMPTY_2_read_40_p(o);
bool buffer3_var_abort_0;
int buffer3_var_addr_0;
int buffer3_var_data_0;
opc_t buffer3_var_opc_0;
req_status_t status2_var_0;
bool peripheral_request_i_sig_abort_0;
int peripheral_request_i_sig_addr_0;
int peripheral_request_i_sig_data_0;
opc_t peripheral_request_i_sig_opc_0;
bool buffer3_sig_abort_0;
int buffer3_sig_addr_0;
int buffer3_sig_data_0;
opc_t buffer3_sig_opc_0;
bool req_o_sig_0;
req_status_t status1_sig_0;
req_status_t status2_sig_0;
req_status_t status3_sig_0;
bool buffer1_sig_abort_0;
int buffer1_sig_addr_0;
int buffer1_sig_data_0;
opc_t buffer1_sig_opc_0;
bool buffer2_sig_abort_0;
int buffer2_sig_addr_0;
int buffer2_sig_data_0;
opc_t buffer2_sig_opc_0;
// hold
	t ##0 hold(buffer3_var_abort_0, buffer3_var_abort()) and
	t ##0 hold(buffer3_var_addr_0, buffer3_var_addr()) and
	t ##0 hold(buffer3_var_data_0, buffer3_var_data()) and
	t ##0 hold(buffer3_var_opc_0, buffer3_var_opc()) and
	t ##0 hold(status2_var_0, status2_var()) and
	t ##0 hold(peripheral_request_i_sig_abort_0, peripheral_request_i_sig_abort()) and
	t ##0 hold(peripheral_request_i_sig_addr_0, peripheral_request_i_sig_addr()) and
	t ##0 hold(peripheral_request_i_sig_data_0, peripheral_request_i_sig_data()) and
	t ##0 hold(peripheral_request_i_sig_opc_0, peripheral_request_i_sig_opc()) and
	t ##0 hold(buffer3_sig_abort_0, buffer3_sig_abort()) and
	t ##0 hold(buffer3_sig_addr_0, buffer3_sig_addr()) and
	t ##0 hold(buffer3_sig_data_0, buffer3_sig_data()) and
	t ##0 hold(buffer3_sig_opc_0, buffer3_sig_opc()) and
	t ##0 hold(req_o_sig_0, req_o_sig()) and
	t ##0 hold(status1_sig_0, status1_sig()) and
	t ##0 hold(status2_sig_0, status2_sig()) and
	t ##0 hold(status3_sig_0, status3_sig()) and
	t ##0 hold(buffer1_sig_abort_0, buffer1_sig_abort()) and
	t ##0 hold(buffer1_sig_addr_0, buffer1_sig_addr()) and
	t ##0 hold(buffer1_sig_data_0, buffer1_sig_data()) and
	t ##0 hold(buffer1_sig_opc_0, buffer1_sig_opc()) and
	t ##0 hold(buffer2_sig_abort_0, buffer2_sig_abort()) and
	t ##0 hold(buffer2_sig_addr_0, buffer2_sig_addr()) and
	t ##0 hold(buffer2_sig_data_0, buffer2_sig_data()) and
	t ##0 hold(buffer2_sig_opc_0, buffer2_sig_opc()) and
// Conceptual State
	t ##0 NON_EMPTY_2() and
// trigger
	t ##0 updateQ_i_sync() and
	t ##0 (updateQ_i_sig() == nxt_phase_q) and
	t ##0 (status1_var() == data_staus) and
	t ##0 (status2_var() == empty_status) and
	t ##0 updateQ_i_sync()
implies
	t_end(o) ##0 NON_EMPTY_2() and
	t_end(o) ##0 buffer1_sig_abort() == buffer1_sig_abort_0 and
	t_end(o) ##0 buffer1_sig_addr() == buffer1_sig_addr_0 and
	t_end(o) ##0 buffer1_sig_data() == buffer1_sig_data_0 and
	t_end(o) ##0 buffer1_sig_opc() == buffer1_sig_opc_0 and
	t_end(o) ##0 buffer2_sig_abort() == buffer2_sig_abort_0 and
	t_end(o) ##0 buffer2_sig_addr() == buffer2_sig_addr_0 and
	t_end(o) ##0 buffer2_sig_data() == buffer2_sig_data_0 and
	t_end(o) ##0 buffer2_sig_opc() == buffer2_sig_opc_0 and
	t_end(o) ##0 buffer2_var_abort() == buffer3_var_abort_0 and
	t_end(o) ##0 buffer2_var_addr() == buffer3_var_addr_0 and
	t_end(o) ##0 buffer2_var_data() == buffer3_var_data_0 and
	t_end(o) ##0 buffer2_var_opc() == buffer3_var_opc_0 and
	t_end(o) ##0 buffer3_sig_abort() == buffer3_sig_abort_0 and
	t_end(o) ##0 buffer3_sig_addr() == buffer3_sig_addr_0 and
	t_end(o) ##0 buffer3_sig_data() == buffer3_sig_data_0 and
	t_end(o) ##0 buffer3_sig_opc() == buffer3_sig_opc_0 and
	t_end(o) ##0 buffer3_var_abort() == buffer3_var_abort_0 and
	t_end(o) ##0 buffer3_var_addr() == buffer3_var_addr_0 and
	t_end(o) ##0 buffer3_var_data() == buffer3_var_data_0 and
	t_end(o) ##0 buffer3_var_opc() == buffer3_var_opc_0 and
	t_end(o) ##0 req_o_sig() == req_o_sig_0 and
	t_end(o) ##0 status1_sig() == status1_sig_0 and
	t_end(o) ##0 status1_var() == req_status and
	t_end(o) ##0 status2_sig() == status2_sig_0 and
	t_end(o) ##0 status2_var() == status2_var_0 and
	t_end(o) ##0 status3_sig() == status3_sig_0 and
	t_end(o) ##0 status3_var() == empty_status and
	t_end(o) ##0 tmp_buffer_abort() == peripheral_request_i_sig_abort_0 and
	t_end(o) ##0 tmp_buffer_addr() == peripheral_request_i_sig_addr_0 and
	t_end(o) ##0 tmp_buffer_data() == peripheral_request_i_sig_data_0 and
	t_end(o) ##0 tmp_buffer_opc() == peripheral_request_i_sig_opc_0;
endproperty;
NON_EMPTY_2_read_40_a: assert property (disable iff (reset) NON_EMPTY_2_read_40_p(1));// ASSIGN t_end offset here

property NON_EMPTY_2_read_41_p(o);
bool buffer3_var_abort_0;
int buffer3_var_addr_0;
int buffer3_var_data_0;
opc_t buffer3_var_opc_0;
req_status_t status2_var_0;
bool peripheral_request_i_sig_abort_0;
int peripheral_request_i_sig_addr_0;
int peripheral_request_i_sig_data_0;
opc_t peripheral_request_i_sig_opc_0;
bool buffer3_sig_abort_0;
int buffer3_sig_addr_0;
int buffer3_sig_data_0;
opc_t buffer3_sig_opc_0;
bool req_o_sig_0;
req_status_t status1_sig_0;
req_status_t status2_sig_0;
req_status_t status3_sig_0;
bool buffer1_sig_abort_0;
int buffer1_sig_addr_0;
int buffer1_sig_data_0;
opc_t buffer1_sig_opc_0;
bool buffer2_sig_abort_0;
int buffer2_sig_addr_0;
int buffer2_sig_data_0;
opc_t buffer2_sig_opc_0;
// hold
	t ##0 hold(buffer3_var_abort_0, buffer3_var_abort()) and
	t ##0 hold(buffer3_var_addr_0, buffer3_var_addr()) and
	t ##0 hold(buffer3_var_data_0, buffer3_var_data()) and
	t ##0 hold(buffer3_var_opc_0, buffer3_var_opc()) and
	t ##0 hold(status2_var_0, status2_var()) and
	t ##0 hold(peripheral_request_i_sig_abort_0, peripheral_request_i_sig_abort()) and
	t ##0 hold(peripheral_request_i_sig_addr_0, peripheral_request_i_sig_addr()) and
	t ##0 hold(peripheral_request_i_sig_data_0, peripheral_request_i_sig_data()) and
	t ##0 hold(peripheral_request_i_sig_opc_0, peripheral_request_i_sig_opc()) and
	t ##0 hold(buffer3_sig_abort_0, buffer3_sig_abort()) and
	t ##0 hold(buffer3_sig_addr_0, buffer3_sig_addr()) and
	t ##0 hold(buffer3_sig_data_0, buffer3_sig_data()) and
	t ##0 hold(buffer3_sig_opc_0, buffer3_sig_opc()) and
	t ##0 hold(req_o_sig_0, req_o_sig()) and
	t ##0 hold(status1_sig_0, status1_sig()) and
	t ##0 hold(status2_sig_0, status2_sig()) and
	t ##0 hold(status3_sig_0, status3_sig()) and
	t ##0 hold(buffer1_sig_abort_0, buffer1_sig_abort()) and
	t ##0 hold(buffer1_sig_addr_0, buffer1_sig_addr()) and
	t ##0 hold(buffer1_sig_data_0, buffer1_sig_data()) and
	t ##0 hold(buffer1_sig_opc_0, buffer1_sig_opc()) and
	t ##0 hold(buffer2_sig_abort_0, buffer2_sig_abort()) and
	t ##0 hold(buffer2_sig_addr_0, buffer2_sig_addr()) and
	t ##0 hold(buffer2_sig_data_0, buffer2_sig_data()) and
	t ##0 hold(buffer2_sig_opc_0, buffer2_sig_opc()) and
// Conceptual State
	t ##0 NON_EMPTY_2() and
// trigger
	t ##0 updateQ_i_sync() and
	t ##0 (updateQ_i_sig() == nxt_phase_q) and
	t ##0 (status1_var() == data_staus) and
	t ##0 !((status2_var() == addr_status)) and
	t ##0 !((status2_var() == empty_status)) and
	t ##0 updateQ_i_sync()
implies
	t_end(o) ##0 NON_EMPTY_2() and
	t_end(o) ##0 buffer1_sig_abort() == buffer1_sig_abort_0 and
	t_end(o) ##0 buffer1_sig_addr() == buffer1_sig_addr_0 and
	t_end(o) ##0 buffer1_sig_data() == buffer1_sig_data_0 and
	t_end(o) ##0 buffer1_sig_opc() == buffer1_sig_opc_0 and
	t_end(o) ##0 buffer2_sig_abort() == buffer2_sig_abort_0 and
	t_end(o) ##0 buffer2_sig_addr() == buffer2_sig_addr_0 and
	t_end(o) ##0 buffer2_sig_data() == buffer2_sig_data_0 and
	t_end(o) ##0 buffer2_sig_opc() == buffer2_sig_opc_0 and
	t_end(o) ##0 buffer2_var_abort() == buffer3_var_abort_0 and
	t_end(o) ##0 buffer2_var_addr() == buffer3_var_addr_0 and
	t_end(o) ##0 buffer2_var_data() == buffer3_var_data_0 and
	t_end(o) ##0 buffer2_var_opc() == buffer3_var_opc_0 and
	t_end(o) ##0 buffer3_sig_abort() == buffer3_sig_abort_0 and
	t_end(o) ##0 buffer3_sig_addr() == buffer3_sig_addr_0 and
	t_end(o) ##0 buffer3_sig_data() == buffer3_sig_data_0 and
	t_end(o) ##0 buffer3_sig_opc() == buffer3_sig_opc_0 and
	t_end(o) ##0 buffer3_var_abort() == peripheral_request_i_sig_abort_0 and
	t_end(o) ##0 buffer3_var_addr() == peripheral_request_i_sig_addr_0 and
	t_end(o) ##0 buffer3_var_data() == peripheral_request_i_sig_data_0 and
	t_end(o) ##0 buffer3_var_opc() == peripheral_request_i_sig_opc_0 and
	t_end(o) ##0 req_o_sig() == req_o_sig_0 and
	t_end(o) ##0 status1_sig() == status1_sig_0 and
	t_end(o) ##0 status1_var() == status2_var_0 and
	t_end(o) ##0 status2_sig() == status2_sig_0 and
	t_end(o) ##0 status2_var() == status2_var_0 and
	t_end(o) ##0 status3_sig() == status3_sig_0 and
	t_end(o) ##0 status3_var() == req_status and
	t_end(o) ##0 tmp_buffer_abort() == peripheral_request_i_sig_abort_0 and
	t_end(o) ##0 tmp_buffer_addr() == peripheral_request_i_sig_addr_0 and
	t_end(o) ##0 tmp_buffer_data() == peripheral_request_i_sig_data_0 and
	t_end(o) ##0 tmp_buffer_opc() == peripheral_request_i_sig_opc_0;
endproperty;
NON_EMPTY_2_read_41_a: assert property (disable iff (reset) NON_EMPTY_2_read_41_p(1));// ASSIGN t_end offset here

property NON_EMPTY_2_read_42_p(o);
bool buffer3_var_abort_0;
int buffer3_var_addr_0;
int buffer3_var_data_0;
opc_t buffer3_var_opc_0;
bool peripheral_request_i_sig_abort_0;
int peripheral_request_i_sig_addr_0;
int peripheral_request_i_sig_data_0;
opc_t peripheral_request_i_sig_opc_0;
bool buffer3_sig_abort_0;
int buffer3_sig_addr_0;
int buffer3_sig_data_0;
opc_t buffer3_sig_opc_0;
bool req_o_sig_0;
req_status_t status1_sig_0;
req_status_t status2_sig_0;
req_status_t status3_sig_0;
bool buffer1_sig_abort_0;
int buffer1_sig_addr_0;
int buffer1_sig_data_0;
opc_t buffer1_sig_opc_0;
bool buffer2_sig_abort_0;
int buffer2_sig_addr_0;
int buffer2_sig_data_0;
opc_t buffer2_sig_opc_0;
// hold
	t ##0 hold(buffer3_var_abort_0, buffer3_var_abort()) and
	t ##0 hold(buffer3_var_addr_0, buffer3_var_addr()) and
	t ##0 hold(buffer3_var_data_0, buffer3_var_data()) and
	t ##0 hold(buffer3_var_opc_0, buffer3_var_opc()) and
	t ##0 hold(peripheral_request_i_sig_abort_0, peripheral_request_i_sig_abort()) and
	t ##0 hold(peripheral_request_i_sig_addr_0, peripheral_request_i_sig_addr()) and
	t ##0 hold(peripheral_request_i_sig_data_0, peripheral_request_i_sig_data()) and
	t ##0 hold(peripheral_request_i_sig_opc_0, peripheral_request_i_sig_opc()) and
	t ##0 hold(buffer3_sig_abort_0, buffer3_sig_abort()) and
	t ##0 hold(buffer3_sig_addr_0, buffer3_sig_addr()) and
	t ##0 hold(buffer3_sig_data_0, buffer3_sig_data()) and
	t ##0 hold(buffer3_sig_opc_0, buffer3_sig_opc()) and
	t ##0 hold(req_o_sig_0, req_o_sig()) and
	t ##0 hold(status1_sig_0, status1_sig()) and
	t ##0 hold(status2_sig_0, status2_sig()) and
	t ##0 hold(status3_sig_0, status3_sig()) and
	t ##0 hold(buffer1_sig_abort_0, buffer1_sig_abort()) and
	t ##0 hold(buffer1_sig_addr_0, buffer1_sig_addr()) and
	t ##0 hold(buffer1_sig_data_0, buffer1_sig_data()) and
	t ##0 hold(buffer1_sig_opc_0, buffer1_sig_opc()) and
	t ##0 hold(buffer2_sig_abort_0, buffer2_sig_abort()) and
	t ##0 hold(buffer2_sig_addr_0, buffer2_sig_addr()) and
	t ##0 hold(buffer2_sig_data_0, buffer2_sig_data()) and
	t ##0 hold(buffer2_sig_opc_0, buffer2_sig_opc()) and
// Conceptual State
	t ##0 NON_EMPTY_2() and
// trigger
	t ##0 updateQ_i_sync() and
	t ##0 (updateQ_i_sig() == nxt_grant_q) and
	t ##0 (status2_var() == req_status) and
	t ##0 (status1_var() == data_staus) and
	t ##0 (status3_var() == empty_status) and
	t ##0 updateQ_i_sync()
implies
	t_end(o) ##0 NON_EMPTY_2() and
	t_end(o) ##0 buffer1_sig_abort() == buffer1_sig_abort_0 and
	t_end(o) ##0 buffer1_sig_addr() == buffer1_sig_addr_0 and
	t_end(o) ##0 buffer1_sig_data() == buffer1_sig_data_0 and
	t_end(o) ##0 buffer1_sig_opc() == buffer1_sig_opc_0 and
	t_end(o) ##0 buffer2_sig_abort() == buffer2_sig_abort_0 and
	t_end(o) ##0 buffer2_sig_addr() == buffer2_sig_addr_0 and
	t_end(o) ##0 buffer2_sig_data() == buffer2_sig_data_0 and
	t_end(o) ##0 buffer2_sig_opc() == buffer2_sig_opc_0 and
	t_end(o) ##0 buffer2_var_abort() == peripheral_request_i_sig_abort_0 and
	t_end(o) ##0 buffer2_var_addr() == peripheral_request_i_sig_addr_0 and
	t_end(o) ##0 buffer2_var_data() == peripheral_request_i_sig_data_0 and
	t_end(o) ##0 buffer2_var_opc() == peripheral_request_i_sig_opc_0 and
	t_end(o) ##0 buffer3_sig_abort() == buffer3_sig_abort_0 and
	t_end(o) ##0 buffer3_sig_addr() == buffer3_sig_addr_0 and
	t_end(o) ##0 buffer3_sig_data() == buffer3_sig_data_0 and
	t_end(o) ##0 buffer3_sig_opc() == buffer3_sig_opc_0 and
	t_end(o) ##0 buffer3_var_abort() == buffer3_var_abort_0 and
	t_end(o) ##0 buffer3_var_addr() == buffer3_var_addr_0 and
	t_end(o) ##0 buffer3_var_data() == buffer3_var_data_0 and
	t_end(o) ##0 buffer3_var_opc() == buffer3_var_opc_0 and
	t_end(o) ##0 req_o_sig() == req_o_sig_0 and
	t_end(o) ##0 status1_sig() == status1_sig_0 and
	t_end(o) ##0 status1_var() == addr_status and
	t_end(o) ##0 status2_sig() == status2_sig_0 and
	t_end(o) ##0 status2_var() == req_status and
	t_end(o) ##0 status3_sig() == status3_sig_0 and
	t_end(o) ##0 status3_var() == empty_status and
	t_end(o) ##0 tmp_buffer_abort() == peripheral_request_i_sig_abort_0 and
	t_end(o) ##0 tmp_buffer_addr() == peripheral_request_i_sig_addr_0 and
	t_end(o) ##0 tmp_buffer_data() == peripheral_request_i_sig_data_0 and
	t_end(o) ##0 tmp_buffer_opc() == peripheral_request_i_sig_opc_0;
endproperty;
NON_EMPTY_2_read_42_a: assert property (disable iff (reset) NON_EMPTY_2_read_42_p(1));// ASSIGN t_end offset here

property NON_EMPTY_2_read_43_p(o);
bool buffer3_var_abort_0;
int buffer3_var_addr_0;
int buffer3_var_data_0;
opc_t buffer3_var_opc_0;
req_status_t status3_var_0;
bool peripheral_request_i_sig_abort_0;
int peripheral_request_i_sig_addr_0;
int peripheral_request_i_sig_data_0;
opc_t peripheral_request_i_sig_opc_0;
bool buffer3_sig_abort_0;
int buffer3_sig_addr_0;
int buffer3_sig_data_0;
opc_t buffer3_sig_opc_0;
bool req_o_sig_0;
req_status_t status1_sig_0;
req_status_t status2_sig_0;
req_status_t status3_sig_0;
bool buffer1_sig_abort_0;
int buffer1_sig_addr_0;
int buffer1_sig_data_0;
opc_t buffer1_sig_opc_0;
bool buffer2_sig_abort_0;
int buffer2_sig_addr_0;
int buffer2_sig_data_0;
opc_t buffer2_sig_opc_0;
// hold
	t ##0 hold(buffer3_var_abort_0, buffer3_var_abort()) and
	t ##0 hold(buffer3_var_addr_0, buffer3_var_addr()) and
	t ##0 hold(buffer3_var_data_0, buffer3_var_data()) and
	t ##0 hold(buffer3_var_opc_0, buffer3_var_opc()) and
	t ##0 hold(status3_var_0, status3_var()) and
	t ##0 hold(peripheral_request_i_sig_abort_0, peripheral_request_i_sig_abort()) and
	t ##0 hold(peripheral_request_i_sig_addr_0, peripheral_request_i_sig_addr()) and
	t ##0 hold(peripheral_request_i_sig_data_0, peripheral_request_i_sig_data()) and
	t ##0 hold(peripheral_request_i_sig_opc_0, peripheral_request_i_sig_opc()) and
	t ##0 hold(buffer3_sig_abort_0, buffer3_sig_abort()) and
	t ##0 hold(buffer3_sig_addr_0, buffer3_sig_addr()) and
	t ##0 hold(buffer3_sig_data_0, buffer3_sig_data()) and
	t ##0 hold(buffer3_sig_opc_0, buffer3_sig_opc()) and
	t ##0 hold(req_o_sig_0, req_o_sig()) and
	t ##0 hold(status1_sig_0, status1_sig()) and
	t ##0 hold(status2_sig_0, status2_sig()) and
	t ##0 hold(status3_sig_0, status3_sig()) and
	t ##0 hold(buffer1_sig_abort_0, buffer1_sig_abort()) and
	t ##0 hold(buffer1_sig_addr_0, buffer1_sig_addr()) and
	t ##0 hold(buffer1_sig_data_0, buffer1_sig_data()) and
	t ##0 hold(buffer1_sig_opc_0, buffer1_sig_opc()) and
	t ##0 hold(buffer2_sig_abort_0, buffer2_sig_abort()) and
	t ##0 hold(buffer2_sig_addr_0, buffer2_sig_addr()) and
	t ##0 hold(buffer2_sig_data_0, buffer2_sig_data()) and
	t ##0 hold(buffer2_sig_opc_0, buffer2_sig_opc()) and
// Conceptual State
	t ##0 NON_EMPTY_2() and
// trigger
	t ##0 updateQ_i_sync() and
	t ##0 (updateQ_i_sig() == nxt_grant_q) and
	t ##0 (status2_var() == req_status) and
	t ##0 (status1_var() == data_staus) and
	t ##0 !((status3_var() == empty_status)) and
	t ##0 updateQ_i_sync()
implies
	t_end(o) ##0 NON_EMPTY_2() and
	t_end(o) ##0 buffer1_sig_abort() == buffer1_sig_abort_0 and
	t_end(o) ##0 buffer1_sig_addr() == buffer1_sig_addr_0 and
	t_end(o) ##0 buffer1_sig_data() == buffer1_sig_data_0 and
	t_end(o) ##0 buffer1_sig_opc() == buffer1_sig_opc_0 and
	t_end(o) ##0 buffer2_sig_abort() == buffer2_sig_abort_0 and
	t_end(o) ##0 buffer2_sig_addr() == buffer2_sig_addr_0 and
	t_end(o) ##0 buffer2_sig_data() == buffer2_sig_data_0 and
	t_end(o) ##0 buffer2_sig_opc() == buffer2_sig_opc_0 and
	t_end(o) ##0 buffer2_var_abort() == buffer3_var_abort_0 and
	t_end(o) ##0 buffer2_var_addr() == buffer3_var_addr_0 and
	t_end(o) ##0 buffer2_var_data() == buffer3_var_data_0 and
	t_end(o) ##0 buffer2_var_opc() == buffer3_var_opc_0 and
	t_end(o) ##0 buffer3_sig_abort() == buffer3_sig_abort_0 and
	t_end(o) ##0 buffer3_sig_addr() == buffer3_sig_addr_0 and
	t_end(o) ##0 buffer3_sig_data() == buffer3_sig_data_0 and
	t_end(o) ##0 buffer3_sig_opc() == buffer3_sig_opc_0 and
	t_end(o) ##0 buffer3_var_abort() == peripheral_request_i_sig_abort_0 and
	t_end(o) ##0 buffer3_var_addr() == peripheral_request_i_sig_addr_0 and
	t_end(o) ##0 buffer3_var_data() == peripheral_request_i_sig_data_0 and
	t_end(o) ##0 buffer3_var_opc() == peripheral_request_i_sig_opc_0 and
	t_end(o) ##0 req_o_sig() == req_o_sig_0 and
	t_end(o) ##0 status1_sig() == status1_sig_0 and
	t_end(o) ##0 status1_var() == addr_status and
	t_end(o) ##0 status2_sig() == status2_sig_0 and
	t_end(o) ##0 status2_var() == status3_var_0 and
	t_end(o) ##0 status3_sig() == status3_sig_0 and
	t_end(o) ##0 status3_var() == req_status and
	t_end(o) ##0 tmp_buffer_abort() == peripheral_request_i_sig_abort_0 and
	t_end(o) ##0 tmp_buffer_addr() == peripheral_request_i_sig_addr_0 and
	t_end(o) ##0 tmp_buffer_data() == peripheral_request_i_sig_data_0 and
	t_end(o) ##0 tmp_buffer_opc() == peripheral_request_i_sig_opc_0;
endproperty;
NON_EMPTY_2_read_43_a: assert property (disable iff (reset) NON_EMPTY_2_read_43_p(1));// ASSIGN t_end offset here

property NON_EMPTY_2_read_44_p(o);
bool buffer3_var_abort_0;
int buffer3_var_addr_0;
int buffer3_var_data_0;
opc_t buffer3_var_opc_0;
bool peripheral_request_i_sig_abort_0;
int peripheral_request_i_sig_addr_0;
int peripheral_request_i_sig_data_0;
opc_t peripheral_request_i_sig_opc_0;
bool buffer3_sig_abort_0;
int buffer3_sig_addr_0;
int buffer3_sig_data_0;
opc_t buffer3_sig_opc_0;
bool req_o_sig_0;
req_status_t status1_sig_0;
req_status_t status2_sig_0;
req_status_t status3_sig_0;
bool buffer1_sig_abort_0;
int buffer1_sig_addr_0;
int buffer1_sig_data_0;
opc_t buffer1_sig_opc_0;
bool buffer2_sig_abort_0;
int buffer2_sig_addr_0;
int buffer2_sig_data_0;
opc_t buffer2_sig_opc_0;
// hold
	t ##0 hold(buffer3_var_abort_0, buffer3_var_abort()) and
	t ##0 hold(buffer3_var_addr_0, buffer3_var_addr()) and
	t ##0 hold(buffer3_var_data_0, buffer3_var_data()) and
	t ##0 hold(buffer3_var_opc_0, buffer3_var_opc()) and
	t ##0 hold(peripheral_request_i_sig_abort_0, peripheral_request_i_sig_abort()) and
	t ##0 hold(peripheral_request_i_sig_addr_0, peripheral_request_i_sig_addr()) and
	t ##0 hold(peripheral_request_i_sig_data_0, peripheral_request_i_sig_data()) and
	t ##0 hold(peripheral_request_i_sig_opc_0, peripheral_request_i_sig_opc()) and
	t ##0 hold(buffer3_sig_abort_0, buffer3_sig_abort()) and
	t ##0 hold(buffer3_sig_addr_0, buffer3_sig_addr()) and
	t ##0 hold(buffer3_sig_data_0, buffer3_sig_data()) and
	t ##0 hold(buffer3_sig_opc_0, buffer3_sig_opc()) and
	t ##0 hold(req_o_sig_0, req_o_sig()) and
	t ##0 hold(status1_sig_0, status1_sig()) and
	t ##0 hold(status2_sig_0, status2_sig()) and
	t ##0 hold(status3_sig_0, status3_sig()) and
	t ##0 hold(buffer1_sig_abort_0, buffer1_sig_abort()) and
	t ##0 hold(buffer1_sig_addr_0, buffer1_sig_addr()) and
	t ##0 hold(buffer1_sig_data_0, buffer1_sig_data()) and
	t ##0 hold(buffer1_sig_opc_0, buffer1_sig_opc()) and
	t ##0 hold(buffer2_sig_abort_0, buffer2_sig_abort()) and
	t ##0 hold(buffer2_sig_addr_0, buffer2_sig_addr()) and
	t ##0 hold(buffer2_sig_data_0, buffer2_sig_data()) and
	t ##0 hold(buffer2_sig_opc_0, buffer2_sig_opc()) and
// Conceptual State
	t ##0 NON_EMPTY_2() and
// trigger
	t ##0 updateQ_i_sync() and
	t ##0 (updateQ_i_sig() == nxt_btr_q) and
	t ##0 (status1_var() == data_staus) and
	t ##0 (status3_var() == empty_status) and
	t ##0 updateQ_i_sync()
implies
	t_end(o) ##0 NON_EMPTY_2() and
	t_end(o) ##0 buffer1_sig_abort() == buffer1_sig_abort_0 and
	t_end(o) ##0 buffer1_sig_addr() == buffer1_sig_addr_0 and
	t_end(o) ##0 buffer1_sig_data() == buffer1_sig_data_0 and
	t_end(o) ##0 buffer1_sig_opc() == buffer1_sig_opc_0 and
	t_end(o) ##0 buffer2_sig_abort() == buffer2_sig_abort_0 and
	t_end(o) ##0 buffer2_sig_addr() == buffer2_sig_addr_0 and
	t_end(o) ##0 buffer2_sig_data() == buffer2_sig_data_0 and
	t_end(o) ##0 buffer2_sig_opc() == buffer2_sig_opc_0 and
	t_end(o) ##0 buffer2_var_abort() == peripheral_request_i_sig_abort_0 and
	t_end(o) ##0 buffer2_var_addr() == peripheral_request_i_sig_addr_0 and
	t_end(o) ##0 buffer2_var_data() == peripheral_request_i_sig_data_0 and
	t_end(o) ##0 buffer2_var_opc() == peripheral_request_i_sig_opc_0 and
	t_end(o) ##0 buffer3_sig_abort() == buffer3_sig_abort_0 and
	t_end(o) ##0 buffer3_sig_addr() == buffer3_sig_addr_0 and
	t_end(o) ##0 buffer3_sig_data() == buffer3_sig_data_0 and
	t_end(o) ##0 buffer3_sig_opc() == buffer3_sig_opc_0 and
	t_end(o) ##0 buffer3_var_abort() == buffer3_var_abort_0 and
	t_end(o) ##0 buffer3_var_addr() == buffer3_var_addr_0 and
	t_end(o) ##0 buffer3_var_data() == buffer3_var_data_0 and
	t_end(o) ##0 buffer3_var_opc() == buffer3_var_opc_0 and
	t_end(o) ##0 req_o_sig() == req_o_sig_0 and
	t_end(o) ##0 status1_sig() == status1_sig_0 and
	t_end(o) ##0 status1_var() == addr_status and
	t_end(o) ##0 status2_sig() == status2_sig_0 and
	t_end(o) ##0 status2_var() == req_status and
	t_end(o) ##0 status3_sig() == status3_sig_0 and
	t_end(o) ##0 status3_var() == empty_status and
	t_end(o) ##0 tmp_buffer_abort() == peripheral_request_i_sig_abort_0 and
	t_end(o) ##0 tmp_buffer_addr() == peripheral_request_i_sig_addr_0 and
	t_end(o) ##0 tmp_buffer_data() == peripheral_request_i_sig_data_0 and
	t_end(o) ##0 tmp_buffer_opc() == peripheral_request_i_sig_opc_0;
endproperty;
NON_EMPTY_2_read_44_a: assert property (disable iff (reset) NON_EMPTY_2_read_44_p(1));// ASSIGN t_end offset here

property NON_EMPTY_2_read_45_p(o);
bool buffer3_var_abort_0;
int buffer3_var_addr_0;
int buffer3_var_data_0;
opc_t buffer3_var_opc_0;
req_status_t status3_var_0;
bool peripheral_request_i_sig_abort_0;
int peripheral_request_i_sig_addr_0;
int peripheral_request_i_sig_data_0;
opc_t peripheral_request_i_sig_opc_0;
bool buffer3_sig_abort_0;
int buffer3_sig_addr_0;
int buffer3_sig_data_0;
opc_t buffer3_sig_opc_0;
bool req_o_sig_0;
req_status_t status1_sig_0;
req_status_t status2_sig_0;
req_status_t status3_sig_0;
bool buffer1_sig_abort_0;
int buffer1_sig_addr_0;
int buffer1_sig_data_0;
opc_t buffer1_sig_opc_0;
bool buffer2_sig_abort_0;
int buffer2_sig_addr_0;
int buffer2_sig_data_0;
opc_t buffer2_sig_opc_0;
// hold
	t ##0 hold(buffer3_var_abort_0, buffer3_var_abort()) and
	t ##0 hold(buffer3_var_addr_0, buffer3_var_addr()) and
	t ##0 hold(buffer3_var_data_0, buffer3_var_data()) and
	t ##0 hold(buffer3_var_opc_0, buffer3_var_opc()) and
	t ##0 hold(status3_var_0, status3_var()) and
	t ##0 hold(peripheral_request_i_sig_abort_0, peripheral_request_i_sig_abort()) and
	t ##0 hold(peripheral_request_i_sig_addr_0, peripheral_request_i_sig_addr()) and
	t ##0 hold(peripheral_request_i_sig_data_0, peripheral_request_i_sig_data()) and
	t ##0 hold(peripheral_request_i_sig_opc_0, peripheral_request_i_sig_opc()) and
	t ##0 hold(buffer3_sig_abort_0, buffer3_sig_abort()) and
	t ##0 hold(buffer3_sig_addr_0, buffer3_sig_addr()) and
	t ##0 hold(buffer3_sig_data_0, buffer3_sig_data()) and
	t ##0 hold(buffer3_sig_opc_0, buffer3_sig_opc()) and
	t ##0 hold(req_o_sig_0, req_o_sig()) and
	t ##0 hold(status1_sig_0, status1_sig()) and
	t ##0 hold(status2_sig_0, status2_sig()) and
	t ##0 hold(status3_sig_0, status3_sig()) and
	t ##0 hold(buffer1_sig_abort_0, buffer1_sig_abort()) and
	t ##0 hold(buffer1_sig_addr_0, buffer1_sig_addr()) and
	t ##0 hold(buffer1_sig_data_0, buffer1_sig_data()) and
	t ##0 hold(buffer1_sig_opc_0, buffer1_sig_opc()) and
	t ##0 hold(buffer2_sig_abort_0, buffer2_sig_abort()) and
	t ##0 hold(buffer2_sig_addr_0, buffer2_sig_addr()) and
	t ##0 hold(buffer2_sig_data_0, buffer2_sig_data()) and
	t ##0 hold(buffer2_sig_opc_0, buffer2_sig_opc()) and
// Conceptual State
	t ##0 NON_EMPTY_2() and
// trigger
	t ##0 updateQ_i_sync() and
	t ##0 (updateQ_i_sig() == nxt_btr_q) and
	t ##0 (status1_var() == data_staus) and
	t ##0 !((status3_var() == empty_status)) and
	t ##0 updateQ_i_sync()
implies
	t_end(o) ##0 NON_EMPTY_2() and
	t_end(o) ##0 buffer1_sig_abort() == buffer1_sig_abort_0 and
	t_end(o) ##0 buffer1_sig_addr() == buffer1_sig_addr_0 and
	t_end(o) ##0 buffer1_sig_data() == buffer1_sig_data_0 and
	t_end(o) ##0 buffer1_sig_opc() == buffer1_sig_opc_0 and
	t_end(o) ##0 buffer2_sig_abort() == buffer2_sig_abort_0 and
	t_end(o) ##0 buffer2_sig_addr() == buffer2_sig_addr_0 and
	t_end(o) ##0 buffer2_sig_data() == buffer2_sig_data_0 and
	t_end(o) ##0 buffer2_sig_opc() == buffer2_sig_opc_0 and
	t_end(o) ##0 buffer2_var_abort() == buffer3_var_abort_0 and
	t_end(o) ##0 buffer2_var_addr() == buffer3_var_addr_0 and
	t_end(o) ##0 buffer2_var_data() == buffer3_var_data_0 and
	t_end(o) ##0 buffer2_var_opc() == buffer3_var_opc_0 and
	t_end(o) ##0 buffer3_sig_abort() == buffer3_sig_abort_0 and
	t_end(o) ##0 buffer3_sig_addr() == buffer3_sig_addr_0 and
	t_end(o) ##0 buffer3_sig_data() == buffer3_sig_data_0 and
	t_end(o) ##0 buffer3_sig_opc() == buffer3_sig_opc_0 and
	t_end(o) ##0 buffer3_var_abort() == peripheral_request_i_sig_abort_0 and
	t_end(o) ##0 buffer3_var_addr() == peripheral_request_i_sig_addr_0 and
	t_end(o) ##0 buffer3_var_data() == peripheral_request_i_sig_data_0 and
	t_end(o) ##0 buffer3_var_opc() == peripheral_request_i_sig_opc_0 and
	t_end(o) ##0 req_o_sig() == req_o_sig_0 and
	t_end(o) ##0 status1_sig() == status1_sig_0 and
	t_end(o) ##0 status1_var() == addr_status and
	t_end(o) ##0 status2_sig() == status2_sig_0 and
	t_end(o) ##0 status2_var() == status3_var_0 and
	t_end(o) ##0 status3_sig() == status3_sig_0 and
	t_end(o) ##0 status3_var() == req_status and
	t_end(o) ##0 tmp_buffer_abort() == peripheral_request_i_sig_abort_0 and
	t_end(o) ##0 tmp_buffer_addr() == peripheral_request_i_sig_addr_0 and
	t_end(o) ##0 tmp_buffer_data() == peripheral_request_i_sig_data_0 and
	t_end(o) ##0 tmp_buffer_opc() == peripheral_request_i_sig_opc_0;
endproperty;
NON_EMPTY_2_read_45_a: assert property (disable iff (reset) NON_EMPTY_2_read_45_p(1));// ASSIGN t_end offset here

endmodule

//DESIGNER SHOULD PAY ATTENTION FOR USING THE MODEL CORRECT NAME FOR BINDING AND TO REFER TO THE RESET SIGNAL USED IN IT
bind requesteQ requesteQ_verification inst (.*, .reset(requesteQ.rst));
